{"version":3,"sources":["containers/navs/Breadcrumb.js","components/StateButton.js","hooks/use-request.js","components/cards/FaqCard.js","components/application/AddFaqModal.js","components/application/FaqList.js","views/app/Challenges/faq-view.js"],"names":["getMenuTitle","sub","adminRoot","id","getUrl","path","split","BreadcrumbItems","match","substr","paths","filter","Boolean","length","indexOf","x","className","map","index","active","to","BreadcrumbContainer","heading","StateButton","color","size","children","onClick","next","successNext","useState","status","setStatus","message","setMessage","messageShow","setMessageShow","classnames","then","res","catch","err","finally","setTimeout","disabled","placement","isOpen","target","useRequest","url","method","data","headers","nextSuccess","nextError","responseData","setData","loading","setLoading","error","setError","a","instance","response","success","log","FaqCard","setShowIndex","showingIndex","item","aria-expanded","question","dangerouslySetInnerHTML","__html","answer","connect","authUser","applicationData","accessToken","faqs","getFAQAction","getFAQ","setOpenAddModal","hackathon_id","values","setValues","Authorization","NotificationManager","wait","password","doRequest","handleChange","event","key","value","ModalHeader","IntlMessages","ModalBody","FormGroup","Label","Input","type","onChange","rows","ModalFooter","Button","useEffect","AppError","Card","CardBody","role","Faq","params","history","useHistory","openAddModal","Row","xxs","Breadcrumb","md","CustomInput","label","Modal","toggle","Promise","failed","submit_status","push","updateProfile"],"mappings":"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","file":"static/js/challenges-faq-view.341ba04f.chunk.js","sourcesContent":["/* eslint-disable react/no-array-index-key */\r\nimport React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport IntlMessages from '../../helpers/IntlMessages';\r\nimport { adminRoot } from '../../constants/defaultValues';\r\n\r\nconst getMenuTitle = (sub) => {\r\n  if (`/${sub}` === adminRoot) return <IntlMessages id=\"menu.home\" />;\r\n  return <IntlMessages id={`menu.${sub}`} />;\r\n};\r\n\r\nconst getUrl = (path, sub) => {\r\n  return path.split(sub)[0] + sub;\r\n};\r\n\r\nconst BreadcrumbContainer = ({ heading, match }) => {\r\n  return (\r\n    <>\r\n      {heading && (\r\n        <h1>\r\n          <IntlMessages id={heading} />\r\n        </h1>\r\n      )}\r\n      {match ? <BreadcrumbItems match={match} /> : null}\r\n    </>\r\n  );\r\n};\r\n\r\nconst BreadcrumbItems = ({ match }) => {\r\n  const path = match.path.substr(1);\r\n  let paths = path.split('/').filter(Boolean);\r\n\r\n  if (paths[paths.length - 1].indexOf(':') > -1) {\r\n    paths = paths.filter((x) => x.indexOf(':') === -1);\r\n  }\r\n  return (\r\n    <>\r\n      <Breadcrumb className=\"pt-0 breadcrumb-container d-none d-sm-block d-lg-inline-block\">\r\n        {paths.map((sub, index) => {\r\n          return (\r\n            <BreadcrumbItem key={index} active={paths.length === index + 1}>\r\n              {paths.length !== index + 1 ? (\r\n                <NavLink to={`/${getUrl(path, sub, index)}`}>\r\n                  {getMenuTitle(sub)}\r\n                </NavLink>\r\n              ) : (\r\n                getMenuTitle(sub)\r\n              )}\r\n            </BreadcrumbItem>\r\n          );\r\n        })}\r\n      </Breadcrumb>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BreadcrumbContainer;\r\n","import React, { useState } from 'react';\r\nimport { Button, Popover, PopoverBody } from 'reactstrap';\r\nimport classnames from 'classnames';\r\n\r\nconst StateButton = ({\r\n  id,\r\n  className,\r\n  color,\r\n  size,\r\n  children,\r\n  onClick,\r\n  next,\r\n  successNext,\r\n}) => {\r\n  const [status, setStatus] = useState('default');\r\n  const [message, setMessage] = useState('');\r\n  const [messageShow, setMessageShow] = useState(false);\r\n\r\n  const handleOnClick = () => {\r\n    setStatus('processing');\r\n\r\n    onClick()\r\n      .then((res) => {\r\n        setMessage(res);\r\n        setStatus('success');\r\n        if (successNext) {\r\n          successNext();\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setMessage(err);\r\n        setStatus('fail');\r\n      })\r\n      .finally(() => {\r\n        setMessageShow(true);\r\n        setTimeout(() => {\r\n          setStatus('default');\r\n          setMessageShow(false);\r\n          if (next) {\r\n            next();\r\n          }\r\n        }, 3000);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <span>\r\n      <Button\r\n        id={id}\r\n        className={`btn-multiple-state  ${className}  ${classnames({\r\n          'show-spinner': status === 'processing',\r\n          'show-success': status === 'success',\r\n          'show-fail': status === 'fail',\r\n        })}`}\r\n        size={size}\r\n        color={color}\r\n        onClick={handleOnClick}\r\n        disabled={status !== 'default'}\r\n      >\r\n        <Popover placement=\"top\" isOpen={messageShow} target={id}>\r\n          <PopoverBody>{message}</PopoverBody>\r\n        </Popover>\r\n        <span className=\"spinner d-inline-block\">\r\n          <span className=\"bounce1\" />\r\n          <span className=\"bounce2\" />\r\n          <span className=\"bounce3\" />\r\n        </span>\r\n        <span className=\"icon success\">\r\n          <i className=\"simple-icon-check\" />\r\n        </span>\r\n        <span className=\"icon fail\">\r\n          <i className=\"simple-icon-exclamation\" />\r\n        </span>\r\n        <span className=\"label\">{children}</span>\r\n      </Button>\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default StateButton;\r\n","import { useState } from 'react';\r\nimport instance from '../helpers/axiosInstance';\r\nimport { log } from '../helpers/Utils';\r\n\r\nconst useRequest = ({ url, method, data, headers, nextSuccess, nextError }) => {\r\n  const [responseData, setData] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n\r\n  const doRequest = async () => {\r\n    try {\r\n      setError(null);\r\n      setLoading(true);\r\n      const response = await instance({\r\n        url,\r\n        method,\r\n        headers,\r\n        data,\r\n      });\r\n\r\n      if (response.data.success) {\r\n        if (nextSuccess) {\r\n          nextSuccess();\r\n        }\r\n        setLoading(false);\r\n        setData(response.data.data);\r\n      } else {\r\n        if (nextError) {\r\n          nextError(response.data.error);\r\n        }\r\n        setLoading(false);\r\n        setError(response.data.error);\r\n      }\r\n    } catch (err) {\r\n      log(err);\r\n      setLoading(false);\r\n      setError(err);\r\n    }\r\n  };\r\n\r\n  return [doRequest, loading, error, responseData];\r\n};\r\n\r\nexport default useRequest;\r\n","/* eslint-disable react/no-danger */\r\nimport React from 'react';\r\nimport { Button, Card, Collapse } from 'reactstrap';\r\n\r\nconst FaqCard = ({ index, setShowIndex, showingIndex, item }) => {\r\n  return (\r\n    <Card className=\"d-flex mb-2\">\r\n      <div className=\"d-flex flex-grow-1 min-width-zero\">\r\n        <Button\r\n          color=\"link\"\r\n          className=\"card-body btn-empty btn-link list-item-heading text-left text-one\"\r\n          onClick={() => setShowIndex(index)}\r\n          aria-expanded={showingIndex === index}\r\n        >\r\n          {item.question}\r\n        </Button>\r\n      </div>\r\n      <Collapse isOpen={showingIndex === index}>\r\n        <div\r\n          className=\"card-body accordion-content pt-0\"\r\n          dangerouslySetInnerHTML={{ __html: item.answer }}\r\n        />\r\n      </Collapse>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default FaqCard;\r\n","/* eslint-disable camelcase */\r\n/* eslint-disable prefer-promise-reject-errors */\r\nimport React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  Button,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader,\r\n} from 'reactstrap';\r\nimport IntlMessages from '../../helpers/IntlMessages';\r\nimport { wait } from '../../helpers/Utils';\r\nimport useRequest from '../../hooks/use-request';\r\nimport { getFAQ } from '../../redux/actions';\r\nimport { NotificationManager } from '../common/react-notifications';\r\n\r\nconst AddFaqModal = ({ setOpenAddModal, id, accessToken, getFAQAction }) => {\r\n  const [values, setValues] = useState({\r\n    hackathon_id: id,\r\n    question: '',\r\n    answer: '',\r\n  });\r\n\r\n  const [doRequest, loading] = useRequest({\r\n    url: '/addFaqs',\r\n    method: 'POST',\r\n    headers: {\r\n      Authorization: accessToken,\r\n    },\r\n    data: { faqs: { ...values } },\r\n    nextSuccess: () => {\r\n      NotificationManager.success(\r\n        'FAQ added Successfully',\r\n        'Application Update Success',\r\n        3000,\r\n        null,\r\n        null,\r\n        ''\r\n      );\r\n      getFAQAction(accessToken, id);\r\n      wait(1200, () => {\r\n        setValues({ ...values, password: 'null' });\r\n        setOpenAddModal(false);\r\n      });\r\n    },\r\n    nextError: (error) => {\r\n      NotificationManager.error(\r\n        error,\r\n        'Application Update Error',\r\n        3000,\r\n        null,\r\n        null,\r\n        ''\r\n      );\r\n    },\r\n  });\r\n\r\n  const handleChange = (event, key, value = false) => {\r\n    setValues({\r\n      ...values,\r\n      [key]: value ? event : event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    doRequest();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ModalHeader>\r\n        <h2 className=\"lead\">\r\n          <IntlMessages id=\"challenges.modal.application-add-faq-title\" />\r\n        </h2>\r\n      </ModalHeader>\r\n\r\n      <ModalBody>\r\n        <FormGroup>\r\n          <Label>\r\n            <IntlMessages id=\"challenges.modal.faq\" />\r\n          </Label>\r\n          <Input\r\n            type=\"text\"\r\n            value={values.question}\r\n            onChange={(event) => handleChange(event, 'question')}\r\n          />\r\n        </FormGroup>\r\n\r\n        <FormGroup>\r\n          <Label>\r\n            <IntlMessages id=\"challenges.modal.faq-description\" />\r\n          </Label>\r\n          <Input\r\n            type=\"textarea\"\r\n            rows=\"6\"\r\n            value={values.answer}\r\n            onChange={(event) => handleChange(event, 'answer')}\r\n          />\r\n        </FormGroup>\r\n      </ModalBody>\r\n\r\n      <ModalFooter>\r\n        <Button\r\n          id=\"add-faq-button\"\r\n          color=\"primary\"\r\n          className={`btn-shadow btn-multiple-state ${\r\n            loading ? 'show-spinner' : ''\r\n          }`}\r\n          onClick={() => handleSubmit(values)}\r\n        >\r\n          <span className=\"spinner d-inline-block\">\r\n            <span className=\"bounce1\" />\r\n            <span className=\"bounce2\" />\r\n            <span className=\"bounce3\" />\r\n          </span>\r\n          <span className=\"label\">\r\n            <IntlMessages id=\"challenges.modal.application-add\" />\r\n          </span>\r\n        </Button>\r\n        <Button color=\"danger\" onClick={() => setOpenAddModal(false)}>\r\n          <IntlMessages id=\"challenges.modal.application-cancel\" />\r\n        </Button>\r\n      </ModalFooter>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ authUser, applicationData }) => {\r\n  const { accessToken } = authUser;\r\n  const { faqs, loading, error } = applicationData;\r\n  return { accessToken, faqs, loading, error };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  getFAQAction: getFAQ,\r\n})(AddFaqModal);\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Card, CardBody } from 'reactstrap';\r\nimport AppError from '../../helpers/AppError';\r\nimport IntlMessages from '../../helpers/IntlMessages';\r\nimport { getFAQ } from '../../redux/actions';\r\n\r\nimport FaqCard from '../cards/FaqCard';\r\n\r\nconst FaqList = ({ id, getFAQAction, accessToken, faqs, loading, error }) => {\r\n  const [showingIndex, setShowIndex] = useState(0);\r\n\r\n  useEffect(() => {\r\n    getFAQAction(accessToken, id);\r\n  }, []);\r\n\r\n  if (error) throw new AppError(error);\r\n\r\n  return (\r\n    <>\r\n      <Card className=\"mb-4\">\r\n        <CardBody>\r\n          <h3 className=\"h3\">\r\n            <IntlMessages id=\"challenges.added-faqs\" />\r\n          </h3>\r\n        </CardBody>\r\n      </Card>\r\n\r\n      {/* <pre>{JSON.stringify(faqs, null, 2)}</pre> */}\r\n\r\n      {loading ? (\r\n        <div className=\"d-flex justify-content-center m-4\">\r\n          <div className=\"loading\" role=\"status\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          {faqs.map((item, index) => (\r\n            <FaqCard\r\n              // eslint-disable-next-line react/no-array-index-key\r\n              key={`faqItem_${index}`}\r\n              item={item}\r\n              index={index}\r\n              showingIndex={showingIndex}\r\n              setShowIndex={setShowIndex}\r\n            />\r\n          ))}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ authUser, applicationData }) => {\r\n  const { accessToken } = authUser;\r\n  const { faqs, loading, error } = applicationData;\r\n  return { accessToken, faqs, loading, error };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  getFAQAction: getFAQ,\r\n})(FaqList);\r\n","/* eslint-disable prefer-promise-reject-errors */\r\nimport React, { useState } from 'react';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CustomInput,\r\n  FormGroup,\r\n  Modal,\r\n  Row,\r\n} from 'reactstrap';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport AddFaqModal from '../../../components/application/AddFaqModal';\r\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\r\nimport { adminRoot } from '../../../constants/defaultValues';\r\n\r\nimport Breadcrumb from '../../../containers/navs/Breadcrumb';\r\nimport AppError from '../../../helpers/AppError';\r\nimport IntlMessages from '../../../helpers/IntlMessages';\r\n\r\nimport FaqList from '../../../components/application/FaqList';\r\nimport StateButton from '../../../components/StateButton';\r\nimport instance from '../../../helpers/axiosInstance';\r\n\r\nconst Faq = ({ match }) => {\r\n  const { id } = match.params;\r\n\r\n  if (!id) throw new AppError('Please provide a Hackathon ID');\r\n\r\n  const history = useHistory();\r\n\r\n  const [openAddModal, setOpenAddModal] = useState(false);\r\n\r\n  const handleSubmitHackathon = () => {\r\n    return new Promise((success, failed) => {\r\n      const updateProfile = async () => {\r\n        try {\r\n          const response = await instance({\r\n            method: 'POST',\r\n            url: '/updateHackathon',\r\n            data: { id, submit_status: 1 },\r\n          });\r\n\r\n          const { data } = response;\r\n          if (data.success) {\r\n            success('Hackathon submitted successfully!');\r\n            history.push(`${adminRoot}/dashboard`)\r\n          } else {\r\n            failed('Failed to update hackathon!');\r\n          }\r\n        } catch {\r\n          failed('Failed to update hackathon!');\r\n        }\r\n      };\r\n      updateProfile();\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Colxx xxs=\"12\">\r\n          <Breadcrumb heading=\"menu.faq\" match={match} />\r\n          <Separator className=\"mb-5\" />\r\n        </Colxx>\r\n      </Row>\r\n\r\n      <Row className=\"justify-content-center\">\r\n        <Colxx xxs=\"12\" md=\"6\">\r\n          <FaqList id={id} />\r\n        </Colxx>\r\n\r\n        <Colxx xxs=\"12\" md=\"6\">\r\n          <Card>\r\n            <CardBody>\r\n              <Row className=\"justify-content-center m-2\">\r\n                <Button onClick={() => setOpenAddModal(true)}>\r\n                  <IntlMessages id=\"challenges.add-faq-button\" />\r\n                </Button>\r\n              </Row>\r\n\r\n              <Row className=\"justify-content-center m-2\">\r\n                <CustomInput\r\n                  type=\"checkbox\"\r\n                  label={<IntlMessages id=\"challenges.add-faq-checkbox\" />}\r\n                />\r\n              </Row>\r\n\r\n              <Modal\r\n                isOpen={openAddModal}\r\n                toggle={() => setOpenAddModal(!openAddModal)}\r\n              >\r\n                <AddFaqModal setOpenAddModal={setOpenAddModal} id={id} />\r\n              </Modal>\r\n            </CardBody>\r\n          </Card>\r\n        </Colxx>\r\n      </Row>\r\n\r\n      <Row>\r\n        <Colxx>\r\n          {/* <FormGroup className=\"text-center\">\r\n            <Button\r\n              color=\"primary\"\r\n              className=\"m-3\"\r\n              onClick={() =>\r\n                history.push(`${adminRoot}/challenges/sponsors/${id}`)\r\n              }\r\n            >\r\n              <IntlMessages id=\"forms.previous\" />\r\n            </Button>\r\n          </FormGroup> */}\r\n\r\n          <FormGroup className=\"text-center\">\r\n            <StateButton\r\n              id=\"submit-hackathons\"\r\n              onClick={handleSubmitHackathon}\r\n              color=\"primary\"\r\n              className=\"m-3\"\r\n            >\r\n              <IntlMessages id=\"forms.submit-hackathon\" />\r\n            </StateButton>\r\n          </FormGroup>\r\n        </Colxx>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Faq;\r\n"],"sourceRoot":""}