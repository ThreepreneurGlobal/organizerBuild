{"version":3,"sources":["containers/navs/Breadcrumb.js","components/StateButton.js","components/cards/JudgeCard.js","components/application/AddJudgeModal.js","components/application/JudgesList.js","views/app/Challenges/judges-view.js"],"names":["getMenuTitle","sub","adminRoot","id","getUrl","path","split","BreadcrumbItems","match","substr","paths","filter","Boolean","length","indexOf","x","className","map","index","active","to","BreadcrumbContainer","heading","StateButton","color","size","children","onClick","next","successNext","useState","status","setStatus","message","setMessage","messageShow","setMessageShow","classnames","then","res","catch","err","finally","setTimeout","disabled","placement","isOpen","target","JudgeCard","data","isImg","console","log","profile_url","name","created_at","substring","src","alt","width","job_title","company","about","connect","accessToken","authUser","getJudgeAction","getJudge","setOpenAddModal","hackathon_id","values","setValues","formData","FormData","handleChange","event","key","value","handleSubmit","newData","a","append","Promise","success","failed","instance","method","url","headers","Authorization","timeout","response","addJudge","ModalHeader","IntlMessages","ModalBody","FormGroup","Label","Input","type","onChange","rows","InputGroup","CustomInput","accept","files","delete","ModalFooter","window","location","reload","Button","applicationData","judges","loading","error","useEffect","AppError","Card","CardBody","role","item","Judges","params","history","useHistory","openAddModal","Row","xxs","Breadcrumb","md","label","Modal","toggle","push"],"mappings":"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","file":"static/js/challenges-judges-view.f12c6415.chunk.js","sourcesContent":["/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport IntlMessages from '../../helpers/IntlMessages';\nimport { adminRoot } from '../../constants/defaultValues';\n\nconst getMenuTitle = (sub) => {\n  if (`/${sub}` === adminRoot) return <IntlMessages id=\"menu.home\" />;\n  return <IntlMessages id={`menu.${sub}`} />;\n};\n\nconst getUrl = (path, sub) => {\n  return path.split(sub)[0] + sub;\n};\n\nconst BreadcrumbContainer = ({ heading, match }) => {\n  return (\n    <>\n      {heading && (\n        <h1>\n          <IntlMessages id={heading} />\n        </h1>\n      )}\n      {match ? <BreadcrumbItems match={match} /> : null}\n    </>\n  );\n};\n\nconst BreadcrumbItems = ({ match }) => {\n  const path = match.path.substr(1);\n  let paths = path.split('/').filter(Boolean);\n\n  if (paths[paths.length - 1].indexOf(':') > -1) {\n    paths = paths.filter((x) => x.indexOf(':') === -1);\n  }\n  return (\n    <>\n      <Breadcrumb className=\"pt-0 breadcrumb-container d-none d-sm-block d-lg-inline-block\">\n        {paths.map((sub, index) => {\n          return (\n            <BreadcrumbItem key={index} active={paths.length === index + 1}>\n              {paths.length !== index + 1 ? (\n                <NavLink to={`/${getUrl(path, sub, index)}`}>\n                  {getMenuTitle(sub)}\n                </NavLink>\n              ) : (\n                getMenuTitle(sub)\n              )}\n            </BreadcrumbItem>\n          );\n        })}\n      </Breadcrumb>\n    </>\n  );\n};\n\nexport default BreadcrumbContainer;\n","import React, { useState } from 'react';\nimport { Button, Popover, PopoverBody } from 'reactstrap';\nimport classnames from 'classnames';\n\nconst StateButton = ({\n  id,\n  className,\n  color,\n  size,\n  children,\n  onClick,\n  next,\n  successNext,\n}) => {\n  const [status, setStatus] = useState('default');\n  const [message, setMessage] = useState('');\n  const [messageShow, setMessageShow] = useState(false);\n\n  const handleOnClick = () => {\n    setStatus('processing');\n\n    onClick()\n      .then((res) => {\n        setMessage(res);\n        setStatus('success');\n        if (successNext) {\n          successNext();\n        }\n      })\n      .catch((err) => {\n        setMessage(err);\n        setStatus('fail');\n      })\n      .finally(() => {\n        setMessageShow(true);\n        setTimeout(() => {\n          setStatus('default');\n          setMessageShow(false);\n          if (next) {\n            next();\n          }\n        }, 3000);\n      });\n  };\n\n  return (\n    <span>\n      <Button\n        id={id}\n        className={`btn-multiple-state  ${className}  ${classnames({\n          'show-spinner': status === 'processing',\n          'show-success': status === 'success',\n          'show-fail': status === 'fail',\n        })}`}\n        size={size}\n        color={color}\n        onClick={handleOnClick}\n        disabled={status !== 'default'}\n      >\n        <Popover placement=\"top\" isOpen={messageShow} target={id}>\n          <PopoverBody>{message}</PopoverBody>\n        </Popover>\n        <span className=\"spinner d-inline-block\">\n          <span className=\"bounce1\" />\n          <span className=\"bounce2\" />\n          <span className=\"bounce3\" />\n        </span>\n        <span className=\"icon success\">\n          <i className=\"simple-icon-check\" />\n        </span>\n        <span className=\"icon fail\">\n          <i className=\"simple-icon-exclamation\" />\n        </span>\n        <span className=\"label\">{children}</span>\n      </Button>\n    </span>\n  );\n};\n\nexport default StateButton;\n","import React from 'react';\nimport { /* Button, */ Card } from 'reactstrap';\n\n// import { NavLink } from 'react-router-dom';\n\nconst JudgeCard = ({ data }) => {\n  let isImg = false;\n  console.log(data);\n  const img = \"/assets/img/profiles/l-2.jpg\"\n  if (data.profile_url.match(/\\.(jpeg|jpg|gif|png)$/) !== null) {\n    isImg = true;\n  }\n  return (\n\n    //   <Card className=\"d-flex flex-row mb-4\">\n    //     <NavLink to={data.profile_url} className=\"d-flex\">\n    //       <img src={isImg?data.profile_url:img} alt=\"Not Found\" width=\"100px\" className=\"m-4\" />\n    //     </NavLink>\n    //     <div className=\" d-flex flex-grow-1 min-width-zero\">\n    //       <CardBody className=\" pl-0 align-self-center d-flex flex-column flex-lg-row justify-content-between min-width-zero\">\n    //         <div className=\"min-width-zero\">\n    //           <NavLink to={data.profile_url}>\n    //             <CardSubtitle className=\"truncate mb-1\">Name:{data.name}</CardSubtitle>\n    //           </NavLink>\n    //           <CardText className=\"text-muted text-small mb-2\">\n    //             {data.job_title}\n    //           </CardText>\n    //           <CardText className=\"text-muted text-small mb-2\">\n    //             {data.company}\n    //           </CardText>\n    //           <CardText className=\"text-muted text-small mb-2\">\n    //             {data.about}\n    //           </CardText>\n    //           {/* <Button outline size=\"xs\" color=\"danger\">\n    //             Remove\n    //           </Button> */}\n    //         </div>\n    //       </CardBody>\n    //     </div>\n    //   </Card>\n\n    <Card className=\"mb-3\">\n      <div className=\"card\">\n        <div className=\"card-body\">\n          <div className=\"d-flex justify-content-between\">\n            <h5 className=\"card-title\">{data.name}</h5>\n            <p className=\"card-text\"><small className=\"text-muted\">{data.created_at.substring(0, 9)}</small></p>\n          </div>\n\n          <div className=\"row mb-1\">\n            <div className=\"col-2\"><img src={isImg ? data.profile_url : img} alt=\"Profile\" width=\"100px\" /></div>\n          \n            <div className=\"col-10 pt-1\">\n              <p className=\"card-text\">\n                <ul>\n                  <li><b>Job_title : </b>{data.job_title}</li>\n                  <li><b>Company : </b>{data.company}</li>\n                  <li><b>About : </b>{data.about}</li>\n                </ul>\n              </p>\n            </div>\n          </div>\n           </div>\n      </div>\n    </Card>\n\n\n  );\n};\n\nexport default JudgeCard;\n","/* eslint-disable camelcase */\n/* eslint-disable prefer-promise-reject-errors */\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Button,\n  CustomInput,\n  FormGroup,\n  Input,\n  InputGroup,\n  Label,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n} from 'reactstrap';\nimport instance from '../../helpers/axiosInstance';\nimport IntlMessages from '../../helpers/IntlMessages';\nimport { getJudge } from '../../redux/actions';\nimport StateButton from '../StateButton';\n\nconst AddJudgeModal = ({ setOpenAddModal, id, accessToken }) => {\n  console.log(id);\n  const [values, setValues] = useState({\n    hackathon_id: id,\n    name: '',\n    job_title: '',\n    company: '',\n    profile_url: null,\n    about: '',\n  });\n  const formData = new FormData();\n  const handleFileChange = (event) => {\n    setValues({ ...values, [event.target.id]: event.target.files[0] });\n    formData.delete(event.target.id);\n    formData.append(`${event.target.id}`, values[event.target.id]);\n  };\n\n\n  const handleChange = (event, key, value = false) => {\n    setValues({\n      ...values,\n      [key]: value ? event : event.target.value,\n    });\n  };\n\n  const handleSubmit = async (newData) => {\n    formData.append('hackathon_id', id);\n    formData.append('name', values.name);\n    formData.append('job_title', values.job_title);\n    formData.append('company', values.company);\n    formData.append('about', values.about);\n    formData.append('profile_url', values.profile_url);\n    return new Promise((success, failed) => {\n      const addJudge = async () => {\n        try {\n          console.log(newData);\n          if (\n            newData.name === '' ||\n            newData.job_title === '' ||\n            newData.company === '' ||\n            newData.about === ''\n          ) {\n            failed('Please enter valid details!');\n          } else {\n             const response = await instance({\n              method: 'POST',\n              url: '/addJudges',\n              headers: {\n                Authorization: `Bearer ${accessToken}`,\n                'Content-Type': 'multipart/form-data',\n              },\n              data: formData,\n              timeout: 100000,\n            });\n\n            const { data } = response;\n            if (data.success) {\n              setValues({ ...values, ...newData });\n              success('Judge added successfully!');\n            } else {\n              failed('Failed to add judge!');\n            }\n          }\n        } catch (error) {\n          console.log(error);\n          failed('Failed to add judge!');\n        }\n      };\n\n      addJudge();\n    });\n  };\n\n  return (\n    <>\n      <ModalHeader>\n        <h2 className=\"lead\">\n          <IntlMessages id=\"challenges.modal.application-add-judge-title\" />\n        </h2>\n      </ModalHeader>\n\n      <ModalBody>\n        <FormGroup>\n          <Label>\n            <IntlMessages id=\"challenges.modal.judge\" />\n          </Label>\n          <Input\n            type=\"text\"\n            value={values.name}\n            onChange={(event) => handleChange(event, 'name')}\n          />\n        </FormGroup>\n\n        <FormGroup>\n          <Label>\n            <IntlMessages id=\"challenges.modal.judge-title\" />\n          </Label>\n          <Input\n            type=\"text\"\n            value={values.job_title}\n            onChange={(event) => handleChange(event, 'job_title')}\n          />\n        </FormGroup>\n\n        <FormGroup>\n          <Label>\n            <IntlMessages id=\"challenges.modal.judge-company\" />\n          </Label>\n          <Input\n            type=\"text\"\n            value={values.company}\n            onChange={(event) => handleChange(event, 'company')}\n          />\n        </FormGroup>\n\n        <FormGroup>\n          <Label>\n            <IntlMessages id=\"challenges.modal.judge-description\" />\n          </Label>\n          <Input\n            type=\"textarea\"\n            rows=\"4\"\n            value={values.about}\n            onChange={(event) => handleChange(event, 'about')}\n          />\n        </FormGroup>\n\n        <FormGroup>\n          <Label>\n            <IntlMessages id=\"challenges.modal.judge-upload-image\" />\n          </Label>\n          <InputGroup>\n            <CustomInput type=\"file\"\n              id=\"profile_url\" \n              name=\"customFile\"\n              accept=\"image/jpeg, image/jpg, image/png\"\n              onChange={handleFileChange}\n            />\n          </InputGroup>\n        </FormGroup>\n      </ModalBody>\n\n      <ModalFooter>\n        <StateButton\n          id=\"add-judge-button\"\n          color=\"secondary\"\n          onClick={() => handleSubmit(values)}\n          successNext={() => window.location.reload()}\n        >\n          <IntlMessages id=\"challenges.modal.application-add\" />\n        </StateButton>\n\n        <Button color=\"danger\" onClick={() => setOpenAddModal(false)}>\n          <IntlMessages id=\"challenges.modal.application-cancel\" />\n        </Button>\n      </ModalFooter>\n    </>\n  );\n};\n\nconst mapStateToProps = ({ authUser }) => {\n  const { accessToken } = authUser;\n  return { accessToken };\n};\n\nexport default connect(mapStateToProps, {\n  getJudgeAction: getJudge,\n})(AddJudgeModal);\n","/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable camelcase */\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Card, CardBody } from 'reactstrap';\n\nimport AppError from '../../helpers/AppError';\nimport IntlMessages from '../../helpers/IntlMessages';\nimport { getJudge } from '../../redux/actions';\nimport JudgeCard from '../cards/JudgeCard';\n\nconst JudgesList = ({\n  id,\n  getJudgeAction,\n  accessToken,\n  judges,\n  loading,\n  error,\n}) => {\n  useEffect(() => {\n    getJudgeAction(accessToken, id);\n  }, []);\n  if (error) throw new AppError(error);\n\n  return (\n    <>\n      <Card className=\"mb-4\">\n        <CardBody>\n          <h3 className=\"h3\">\n            <IntlMessages id=\"challenges.added-judges\" />\n          </h3>\n        </CardBody>\n      </Card>\n\n      {loading ? (\n        <div className=\"d-flex justify-content-center m-4\">\n          <div className=\"loading\" role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n          </div>\n        </div>\n      ) : (\n        <>\n          {judges.map((item) => (\n            <JudgeCard className=\"mb-3\" key={item.id} data={item} />\n          ))}\n        </>\n      )}\n    </>\n  );\n};\n\nconst mapStateToProps = ({ authUser, applicationData }) => {\n  const { accessToken } = authUser;\n  const { judges, loading, error } = applicationData;\n  return { accessToken, judges, loading, error };\n};\n\nexport default connect(mapStateToProps, {\n  getJudgeAction: getJudge,\n})(JudgesList);\n","import React, { useState } from 'react';\nimport {\n  Button,\n  Card,\n  CardBody,\n  CustomInput,\n  FormGroup,\n  Modal,\n  Row,\n} from 'reactstrap';\nimport { useHistory } from 'react-router-dom';\n\nimport AddJudgeModal from '../../../components/application/AddJudgeModal';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport { adminRoot } from '../../../constants/defaultValues';\n\nimport Breadcrumb from '../../../containers/navs/Breadcrumb';\nimport AppError from '../../../helpers/AppError';\nimport IntlMessages from '../../../helpers/IntlMessages';\n\nimport JudgesList from '../../../components/application/JudgesList';\n\nconst Judges = ({ match }) => {\n  const { id } = match.params;\n\n  if (!id) throw new AppError('Please provide a Hackathon ID');\n\n  const history = useHistory();\n\n  const [openAddModal, setOpenAddModal] = useState(false);\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n          <Breadcrumb heading=\"menu.judges\" match={match} />\n          <Separator className=\"mb-5\" />\n        </Colxx>\n      </Row>\n\n      <Row className=\"justify-content-center\">\n        <Colxx xxs=\"12\" md=\"6\">\n          <JudgesList id={id} />\n        </Colxx>\n\n        <Colxx xxs=\"12\" md=\"6\">\n          <Card>\n            <CardBody>\n              <Row className=\"justify-content-center m-2\">\n                <Button onClick={() => setOpenAddModal(true)}>\n                  <IntlMessages id=\"challenges.add-judge-button\" />\n                </Button>\n              </Row>\n\n              <Row className=\"justify-content-center m-2\">\n                <CustomInput\n                  type=\"checkbox\"\n                  label={<IntlMessages id=\"challenges.add-judge-checkbox\" />}\n                />\n              </Row>\n\n              <Modal\n                isOpen={openAddModal}\n                toggle={() => setOpenAddModal(!openAddModal)}\n              >\n                <AddJudgeModal setOpenAddModal={setOpenAddModal} id={id} />\n              </Modal>\n            </CardBody>\n          </Card>\n        </Colxx>\n      </Row>\n\n      <Row>\n        <Colxx>\n          <FormGroup className=\"text-center\">\n            {/* <Button\n              color=\"primary\"\n              className=\"m-3\"\n              onClick={() =>\n                history.push(`${adminRoot}/challenges/prizes/${id}`)\n              }\n            >\n              <IntlMessages id=\"forms.previous\" />\n            </Button> */}\n            <Button\n              color=\"primary\"\n              className=\"m-3\"\n              onClick={() =>\n                history.push(`${adminRoot}/challenges/sponsors/${id}`)\n              }\n            >\n              <IntlMessages id=\"forms.next\" />\n            </Button>\n          </FormGroup>\n        </Colxx>\n      </Row>\n    </>\n  );\n};\n\nexport default Judges;\n"],"sourceRoot":""}