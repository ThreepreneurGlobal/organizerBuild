{"version":3,"sources":["containers/navs/Breadcrumb.js","../node_modules/reactstrap/es/FormGroup.js","../node_modules/reactstrap/es/Breadcrumb.js","../node_modules/reactstrap/es/BreadcrumbItem.js","views/app/Challenges/application-view/index.js"],"names":["getMenuTitle","sub","adminRoot","id","getUrl","path","split","BreadcrumbItems","match","substr","paths","filter","Boolean","length","indexOf","x","className","map","index","active","to","BreadcrumbContainer","heading","propTypes","children","PropTypes","node","row","bool","check","inline","disabled","tag","tagPropType","string","cssModule","object","FormGroup","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps","listTag","listClassName","Breadcrumb","ListTag","label","listClasses","BreadcrumbItem","undefined","AddCustomQuestion","lazy","connect","authUser","hackathonData","accessToken","hackathonDetails","loading","error","updateAction","updateCurrentHackathon","getDetailsAction","getHackathonByID","history","useHistory","params","goBack","useEffect","application","useState","values","setValues","console","log","xxs","md","formValues","setFormValues","color","onClick","push"],"mappings":"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","file":"static/js/challenges-applicaiton-view.cd0bc753.chunk.js","sourcesContent":["/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport IntlMessages from '../../helpers/IntlMessages';\nimport { adminRoot } from '../../constants/defaultValues';\n\nconst getMenuTitle = (sub) => {\n  if (`/${sub}` === adminRoot) return <IntlMessages id=\"menu.home\" />;\n  return <IntlMessages id={`menu.${sub}`} />;\n};\n\nconst getUrl = (path, sub) => {\n  return path.split(sub)[0] + sub;\n};\n\nconst BreadcrumbContainer = ({ heading, match }) => {\n  return (\n    <>\n      {heading && (\n        <h1>\n          <IntlMessages id={heading} />\n        </h1>\n      )}\n      {match ? <BreadcrumbItems match={match} /> : null}\n    </>\n  );\n};\n\nconst BreadcrumbItems = ({ match }) => {\n  const path = match.path.substr(1);\n  let paths = path.split('/').filter(Boolean);\n\n  if (paths[paths.length - 1].indexOf(':') > -1) {\n    paths = paths.filter((x) => x.indexOf(':') === -1);\n  }\n  return (\n    <>\n      <Breadcrumb className=\"pt-0 breadcrumb-container d-none d-sm-block d-lg-inline-block\">\n        {paths.map((sub, index) => {\n          return (\n            <BreadcrumbItem key={index} active={paths.length === index + 1}>\n              {paths.length !== index + 1 ? (\n                <NavLink to={`/${getUrl(path, sub, index)}`}>\n                  {getMenuTitle(sub)}\n                </NavLink>\n              ) : (\n                getMenuTitle(sub)\n              )}\n            </BreadcrumbItem>\n          );\n        })}\n      </Breadcrumb>\n    </>\n  );\n};\n\nexport default BreadcrumbContainer;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  listTag: tagPropType,\n  className: PropTypes.string,\n  listClassName: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.node,\n  'aria-label': PropTypes.string\n};\nvar defaultProps = {\n  tag: 'nav',\n  listTag: 'ol',\n  'aria-label': 'breadcrumb'\n};\n\nvar Breadcrumb = function Breadcrumb(props) {\n  var className = props.className,\n      listClassName = props.listClassName,\n      cssModule = props.cssModule,\n      children = props.children,\n      Tag = props.tag,\n      ListTag = props.listTag,\n      label = props['aria-label'],\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"listClassName\", \"cssModule\", \"children\", \"tag\", \"listTag\", \"aria-label\"]);\n\n  var classes = mapToCssModules(classNames(className), cssModule);\n  var listClasses = mapToCssModules(classNames('breadcrumb', listClassName), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    \"aria-label\": label\n  }), /*#__PURE__*/React.createElement(ListTag, {\n    className: listClasses\n  }, children));\n};\n\nBreadcrumb.propTypes = propTypes;\nBreadcrumb.defaultProps = defaultProps;\nexport default Breadcrumb;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  active: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'li'\n};\n\nvar BreadcrumbItem = function BreadcrumbItem(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      active = props.active,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"active\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, active ? 'active' : false, 'breadcrumb-item'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    \"aria-current\": active ? 'page' : undefined\n  }));\n};\n\nBreadcrumbItem.propTypes = propTypes;\nBreadcrumbItem.defaultProps = defaultProps;\nexport default BreadcrumbItem;","/* eslint-disable no-param-reassign */\nimport React, { useEffect, useState } from 'react';\nimport { Button, FormGroup, Row } from 'reactstrap';\nimport { useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport {\n  Colxx,\n  Separator,\n} from '../../../../components/common/CustomBootstrap';\n\nimport Breadcrumb from '../../../../containers/navs/Breadcrumb';\n\nimport IntlMessages from '../../../../helpers/IntlMessages';\nimport { adminRoot } from '../../../../constants/defaultValues';\n\nimport {\n  getHackathonByID,\n  updateCurrentHackathon,\n} from '../../../../redux/actions';\n\n// const SelectQuestions = React.lazy(() =>\n//   import(\n//     /* webpackChunkName: \"application-select-question\" */ './components/SelectQuestions'\n//   )\n// );\n\nconst AddCustomQuestion = React.lazy(() =>\n  import(\n    /* webpackChunkName: \"application-custom-question\" */ './components/AddCustomQuestion'\n  )\n);\n\n// const SubmitButton = React.lazy(() =>\n//   import(\n//     /* webpackChunkName: \"application-submit-button\" */ './components/SubmitButton'\n//   )\n// );\n\nconst Application = ({\n  match,\n  accessToken,\n  updateAction,\n  getDetailsAction,\n  loading,\n  hackathonDetails,\n}) => {\n  const history = useHistory();\n\n  const { id } = match.params;\n\n  if (!id) {\n    history.goBack();\n  }\n\n  useEffect(() => {\n    updateAction(id);\n    getDetailsAction(accessToken, id);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const { application } = getHackathonByID(accessToken,id);\n  const [values, setValues] = useState({\n    id,\n    application,\n  });\n\n  useEffect(() => {\n    setValues({\n      ...values,\n      application: hackathonDetails.application,\n    });\n    console.log('UPDATED', hackathonDetails.application);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [hackathonDetails]);\n\n  if (loading) return <div className=\"loading\" />;\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n          <Breadcrumb heading=\"menu.application\" match={match} />\n          <Separator className=\"mb-5\" />\n        </Colxx>\n      </Row>\n\n      <Row className=\"justify-content-center\">\n        <Colxx xxs=\"12\" md=\"8\">\n          <AddCustomQuestion\n            id={id}\n            formValues={values}\n            setFormValues={setValues}\n            accessToken = {accessToken}\n          />\n        </Colxx>\n      </Row>\n\n      <Row>\n        <Colxx>\n          <FormGroup className=\"text-center\">\n            <Button\n              color=\"primary\"\n              className=\"m-3\"\n              onClick={() =>\n                history.push(`${adminRoot}/challenges/sponsors/${id}`)\n              }\n            >\n              <IntlMessages id=\"forms.previous\" />\n            </Button>\n            <Button\n              color=\"primary\"\n              className=\"m-3\"\n              onClick={() =>\n                history.push(`${adminRoot}/challenges/faq/${id}`)\n              }\n            >\n              <IntlMessages id=\"forms.next\" />\n            </Button>\n          </FormGroup>\n        </Colxx>\n      </Row>\n    </>\n  );\n};\n\nconst mapStateToProps = ({ authUser, hackathonData }) => {\n  const { accessToken } = authUser;\n  const { hackathonDetails, loading, error } = hackathonData;\n  return { accessToken, hackathonDetails, loading, error };\n};\n\nexport default connect(mapStateToProps, {\n  updateAction: updateCurrentHackathon,\n  getDetailsAction: getHackathonByID,\n})(Application);\n"],"sourceRoot":""}