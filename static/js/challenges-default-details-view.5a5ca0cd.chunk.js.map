{"version":3,"sources":["containers/navs/Breadcrumb.js","../node_modules/reactstrap/es/FormGroup.js","../node_modules/reactstrap/es/Label.js","hooks/use-fetch.js","components/cards/FaqCard.js","../node_modules/reactstrap/es/CardHeader.js","views/app/Challenges/details/components/NavItems.js","../node_modules/reactstrap/es/TabContext.js","../node_modules/reactstrap/es/TabContent.js","../node_modules/reactstrap/es/TabPane.js","containers/application/InputDisplay.js","views/app/Challenges/details/components/TabPanes.js","views/app/Challenges/details/components/ParicipantList.js","components/application/SingleLightbox.js","views/app/Challenges/details/components/HackDetails.js","views/app/Challenges/details/default-details.js"],"names":["getMenuTitle","sub","adminRoot","id","getUrl","path","split","BreadcrumbItems","match","substr","paths","filter","Boolean","length","indexOf","x","className","map","index","active","to","BreadcrumbContainer","heading","propTypes","children","PropTypes","node","row","bool","check","inline","disabled","tag","tagPropType","string","cssModule","object","FormGroup","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps","stringOrNumberProp","oneOfType","number","columnProps","shape","size","order","offset","hidden","for","xs","sm","md","lg","xl","widths","array","getColumnSizeClass","isXs","colWidth","colSize","Label","htmlFor","colClasses","forEach","i","columnProp","colClass","isObject","_classNames","colSizeInterfix","push","useFetch","url","name","useState","loading","setLoading","error","setError","data","setData","remove","useEffect","a","instance","method","response","success","message","fetchData","isRequired","key","refresh","FaqCard","setShowIndex","showingIndex","item","color","onClick","aria-expanded","question","isOpen","dangerouslySetInnerHTML","__html","answer","CardHeader","NavItems","activeTab","setActiveTab","Nav","tabs","NavItem","NavLink","location","IntlMessages","TabContext","createContext","any","TabContent","_Component","_this","call","this","state","_inheritsLoose","getDerivedStateFromProps","nextProps","prevState","prototype","render","_this$props","omit","Object","keys","Provider","value","activeTabId","Component","tabId","TabPane","getClasses","Consumer","_ref","InputDisplay","messageId","intputType","Input","type","proptype","TabPanes","hackInfo","hackathon","sponsors","prizes","judges","Faq","CardBody","tagline","about","aproximate_participants","max_team_size","Row","hackathon_website","contact_email","link_to_code_of_control","facebook","twitter","instagram","linkedin","theme_color_code","application_start","application_end","hackathon_start","hackathon_date","results_date","timezone","Badge","pill","xxs","ParticipantList","Card","CardTitle","SingleLightbox","thumb","large","setIsOpen","isImg","console","log","alt","src","img","width","mainSrc","onCloseRequest","HackDetails","href","target","Details","params","AppError","Breadcrumb","Button","hackathon_cover_img","hackathon_logo","Participant"],"mappings":"+JAAA,4DAOMA,EAAe,SAACC,GACpB,MAAI,WAAIA,KAAUC,IAAkB,cAAC,IAAD,CAAcC,GAAG,cAC9C,cAAC,IAAD,CAAcA,GAAE,eAAUF,MAG7BG,EAAS,SAACC,EAAMJ,GACpB,OAAOI,EAAKC,MAAML,GAAK,GAAKA,GAgBxBM,EAAkB,SAAC,GAAe,IAChCF,EAD+B,EAAZG,MACNH,KAAKI,OAAO,GAC3BC,EAAQL,EAAKC,MAAM,KAAKK,OAAOC,SAKnC,OAHIF,EAAMA,EAAMG,OAAS,GAAGC,QAAQ,MAAQ,IAC1CJ,EAAQA,EAAMC,QAAO,SAACI,GAAD,OAA2B,IAApBA,EAAED,QAAQ,SAGtC,mCACE,cAAC,IAAD,CAAYE,UAAU,gEAAtB,SACGN,EAAMO,KAAI,SAAChB,EAAKiB,GACf,OACE,cAAC,IAAD,CAA4BC,OAAQT,EAAMG,SAAWK,EAAQ,EAA7D,SACGR,EAAMG,SAAWK,EAAQ,EACxB,cAAC,IAAD,CAASE,GAAE,WAAMhB,EAAOC,EAAMJ,IAA9B,SACGD,EAAaC,KAGhBD,EAAaC,IANIiB,WAgBlBG,IAzCa,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,QAASd,EAAY,EAAZA,MACtC,OACE,qCACGc,GACC,6BACE,cAAC,IAAD,CAAcnB,GAAImB,MAGrBd,EAAQ,cAACD,EAAD,CAAiBC,MAAOA,IAAY,U,iCCxBnD,gFAMIe,EAAY,CACdC,SAAUC,IAAUC,KACpBC,IAAKF,IAAUG,KACfC,MAAOJ,IAAUG,KACjBE,OAAQL,IAAUG,KAClBG,SAAUN,IAAUG,KACpBI,IAAKC,IACLjB,UAAWS,IAAUS,OACrBC,UAAWV,IAAUW,QAMnBC,EAAY,SAAmBC,GACjC,IAAItB,EAAYsB,EAAMtB,UAClBmB,EAAYG,EAAMH,UAClBR,EAAMW,EAAMX,IACZI,EAAWO,EAAMP,SACjBF,EAAQS,EAAMT,MACdC,EAASQ,EAAMR,OACfS,EAAMD,EAAMN,IACZQ,EAAaC,YAA8BH,EAAO,CAAC,YAAa,YAAa,MAAO,WAAY,QAAS,SAAU,QAEnHI,EAAUC,YAAgBC,IAAW5B,IAAWW,GAAM,MAAeE,EAAQ,aAAe,gBAAcA,IAASC,IAAS,uBAA6BD,IAASE,IAAW,YAAqBI,GAMtM,MAJY,aAARI,IACFC,EAAWT,SAAWA,GAGJc,IAAMC,cAAcP,EAAKQ,YAAS,GAAIP,EAAY,CACpExB,UAAW0B,MAIfL,EAAUd,UAAYA,EACtBc,EAAUW,aA1BS,CACjBhB,IAAK,OA0BQK,O,iCC3Cf,gFAOIY,EAAqBxB,IAAUyB,UAAU,CAACzB,IAAU0B,OAAQ1B,IAAUS,SACtEkB,EAAc3B,IAAUyB,UAAU,CAACzB,IAAUG,KAAMH,IAAUS,OAAQT,IAAU0B,OAAQ1B,IAAU4B,MAAM,CACzGC,KAAML,EACNM,MAAON,EACPO,OAAQP,MAEN1B,EAAY,CACdC,SAAUC,IAAUC,KACpB+B,OAAQhC,IAAUG,KAClBC,MAAOJ,IAAUG,KACjB0B,KAAM7B,IAAUS,OAChBwB,IAAKjC,IAAUS,OACfF,IAAKC,IACLjB,UAAWS,IAAUS,OACrBC,UAAWV,IAAUW,OACrBuB,GAAIP,EACJQ,GAAIR,EACJS,GAAIT,EACJU,GAAIV,EACJW,GAAIX,EACJY,OAAQvC,IAAUwC,OAEhBjB,EAAe,CACjBhB,IAAK,QACLgC,OAzBc,CAAC,KAAM,KAAM,KAAM,KAAM,OA4BrCE,EAAqB,SAA4BC,EAAMC,EAAUC,GACnE,OAAgB,IAAZA,GAAgC,KAAZA,EACfF,EAAO,MAAQ,OAASC,EACV,SAAZC,EACFF,EAAO,WAAa,OAASC,EAAW,QAG1CD,EAAO,OAASE,EAAU,OAASD,EAAW,IAAMC,GAGzDC,EAAQ,SAAehC,GACzB,IAAItB,EAAYsB,EAAMtB,UAClBmB,EAAYG,EAAMH,UAClBsB,EAASnB,EAAMmB,OACfO,EAAS1B,EAAM0B,OACfzB,EAAMD,EAAMN,IACZH,EAAQS,EAAMT,MACdyB,EAAOhB,EAAMgB,KACbiB,EAAUjC,EAAMoB,IAChBlB,EAAaC,YAA8BH,EAAO,CAAC,YAAa,YAAa,SAAU,SAAU,MAAO,QAAS,OAAQ,QAEzHkC,EAAa,GACjBR,EAAOS,SAAQ,SAAUL,EAAUM,GACjC,IAAIC,EAAarC,EAAM8B,GAGvB,UAFO5B,EAAW4B,GAEbO,GAA6B,KAAfA,EAAnB,CAIA,IACIC,EADAT,GAAQO,EAGZ,GAAIG,YAASF,GAAa,CACxB,IAAIG,EAEAC,EAAkBZ,EAAO,IAAM,IAAMC,EAAW,IACpDQ,EAAWV,EAAmBC,EAAMC,EAAUO,EAAWrB,MACzDkB,EAAWQ,KAAKrC,YAAgBC,MAAYkC,EAAc,IAAgBF,GAAYD,EAAWrB,MAA4B,KAApBqB,EAAWrB,KAAawB,EAAY,QAAUC,EAAkBJ,EAAWpB,OAASoB,EAAWpB,OAA8B,IAArBoB,EAAWpB,MAAauB,EAAY,SAAWC,EAAkBJ,EAAWnB,QAAUmB,EAAWnB,QAAgC,IAAtBmB,EAAWnB,OAAcsB,KAAgB3C,QAErWyC,EAAWV,EAAmBC,EAAMC,EAAUO,GAC9CH,EAAWQ,KAAKJ,OAGpB,IAAIlC,EAAUC,YAAgBC,IAAW5B,IAAWyC,GAAS,YAAmB5B,GAAQ,qBAA4ByB,GAAO,kBAAoBA,EAAckB,IAAYA,EAAW3D,QAAS,kBAA2BsB,GACxN,OAAoBU,IAAMC,cAAcP,EAAKQ,YAAS,CACpDwB,QAASA,GACR/B,EAAY,CACbxB,UAAW0B,MAIf4B,EAAM/C,UAAYA,EAClB+C,EAAMtB,aAAeA,EACNsB,O,sGCnFTW,EAAW,SAACC,GAAwB,IAAnBC,EAAkB,uDAAX,OAAW,EACTC,oBAAS,GADA,mBAChCC,EADgC,KACvBC,EADuB,OAEbF,mBAAS,IAFI,mBAEhCG,EAFgC,KAEzBC,EAFyB,OAGPJ,oBAAS,GAHF,mBAGhCK,EAHgC,KAG1BC,EAH0B,KAGjBC,EAHiB,KAkCvC,OA7BAC,qBAAU,WACHV,EAKU,uCAAG,4BAAAW,EAAA,+EAESC,YAAS,CAC9BC,OAAQ,MACRb,QAJY,QAERc,EAFQ,QAODP,KAAKQ,QAChBP,EAAQM,EAASP,KAAKN,IAEtBK,EAASQ,EAASP,KAAKS,SAEzBZ,GAAW,GAZG,gDAcdE,EAAS,KAAIU,SACbZ,GAAW,GAfG,yDAAH,oDAmBfa,GAvBEX,EAAS,2BAyBV,IAEI,CAAEH,UAASI,OAAMF,QAAOI,WAGlBV,MAEfA,EAAS1D,UAAY,CACnB2D,IAAKzD,IAAUS,OAAOkE,WACtBC,IAAK5E,IAAUS,OAAOkE,WACtBE,QAAS7E,IAAUG,O,iCC/CrB,4CA2Be2E,IAvBC,SAAC,GAAiD,IAA/CrF,EAA8C,EAA9CA,MAAOsF,EAAuC,EAAvCA,aAAcC,EAAyB,EAAzBA,aAAcC,EAAW,EAAXA,KACpD,OACE,eAAC,IAAD,CAAM1F,UAAU,cAAhB,UACE,qBAAKA,UAAU,oCAAf,SACE,cAAC,IAAD,CACE2F,MAAM,OACN3F,UAAU,oEACV4F,QAAS,kBAAMJ,EAAatF,IAC5B2F,gBAAeJ,IAAiBvF,EAJlC,SAMGwF,EAAKI,aAGV,cAAC,IAAD,CAAUC,OAAQN,IAAiBvF,EAAnC,SACE,qBACEF,UAAU,mCACVgG,wBAAyB,CAAEC,OAAQP,EAAKQ,iB,4JCd9C3F,EAAY,CACdS,IAAKC,IACLjB,UAAWS,IAAUS,OACrBC,UAAWV,IAAUW,QAMnB+E,EAAa,SAAoB7E,GACnC,IAAItB,EAAYsB,EAAMtB,UAClBmB,EAAYG,EAAMH,UAClBI,EAAMD,EAAMN,IACZQ,EAAaC,YAA8BH,EAAO,CAAC,YAAa,YAAa,QAE7EI,EAAUC,YAAgBC,IAAW5B,EAAW,eAAgBmB,GACpE,OAAoBU,IAAMC,cAAcP,EAAKQ,YAAS,GAAIP,EAAY,CACpExB,UAAW0B,MAIfyE,EAAW5F,UAAYA,EACvB4F,EAAWnE,aAjBQ,CACjBhB,IAAK,OAiBQmF,Q,sEC4GAC,EAnIE,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aAC7B,OACE,eAACC,EAAA,EAAD,CAAKC,MAAI,EAACxG,UAAU,mBAApB,UACE,cAACyG,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACE1G,UAAW4B,IAAW,CACpBzB,OAAsB,WAAdkG,EACR,YAAY,IAEdT,QAAS,kBAAMU,EAAa,WAC5BlG,GAAG,IACHuG,SAAU,GAPZ,SASE,cAACC,EAAA,EAAD,CAAczH,GAAG,oBAkBrB,cAACsH,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACE1G,UAAW4B,IAAW,CACpBzB,OAAsB,UAAdkG,EACR,YAAY,IAEdT,QAAS,kBAAMU,EAAa,UAC5BlG,GAAG,IACHuG,SAAU,GAPZ,SASE,cAACC,EAAA,EAAD,CAAczH,GAAG,mBAkBrB,cAACsH,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACE1G,UAAW4B,IAAW,CACpBzB,OAAsB,UAAdkG,EACR,YAAY,IAEdT,QAAS,kBAAMU,EAAa,UAC5BlG,GAAG,IACHuG,SAAU,GAPZ,SASE,cAACC,EAAA,EAAD,CAAczH,GAAG,mBAGrB,cAACsH,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACE1G,UAAW4B,IAAW,CACpBzB,OAAsB,WAAdkG,EACR,YAAY,IAEdT,QAAS,kBAAMU,EAAa,WAC5BlG,GAAG,IACHuG,SAAU,GAPZ,SASE,cAACC,EAAA,EAAD,CAAczH,GAAG,oBAIrB,cAACsH,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACE1G,UAAW4B,IAAW,CACpBzB,OAAsB,WAAdkG,EACR,YAAY,IAEdT,QAAS,kBAAMU,EAAa,WAC5BlG,GAAG,IACHuG,SAAU,GAPZ,SASE,cAACC,EAAA,EAAD,CAAczH,GAAG,oBAIrB,cAACsH,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACE1G,UAAW4B,IAAW,CACpBzB,OAAsB,aAAdkG,EACR,YAAY,IAEdT,QAAS,kBAAMU,EAAa,aAC5BlG,GAAG,IACHuG,SAAU,GAPZ,SASE,cAACC,EAAA,EAAD,CAAczH,GAAG,sBAIrB,cAACsH,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACE1G,UAAW4B,IAAW,CACpBzB,OAAsB,QAAdkG,EACR,YAAY,IAEdT,QAAS,kBAAMU,EAAa,QAC5BlG,GAAG,IACHuG,SAAU,GAPZ,SASE,cAACC,EAAA,EAAD,CAAczH,GAAG,qB,SC1HhB0H,EAA0BhF,IAAMiF,cAAc,ICDrDvG,EAAY,CACdS,IAAKC,IACLoF,UAAW5F,IAAUsG,IACrB/G,UAAWS,IAAUS,OACrBC,UAAWV,IAAUW,QAMnB4F,EAA0B,SAAUC,GAatC,SAASD,EAAW1F,GAClB,IAAI4F,EAMJ,OAJAA,EAAQD,EAAWE,KAAKC,KAAM9F,IAAU8F,MAClCC,MAAQ,CACZhB,UAAWa,EAAM5F,MAAM+E,WAElBa,EAqBT,OAxCAI,YAAeN,EAAYC,GAE3BD,EAAWO,yBAA2B,SAAkCC,EAAWC,GACjF,OAAIA,EAAUpB,YAAcmB,EAAUnB,UAC7B,CACLA,UAAWmB,EAAUnB,WAIlB,MAaIW,EAAWU,UAEjBC,OAAS,WACd,IAAIC,EAAcR,KAAK9F,MACnBtB,EAAY4H,EAAY5H,UACxBmB,EAAYyG,EAAYzG,UACxBI,EAAMqG,EAAY5G,IAClBQ,EAAaqG,YAAKT,KAAK9F,MAAOwG,OAAOC,KAAKxH,IAC1CmB,EAAUC,YAAgBC,IAAW,cAAe5B,GAAYmB,GACpE,OAAoBU,IAAMC,cAAc+E,EAAWmB,SAAU,CAC3DC,MAAO,CACLC,YAAad,KAAKC,MAAMhB,YAEZxE,IAAMC,cAAcP,EAAKQ,YAAS,GAAIP,EAAY,CAChExB,UAAW0B,OAIRsF,EAzCqB,CA0C5BmB,aAEanB,IACfA,EAAWzG,UAAYA,EACvByG,EAAWhF,aAlDQ,CACjBhB,IAAK,OCPP,IAAIT,EAAY,CACdS,IAAKC,IACLjB,UAAWS,IAAUS,OACrBC,UAAWV,IAAUW,OACrBgH,MAAO3H,IAAUsG,KAKJ,SAASsB,EAAQ/G,GAC9B,IAAItB,EAAYsB,EAAMtB,UAClBmB,EAAYG,EAAMH,UAClBiH,EAAQ9G,EAAM8G,MACd7G,EAAMD,EAAMN,IACZQ,EAAaC,YAA8BH,EAAO,CAAC,YAAa,YAAa,QAAS,QAEtFgH,EAAa,SAAoBJ,GACnC,OAAOvG,YAAgBC,IAAW,WAAY5B,EAAW,CACvDG,OAAQiI,IAAUF,IAChB/G,IAGN,OAAoBU,IAAMC,cAAc+E,EAAW0B,SAAU,MAAM,SAAUC,GAC3E,IAAIN,EAAcM,EAAKN,YACvB,OAAoBrG,IAAMC,cAAcP,EAAKQ,YAAS,GAAIP,EAAY,CACpExB,UAAWsI,EAAWJ,SAI5BG,EAAQ9H,UAAYA,EACpB8H,EAAQrG,aAxBW,CACjBhB,IAAK,O,0DCTDyH,EAAe,SAAC,GAAqD,IAAnDC,EAAkD,EAAlDA,UAAWvE,EAAuC,EAAvCA,KAAM8D,EAAiC,EAAjCA,MAAiC,IAA1BU,kBAA0B,MAAb,OAAa,EACxE,OACE,eAACtH,EAAA,EAAD,CAAWrB,UAAU,YAArB,UACE,cAACsD,EAAA,EAAD,CAAOtD,UAAU,OAAjB,SACE,cAAC4G,EAAA,EAAD,CAAczH,GAAIuJ,MAGpB,cAACE,EAAA,EAAD,CACEC,KAAMF,EACN3I,UAAU,eACVmE,KAAMA,EACN8D,MAAOA,EACPlH,UAAQ,QAMhB0H,EAAaK,SAAW,CACtBJ,UAAWjI,IAAUS,OAAOkE,WAC5BjB,KAAM1D,IAAUS,OAAOkE,WACvB6C,MAAOxH,IAAUsG,IAAI3B,WACrBuD,WAAYlI,IAAUS,QAGTuH,QC+TAM,EApVE,SAAC,GAA6B,IAA3B1C,EAA0B,EAA1BA,UAAW2C,EAAe,EAAfA,SAAe,EACP5E,mBAAS,GADF,mBACrCqB,EADqC,KACvBD,EADuB,KAGpCyD,EAA6CD,EAA7CC,UAAWC,EAAkCF,EAAlCE,SAAUC,EAAwBH,EAAxBG,OAAQC,EAAgBJ,EAAhBI,OAAQC,EAAQL,EAARK,IAkB7C,OACE,eAAC,EAAD,CAAYhD,UAAWA,EAAvB,UACE,cAACgC,EAAD,CAASD,MAAM,SAAf,SACE,eAACkB,EAAA,EAAD,WACE,cAAC,EAAD,CACEZ,UAAU,4BACVvE,KAAK,iBACL8D,MAAOgB,EAAU9E,OAGnB,cAAC,EAAD,CACEuE,UAAU,+BACVvE,KAAK,oBACL8D,MAAOgB,EAAUM,UAGnB,cAAC,EAAD,CACEb,UAAU,mBACVvE,KAAK,kBACL8D,MAAOgB,EAAUO,MACjBb,WAAW,aAGb,cAAC,EAAD,CACED,UAAU,qCACVvE,KAAK,0BACL8D,MAAOgB,EAAUQ,0BAGnB,cAAC,EAAD,CACEf,UAAU,2BACVvE,KAAK,gBACL8D,MAAOgB,EAAUS,qBAwGvB,cAACrB,EAAD,CAASD,MAAM,QAAf,SACE,cAACuB,EAAA,EAAD,UACE,cAAC,IAAD,CAAO/G,GAAG,KAAV,SACE,eAAC0G,EAAA,EAAD,WACE,cAAC,EAAD,CACEZ,UAAU,+BACVvE,KAAK,oBACL8D,MAAOgB,EAAUW,oBAInB,cAAC,EAAD,CACElB,UAAU,2BACVvE,KAAK,gBACL8D,MAAOgB,EAAUY,gBAGnB,cAAC,EAAD,CACEnB,UAAU,qCACVvE,KAAK,0BACL8D,MAAOgB,EAAUa,0BAGnB,cAAC,EAAD,CACEpB,UAAU,sBACVvE,KAAK,WACL8D,MAAOgB,EAAUc,WAGnB,cAAC,EAAD,CACErB,UAAU,qBACVvE,KAAK,UACL8D,MAAOgB,EAAUe,UAGnB,cAAC,EAAD,CACEtB,UAAU,uBACVvE,KAAK,YACL8D,MAAOgB,EAAUgB,YAGnB,cAAC,EAAD,CACEvB,UAAU,sBACVvE,KAAK,WACL8D,MAAOgB,EAAUiB,oBAO3B,cAAC7B,EAAD,CAASD,MAAM,SAAf,SACE,cAACuB,EAAA,EAAD,UACE,cAAC,IAAD,CAAO/G,GAAG,KAAV,SACE,cAAC0G,EAAA,EAAD,UACE,cAAC,EAAD,CACEZ,UAAU,yBACVvE,KAAK,mBACL8D,MAAOgB,EAAUkB,2BAO3B,cAAC9B,EAAD,CAASD,MAAM,QAAf,SACE,cAACuB,EAAA,EAAD,UACE,cAAC,IAAD,CAAO/G,GAAG,KAAV,SACE,eAAC0G,EAAA,EAAD,WACE,cAAC,EAAD,CACEZ,UAAU,yCACVvE,KAAK,oBACL8D,MAAOgB,EAAUmB,oBAGnB,cAAC,EAAD,CACE1B,UAAU,uCACVvE,KAAK,mBACL8D,MAAOgB,EAAUoB,kBAGnB,cAAC,EAAD,CACE3B,UAAU,uCACVvE,KAAK,mBACL8D,MAAOgB,EAAUqB,kBAGnB,cAAC,EAAD,CACE5B,UAAU,qCACVvE,KAAK,iBACL8D,MAAOgB,EAAUsB,iBAGnB,cAAC,EAAD,CACE7B,UAAU,kCACVvE,KAAK,oBACL8D,MAAOgB,EAAUuB,eAGnB,cAAC,EAAD,CACE9B,UAAU,sBACVvE,KAAK,WACL8D,MAAOgB,EAAUwB,oBAM3B,cAACpC,EAAD,CAASD,MAAM,SAAf,SACE,cAACuB,EAAA,EAAD,UACE,cAAC,IAAD,CAAO/G,GAAG,KAAV,SACE,cAAC0G,EAAA,EAAD,UACGH,EAAOlJ,KAAI,SAACyF,GAAD,OACV,cAACgF,EAAA,EAAD,CAEE/E,MAAM,kBACNgF,MAAI,EACJ3K,UAAU,MAJZ,SAME,cAAC4G,EAAA,EAAD,CAAczH,GAAIuG,EAAKvB,QALlBuB,EAAKvG,eAatB,cAACkJ,EAAD,CAASD,MAAM,WAAf,SACE,cAACuB,EAAA,EAAD,UACE,cAAC,IAAD,CAAO/G,GAAG,KAAV,SACE,cAAC0G,EAAA,EAAD,UACGJ,EAASjJ,KAAI,SAACyF,GAAD,OACZ,cAACgF,EAAA,EAAD,CAEE/E,MAAM,kBACNgF,MAAI,EACJ3K,UAAU,MAJZ,SAME,cAAC4G,EAAA,EAAD,CAAczH,GAAIuG,EAAKvB,QALlBuB,EAAKvG,eAatB,cAACkJ,EAAD,CAASD,MAAM,SAAf,SACE,cAACuB,EAAA,EAAD,UACE,cAAC,IAAD,CAAO/G,GAAG,KAAV,SACE,cAAC0G,EAAA,EAAD,UACGF,EAAOnJ,KAAI,SAACyF,GAAD,OACV,cAACgF,EAAA,EAAD,CAEE/E,MAAM,kBACNgF,MAAI,EACJ3K,UAAU,MAJZ,SAME,cAAC4G,EAAA,EAAD,CAAczH,GAAIuG,EAAKvB,QALlBuB,EAAKvG,eAatB,cAACkJ,EAAD,CAASD,MAAM,MAAf,SACE,cAAC,IAAD,CAAOwC,IAAI,KAAK5K,UAAU,OAA1B,SACGqJ,EAAIpJ,KAAI,SAACyF,EAAMxF,GAAP,OACP,cAACqF,EAAA,EAAD,CAGEG,KAAMA,EACNxF,MAAOA,EACPuF,aAAcA,EACdD,aAAcA,GANhB,kBAEkBtF,e,kCCvSf2K,EAlCS,SAAC,GAAqB,IAAnBpG,EAAkB,EAAlBA,KAAMjF,EAAY,EAAZA,MAC/B,OACE,qCACE,cAACsL,EAAA,EAAD,CAAM9K,UAAU,OAAhB,SACE,cAACsJ,EAAA,EAAD,UACE,cAACyB,EAAA,EAAD,CAAW/K,UAAU,WAArB,SACE,sBAAKA,UAAU,kCAAf,UACE,cAAC4G,EAAA,EAAD,CAAczH,GAAG,4BAGhBsF,EAAK5E,OACJ,kDACS4E,EAAK5E,OADd,KAEE,eAAC,IAAD,CAASO,GAAE,UAAKZ,EAAM0E,IAAX,iBAA+BlE,UAAU,UAApD,qBACU,mBAAGA,UAAU,6CAGvB,cAMXyE,EAAK5E,OAAS,KACb,cAACiL,EAAA,EAAD,CAAM9K,UAAU,OAAhB,SACE,cAACsJ,EAAA,EAAD,UACE,cAACyB,EAAA,EAAD,CAAW/K,UAAU,UAArB,+C,kBCJGgL,EAxBQ,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,MAAOjL,EAAuB,EAAvBA,UAAWkL,EAAY,EAAZA,MAAY,EAC1B9G,oBAAS,GADiB,mBAC/C2B,EAD+C,KACvCoF,EADuC,KAElDC,GAAQ,EAMZ,OALa,OAAVH,IAEDG,GAAQ,GAEVC,QAAQC,IAAIL,GAEV,qCACE,cAAC,IAAD,CAAS7K,GAAG,IAAIuG,SAAU,GAAIf,QAAS,kBAAMuF,GAAU,IAAvD,SACE,qBACEI,IAAI,YACJC,IAAKJ,EAAMH,EAAMQ,IACjBzL,UAAWA,EACX0L,MAAM,UAGT3F,GACC,cAAC,IAAD,CAAU4F,QAAST,EAAOU,eAAgB,kBAAMT,GAAU,UCkDnDU,EArEK,SAAC,GAAkB,IAC7B5C,EAD4B,EAAfD,SACbC,UAER,OACE,cAAC6B,EAAA,EAAD,CAAM9K,UAAU,OAAhB,SACE,eAACsJ,EAAA,EAAD,WACE,qBAAKtJ,UAAU,mBAAf,SACE,mBAAGA,UAAU,yBAAb,SAAuCiJ,EAAU9E,SAEnD,mBAAGnE,UAAU,OAAb,SAAqBiJ,EAAUO,QAC/B,mBAAGxJ,UAAU,6BAAb,qBAIA,mBAAGA,UAAU,OAAb,SAAqBiJ,EAAUM,UAkB/B,mBAAGvJ,UAAU,6BAAb,SACE,cAAC4G,EAAA,EAAD,CAAczH,GAAG,mBAEnB,qBAAKa,UAAU,eAAf,SACE,qBAAIA,UAAU,4BAAd,UACE,oBAAIA,UAAU,mBAAd,SACE,cAAC0G,EAAA,EAAD,CAASoF,KAAM7C,EAAUc,SAAUgC,OAAO,SAA1C,SACE,mBAAG/L,UAAU,oCAGjB,oBAAIA,UAAU,mBAAd,SACE,cAAC0G,EAAA,EAAD,CAASoF,KAAM7C,EAAUe,QAAS+B,OAAO,SAAzC,SACE,mBAAG/L,UAAU,mCAGjB,oBAAIA,UAAU,mBAAd,SACE,cAAC0G,EAAA,EAAD,CAASoF,KAAM7C,EAAUgB,UAAW8B,OAAO,SAA3C,SACE,mBAAG/L,UAAU,qCAGjB,oBAAIA,UAAU,mBAAd,SACE,cAAC0G,EAAA,EAAD,CAASoF,KAAM7C,EAAUiB,SAAU6B,OAAO,SAA1C,SACE,mBAAG/L,UAAU,oCAGjB,oBAAIA,UAAU,mBAAd,SACE,cAAC0G,EAAA,EAAD,CAASoF,KAAM7C,EAAUW,kBAAmBmC,OAAO,SAAnD,SACE,mBAAG/L,UAAU,oCCuBdgM,UAlEC,SAAC,GAAe,IAAbxM,EAAY,EAAZA,MACTL,EAAOK,EAAMyM,OAAb9M,GAER,IAAKA,EAAI,MAAM,IAAI+M,IAAS,+BAHC,MAKK9H,mBAAS,UALd,mBAKtBiC,EALsB,KAKXC,EALW,OAOIrC,YAAS,eAAD,OAAgB9E,GAAM,cAAvDkF,EAPqB,EAOrBA,QAASI,EAPY,EAOZA,KAAMF,EAPM,EAONA,MAEvB,GAAIF,EAAS,OAAO,qBAAKrE,UAAU,YAEnC,GAAIuE,EAAO,MAAM,IAAI2H,IAAS3H,GAE9B,OACE,qCACE,eAACoF,EAAA,EAAD,WACE,cAAC,IAAD,CAAOiB,IAAI,KAAX,SACE,cAACuB,EAAA,EAAD,CAAY7L,QAAQ,eAAed,MAAOA,MAE5C,cAAC,IAAD,CAAOoL,IAAI,IAAX,SACE,cAACwB,EAAA,EAAD,CAAQ9J,KAAK,KAAKwJ,KAAI,UAAK5M,IAAL,8BAAoCC,GAA1D,SACE,cAACyH,EAAA,EAAD,CAAczH,GAAG,qCAKvB,cAAC,IAAD,CAAWa,UAAU,SAErB,eAAC2J,EAAA,EAAD,WACE,cAAC,IAAD,CAAOiB,IAAI,KAAK5K,UAAU,OAA1B,SACE,cAAC8K,EAAA,EAAD,UACE,cAAC,EAAD,CACEG,MAAOxG,EAAKwE,UAAUoD,oBACtBnB,MAAOzG,EAAKwE,UAAUoD,oBACtBrM,UAAU,+BAKhB,eAAC,IAAD,CAAO4K,IAAI,KAAKhI,GAAG,IAAI5C,UAAU,gBAAjC,UACE,cAAC,EAAD,CACEiL,MAAOxG,EAAKwE,UAAUqD,eACtBpB,MAAOzG,EAAKwE,UAAUqD,eACtBtM,UAAU,+CAEVqE,GAAW,cAAC,EAAD,CAAa2E,SAAUvE,KAClCJ,GACA,cAAC,EAAD,CAAiBlF,GAAIA,EAAIsF,KAAMA,EAAK8H,YAAa/M,MAAOA,OAI5D,cAAC,IAAD,CAAOoL,IAAI,KAAKhI,GAAG,IAAI5C,UAAU,iBAAjC,SACE,cAAC8K,EAAA,EAAD,CAAM9K,UAAU,OAAhB,SACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAUqG,UAAWA,EAAWC,aAAcA,IAC9C,cAAC,EAAD,CAAUD,UAAWA,EAAW2C,SAAUvE","file":"static/js/challenges-default-details-view.5a5ca0cd.chunk.js","sourcesContent":["/* eslint-disable react/no-array-index-key */\r\nimport React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport IntlMessages from '../../helpers/IntlMessages';\r\nimport { adminRoot } from '../../constants/defaultValues';\r\n\r\nconst getMenuTitle = (sub) => {\r\n  if (`/${sub}` === adminRoot) return <IntlMessages id=\"menu.home\" />;\r\n  return <IntlMessages id={`menu.${sub}`} />;\r\n};\r\n\r\nconst getUrl = (path, sub) => {\r\n  return path.split(sub)[0] + sub;\r\n};\r\n\r\nconst BreadcrumbContainer = ({ heading, match }) => {\r\n  return (\r\n    <>\r\n      {heading && (\r\n        <h1>\r\n          <IntlMessages id={heading} />\r\n        </h1>\r\n      )}\r\n      {match ? <BreadcrumbItems match={match} /> : null}\r\n    </>\r\n  );\r\n};\r\n\r\nconst BreadcrumbItems = ({ match }) => {\r\n  const path = match.path.substr(1);\r\n  let paths = path.split('/').filter(Boolean);\r\n\r\n  if (paths[paths.length - 1].indexOf(':') > -1) {\r\n    paths = paths.filter((x) => x.indexOf(':') === -1);\r\n  }\r\n  return (\r\n    <>\r\n      <Breadcrumb className=\"pt-0 breadcrumb-container d-none d-sm-block d-lg-inline-block\">\r\n        {paths.map((sub, index) => {\r\n          return (\r\n            <BreadcrumbItem key={index} active={paths.length === index + 1}>\r\n              {paths.length !== index + 1 ? (\r\n                <NavLink to={`/${getUrl(path, sub, index)}`}>\r\n                  {getMenuTitle(sub)}\r\n                </NavLink>\r\n              ) : (\r\n                getMenuTitle(sub)\r\n              )}\r\n            </BreadcrumbItem>\r\n          );\r\n        })}\r\n      </Breadcrumb>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BreadcrumbContainer;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, isObject } from './utils';\nvar colWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar columnProps = PropTypes.oneOfType([PropTypes.bool, PropTypes.string, PropTypes.number, PropTypes.shape({\n  size: stringOrNumberProp,\n  order: stringOrNumberProp,\n  offset: stringOrNumberProp\n})]);\nvar propTypes = {\n  children: PropTypes.node,\n  hidden: PropTypes.bool,\n  check: PropTypes.bool,\n  size: PropTypes.string,\n  for: PropTypes.string,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  widths: PropTypes.array\n};\nvar defaultProps = {\n  tag: 'label',\n  widths: colWidths\n};\n\nvar getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\" + colWidth;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n  }\n\n  return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n};\n\nvar Label = function Label(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      hidden = props.hidden,\n      widths = props.widths,\n      Tag = props.tag,\n      check = props.check,\n      size = props.size,\n      htmlFor = props.for,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"hidden\", \"widths\", \"tag\", \"check\", \"size\", \"for\"]);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    var isXs = !i;\n    var colClass;\n\n    if (isObject(columnProp)) {\n      var _classNames;\n\n      var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n      colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames))), cssModule);\n    } else {\n      colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n      colClasses.push(colClass);\n    }\n  });\n  var classes = mapToCssModules(classNames(className, hidden ? 'sr-only' : false, check ? 'form-check-label' : false, size ? \"col-form-label-\" + size : false, colClasses, colClasses.length ? 'col-form-label' : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({\n    htmlFor: htmlFor\n  }, attributes, {\n    className: classes\n  }));\n};\n\nLabel.propTypes = propTypes;\nLabel.defaultProps = defaultProps;\nexport default Label;","import { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport instance from '../helpers/axiosInstance';\r\n\r\nconst useFetch = (url, name = 'data') => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const [data, setData, remove] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!url) {\r\n      setError('Please Provide a Uri!');\r\n      return;\r\n    }\r\n\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await instance({\r\n          method: 'GET',\r\n          url,\r\n        });\r\n\r\n        if (response.data.success) {\r\n          setData(response.data[name]);\r\n        } else {\r\n          setError(response.data.message);\r\n        }\r\n        setLoading(false);\r\n      } catch (err) {\r\n        setError(err.message);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return { loading, data, error, remove };\r\n};\r\n\r\nexport default useFetch;\r\n\r\nuseFetch.propTypes = {\r\n  url: PropTypes.string.isRequired,\r\n  key: PropTypes.string.isRequired,\r\n  refresh: PropTypes.bool,\r\n};\r\n","/* eslint-disable react/no-danger */\r\nimport React from 'react';\r\nimport { Button, Card, Collapse } from 'reactstrap';\r\n\r\nconst FaqCard = ({ index, setShowIndex, showingIndex, item }) => {\r\n  return (\r\n    <Card className=\"d-flex mb-2\">\r\n      <div className=\"d-flex flex-grow-1 min-width-zero\">\r\n        <Button\r\n          color=\"link\"\r\n          className=\"card-body btn-empty btn-link list-item-heading text-left text-one\"\r\n          onClick={() => setShowIndex(index)}\r\n          aria-expanded={showingIndex === index}\r\n        >\r\n          {item.question}\r\n        </Button>\r\n      </div>\r\n      <Collapse isOpen={showingIndex === index}>\r\n        <div\r\n          className=\"card-body accordion-content pt-0\"\r\n          dangerouslySetInnerHTML={{ __html: item.answer }}\r\n        />\r\n      </Collapse>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default FaqCard;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardHeader = function CardHeader(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-header'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardHeader.propTypes = propTypes;\nCardHeader.defaultProps = defaultProps;\nexport default CardHeader;","import React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport { Nav, NavItem, NavLink } from 'reactstrap';\r\nimport IntlMessages from '../../../../../helpers/IntlMessages';\r\n\r\nconst NavItems = ({ activeTab, setActiveTab }) => {\r\n  return (\r\n    <Nav tabs className=\"card-header-tabs\">\r\n      <NavItem>\r\n        <NavLink\r\n          className={classNames({\r\n            active: activeTab === 'basics',\r\n            'nav-link': true,\r\n          })}\r\n          onClick={() => setActiveTab('basics')}\r\n          to=\"#\"\r\n          location={{}}\r\n        >\r\n          <IntlMessages id=\"menu.basics\" />\r\n        </NavLink>\r\n      </NavItem>\r\n\r\n      {/* <NavItem>\r\n        <NavLink\r\n          className={classNames({\r\n            active: activeTab === 'application',\r\n            'nav-link': true,\r\n          })}\r\n          onClick={() => setActiveTab('application')}\r\n          to=\"#\"\r\n          location={{}}\r\n        >\r\n          <IntlMessages id=\"menu.application\" />\r\n        </NavLink>\r\n      </NavItem> */}\r\n\r\n      <NavItem>\r\n        <NavLink\r\n          className={classNames({\r\n            active: activeTab === 'links',\r\n            'nav-link': true,\r\n          })}\r\n          onClick={() => setActiveTab('links')}\r\n          to=\"#\"\r\n          location={{}}\r\n        >\r\n          <IntlMessages id=\"menu.links\" />\r\n        </NavLink>\r\n      </NavItem>\r\n\r\n      {/* <NavItem>\r\n        <NavLink\r\n          className={classNames({\r\n            active: activeTab === 'brands',\r\n            'nav-link': true,\r\n          })}\r\n          onClick={() => setActiveTab('brands')}\r\n          to=\"#\"\r\n          location={{}}\r\n        >\r\n          <IntlMessages id=\"menu.brands\" />\r\n        </NavLink>\r\n      </NavItem> */}\r\n\r\n      <NavItem>\r\n        <NavLink\r\n          className={classNames({\r\n            active: activeTab === 'dates',\r\n            'nav-link': true,\r\n          })}\r\n          onClick={() => setActiveTab('dates')}\r\n          to=\"#\"\r\n          location={{}}\r\n        >\r\n          <IntlMessages id=\"menu.dates\" />\r\n        </NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink\r\n          className={classNames({\r\n            active: activeTab === 'prizes',\r\n            'nav-link': true,\r\n          })}\r\n          onClick={() => setActiveTab('prizes')}\r\n          to=\"#\"\r\n          location={{}}\r\n        >\r\n          <IntlMessages id=\"menu.prizes\" />\r\n        </NavLink>\r\n      </NavItem>\r\n\r\n      <NavItem>\r\n        <NavLink\r\n          className={classNames({\r\n            active: activeTab === 'judges',\r\n            'nav-link': true,\r\n          })}\r\n          onClick={() => setActiveTab('judges')}\r\n          to=\"#\"\r\n          location={{}}\r\n        >\r\n          <IntlMessages id=\"menu.judges\" />\r\n        </NavLink>\r\n      </NavItem>\r\n\r\n      <NavItem>\r\n        <NavLink\r\n          className={classNames({\r\n            active: activeTab === 'sponsors',\r\n            'nav-link': true,\r\n          })}\r\n          onClick={() => setActiveTab('sponsors')}\r\n          to=\"#\"\r\n          location={{}}\r\n        >\r\n          <IntlMessages id=\"menu.sponsors\" />\r\n        </NavLink>\r\n      </NavItem>\r\n\r\n      <NavItem>\r\n        <NavLink\r\n          className={classNames({\r\n            active: activeTab === 'faq',\r\n            'nav-link': true,\r\n          })}\r\n          onClick={() => setActiveTab('faq')}\r\n          to=\"#\"\r\n          location={{}}\r\n        >\r\n          <IntlMessages id=\"menu.faq\" />\r\n        </NavLink>\r\n      </NavItem>\r\n    </Nav>\r\n  );\r\n};\r\n\r\nexport default NavItems;\r\n","import React from 'react';\n/**\n * TabContext\n * {\n *  activeTabId: PropTypes.any\n * }\n */\n\nexport var TabContext = /*#__PURE__*/React.createContext({});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { TabContext } from './TabContext';\nimport { mapToCssModules, omit, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  activeTab: PropTypes.any,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar TabContent = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(TabContent, _Component);\n\n  TabContent.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {\n    if (prevState.activeTab !== nextProps.activeTab) {\n      return {\n        activeTab: nextProps.activeTab\n      };\n    }\n\n    return null;\n  };\n\n  function TabContent(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.state = {\n      activeTab: _this.props.activeTab\n    };\n    return _this;\n  }\n\n  var _proto = TabContent.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        Tag = _this$props.tag;\n    var attributes = omit(this.props, Object.keys(propTypes));\n    var classes = mapToCssModules(classNames('tab-content', className), cssModule);\n    return /*#__PURE__*/React.createElement(TabContext.Provider, {\n      value: {\n        activeTabId: this.state.activeTab\n      }\n    }, /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      className: classes\n    })));\n  };\n\n  return TabContent;\n}(Component);\n\nexport default TabContent;\nTabContent.propTypes = propTypes;\nTabContent.defaultProps = defaultProps;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { TabContext } from './TabContext';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  tabId: PropTypes.any\n};\nvar defaultProps = {\n  tag: 'div'\n};\nexport default function TabPane(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      tabId = props.tabId,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tabId\", \"tag\"]);\n\n  var getClasses = function getClasses(activeTabId) {\n    return mapToCssModules(classNames('tab-pane', className, {\n      active: tabId === activeTabId\n    }), cssModule);\n  };\n\n  return /*#__PURE__*/React.createElement(TabContext.Consumer, null, function (_ref) {\n    var activeTabId = _ref.activeTabId;\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      className: getClasses(activeTabId)\n    }));\n  });\n}\nTabPane.propTypes = propTypes;\nTabPane.defaultProps = defaultProps;","import React from 'react';\r\nimport { FormGroup, Input, Label } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport IntlMessages from '../../helpers/IntlMessages';\r\n\r\nconst InputDisplay = ({ messageId, name, value, intputType = 'text' }) => {\r\n  return (\r\n    <FormGroup className=\"mb-2 mt-4\">\r\n      <Label className=\"lead\">\r\n        <IntlMessages id={messageId} />\r\n      </Label>\r\n\r\n      <Input\r\n        type={intputType}\r\n        className=\"form-control\"\r\n        name={name}\r\n        value={value}\r\n        disabled\r\n      />\r\n    </FormGroup>\r\n  );\r\n};\r\n\r\nInputDisplay.proptype = {\r\n  messageId: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n  intputType: PropTypes.string,\r\n};\r\n\r\nexport default InputDisplay;\r\n","import React, { useState } from 'react';\r\n\r\nimport { Badge, CardBody, Row, TabContent, TabPane } from 'reactstrap';\r\nimport FaqCard from '../../../../../components/cards/FaqCard';\r\nimport { Colxx } from '../../../../../components/common/CustomBootstrap';\r\n// import { hackthonApplication } from '../../../../../constants/defaultValues';\r\nimport InputDisplay from '../../../../../containers/application/InputDisplay';\r\nimport IntlMessages from '../../../../../helpers/IntlMessages';\r\n\r\nconst TabPanes = ({ activeTab, hackInfo }) => {\r\n  const [showingIndex, setShowIndex] = useState(0);\r\n\r\n  const { hackathon, sponsors, prizes, judges, Faq } = hackInfo;\r\n\r\n  // const applicationAboutData = hackthonApplication.about.filter(({ value }) =>\r\n  //   application.about.includes(value)\r\n  // );\r\n  // const applicationContactData = hackthonApplication.contact.filter(\r\n  //   ({ value }) => application.contact.includes(value)\r\n  // );\r\n  // const applicationEducationData = hackthonApplication.education.filter(\r\n  //   ({ value }) => application.education.includes(value)\r\n  // );\r\n  // const applicationExpericeData = hackthonApplication.experience.filter(\r\n  //   ({ value }) => application.experience.includes(value)\r\n  // );\r\n  // const applicationOnlineProfileData = hackthonApplication.online_profiles.filter(\r\n  //   ({ value }) => application.online_profiles.includes(value)\r\n  // );\r\n\r\n  return (\r\n    <TabContent activeTab={activeTab}>\r\n      <TabPane tabId=\"basics\">\r\n        <CardBody>\r\n          <InputDisplay\r\n            messageId=\"challenges.hackathon-name\"\r\n            name=\"hackathon-name\"\r\n            value={hackathon.name}\r\n          />\r\n\r\n          <InputDisplay\r\n            messageId=\"challenges.hackathon-tagline\"\r\n            name=\"hackathon-tagline\"\r\n            value={hackathon.tagline}\r\n          />\r\n\r\n          <InputDisplay\r\n            messageId=\"challenges.about\"\r\n            name=\"hackathon-about\"\r\n            value={hackathon.about}\r\n            intputType=\"textarea\"\r\n          />\r\n\r\n          <InputDisplay\r\n            messageId=\"challenges.aproximate-participants\"\r\n            name=\"aproximate-participants\"\r\n            value={hackathon.aproximate_participants}\r\n          />\r\n\r\n          <InputDisplay\r\n            messageId=\"challenges.max-team-size\"\r\n            name=\"max-team-size\"\r\n            value={hackathon.max_team_size}\r\n          />\r\n        </CardBody>\r\n      </TabPane>\r\n\r\n      {/* <TabPane tabId=\"application\">\r\n        <Row>\r\n          <Colxx sm=\"12\">\r\n            <CardBody>\r\n              <div className=\"mb-4\">\r\n                <div className=\"lead h4\">\r\n                  <IntlMessages id=\"challenges.about-title\" />\r\n                </div>\r\n\r\n                {applicationAboutData.map((item) => (\r\n                  <Badge\r\n                    key={item.key}\r\n                    color=\"outline-primary\"\r\n                    pill\r\n                    className=\"m-2\"\r\n                  >\r\n                    <IntlMessages id={item.messageId} />\r\n                  </Badge>\r\n                ))}\r\n              </div>\r\n\r\n              <div className=\"mb-4\">\r\n                <div className=\"lead h4\">\r\n                  <IntlMessages id=\"challenges.education-title\" />\r\n                </div>\r\n\r\n                {applicationEducationData.map((item) => (\r\n                  <Badge\r\n                    key={item.key}\r\n                    color=\"outline-primary\"\r\n                    pill\r\n                    className=\"m-2\"\r\n                  >\r\n                    <IntlMessages id={item.messageId} />\r\n                  </Badge>\r\n                ))}\r\n              </div>\r\n\r\n              <div className=\"mb-4\">\r\n                <div className=\"lead h4\">\r\n                  <IntlMessages id=\"challenges.experience-title\" />\r\n                </div>\r\n\r\n                {applicationExpericeData.map((item) => (\r\n                  <Badge\r\n                    key={item.key}\r\n                    color=\"outline-primary\"\r\n                    pill\r\n                    className=\"m-2\"\r\n                  >\r\n                    <IntlMessages id={item.messageId} />\r\n                  </Badge>\r\n                ))}\r\n              </div>\r\n\r\n              <div className=\"mb-4\">\r\n                <div className=\"lead h4\">\r\n                  <IntlMessages id=\"challenges.online-profiles-title\" />\r\n                </div>\r\n\r\n                {applicationOnlineProfileData.map((item) => (\r\n                  <Badge\r\n                    key={item.key}\r\n                    color=\"outline-primary\"\r\n                    pill\r\n                    className=\"m-2\"\r\n                  >\r\n                    <IntlMessages id={item.messageId} />\r\n                  </Badge>\r\n                ))}\r\n              </div>\r\n\r\n              <div className=\"mb-4\">\r\n                <div className=\"lead h4\">\r\n                  <IntlMessages id=\"challenges.contact-title\" />\r\n                </div>\r\n\r\n                {applicationContactData.map((item) => (\r\n                  <Badge\r\n                    key={item.key}\r\n                    color=\"outline-primary\"\r\n                    pill\r\n                    className=\"m-2\"\r\n                  >\r\n                    <IntlMessages id={item.messageId} />\r\n                  </Badge>\r\n                ))}\r\n              </div>\r\n\r\n              <InputDisplay\r\n                messageId=\"challenges.custom-questions\"\r\n                name=\"theme-color-code\"\r\n                value=\"This is a Custom Question\"\r\n              />\r\n            </CardBody>\r\n          </Colxx>\r\n        </Row>\r\n      </TabPane> */}\r\n\r\n      <TabPane tabId=\"links\">\r\n        <Row>\r\n          <Colxx sm=\"12\">\r\n            <CardBody>\r\n              <InputDisplay\r\n                messageId=\"challenges.hackathon-website\"\r\n                name=\"hackathon-website\"\r\n                value={hackathon.hackathon_website}\r\n              />\r\n\r\n\r\n              <InputDisplay\r\n                messageId=\"challenges.contact-email\"\r\n                name=\"contact-email\"\r\n                value={hackathon.contact_email}\r\n              />\r\n\r\n              <InputDisplay\r\n                messageId=\"challenges.link-to-code-of-control\"\r\n                name=\"link-to-code-of-control\"\r\n                value={hackathon.link_to_code_of_control}\r\n              />\r\n\r\n              <InputDisplay\r\n                messageId=\"challenges.facebook\"\r\n                name=\"facebook\"\r\n                value={hackathon.facebook}\r\n              />\r\n\r\n              <InputDisplay\r\n                messageId=\"challenges.twitter\"\r\n                name=\"twitter\"\r\n                value={hackathon.twitter}\r\n              />\r\n\r\n              <InputDisplay\r\n                messageId=\"challenges.instagram\"\r\n                name=\"instagram\"\r\n                value={hackathon.instagram}\r\n              />\r\n\r\n              <InputDisplay\r\n                messageId=\"challenges.linkedin\"\r\n                name=\"linkedin\"\r\n                value={hackathon.linkedin}\r\n              />\r\n            </CardBody>\r\n          </Colxx>\r\n        </Row>\r\n      </TabPane>\r\n\r\n      <TabPane tabId=\"brands\">\r\n        <Row>\r\n          <Colxx sm=\"12\">\r\n            <CardBody>\r\n              <InputDisplay\r\n                messageId=\"challenges.theme-title\"\r\n                name=\"theme-color-code\"\r\n                value={hackathon.theme_color_code}\r\n              />\r\n            </CardBody>\r\n          </Colxx>\r\n        </Row>\r\n      </TabPane>\r\n\r\n      <TabPane tabId=\"dates\">\r\n        <Row>\r\n          <Colxx sm=\"12\">\r\n            <CardBody>\r\n              <InputDisplay\r\n                messageId=\"challenges.hackthon-application-begins\"\r\n                name=\"application-start\"\r\n                value={hackathon.application_start}\r\n              />\r\n\r\n              <InputDisplay\r\n                messageId=\"challenges.hackthon-application-ends\"\r\n                name=\"application-ends\"\r\n                value={hackathon.application_end}\r\n              />\r\n\r\n              <InputDisplay\r\n                messageId=\"challenges.hackthon-hackathon-begins\"\r\n                name=\"hackathon-starts\"\r\n                value={hackathon.hackathon_start}\r\n              />\r\n\r\n              <InputDisplay\r\n                messageId=\"challenges.hackthon-hackathon-ends\"\r\n                name=\"hackathon-ends\"\r\n                value={hackathon.hackathon_date}\r\n              />\r\n\r\n              <InputDisplay\r\n                messageId=\"challenges.announcement-results\"\r\n                name=\"accouncement-date\"\r\n                value={hackathon.results_date}\r\n              />\r\n\r\n              <InputDisplay\r\n                messageId=\"challenges.timezone\"\r\n                name=\"timezone\"\r\n                value={hackathon.timezone}\r\n              />\r\n            </CardBody>\r\n          </Colxx>\r\n        </Row>\r\n      </TabPane>\r\n      <TabPane tabId=\"prizes\">\r\n        <Row>\r\n          <Colxx sm=\"12\">\r\n            <CardBody>\r\n              {prizes.map((item) => (\r\n                <Badge\r\n                  key={item.id}\r\n                  color=\"outline-primary\"\r\n                  pill\r\n                  className=\"m-2\"\r\n                >\r\n                  <IntlMessages id={item.name} />\r\n                </Badge>\r\n              ))}\r\n            </CardBody>\r\n          </Colxx>\r\n        </Row>\r\n      </TabPane>\r\n\r\n      <TabPane tabId=\"sponsors\">\r\n        <Row>\r\n          <Colxx sm=\"12\">\r\n            <CardBody>\r\n              {sponsors.map((item) => (\r\n                <Badge\r\n                  key={item.id}\r\n                  color=\"outline-primary\"\r\n                  pill\r\n                  className=\"m-2\"\r\n                >\r\n                  <IntlMessages id={item.name} />\r\n                </Badge>\r\n              ))}\r\n            </CardBody>\r\n          </Colxx>\r\n        </Row>\r\n      </TabPane>\r\n\r\n      <TabPane tabId=\"judges\">\r\n        <Row>\r\n          <Colxx sm=\"12\">\r\n            <CardBody>\r\n              {judges.map((item) => (\r\n                <Badge\r\n                  key={item.id}\r\n                  color=\"outline-primary\"\r\n                  pill\r\n                  className=\"m-2\"\r\n                >\r\n                  <IntlMessages id={item.name} />\r\n                </Badge>\r\n              ))}\r\n            </CardBody>\r\n          </Colxx>\r\n        </Row>\r\n      </TabPane>\r\n\r\n      <TabPane tabId=\"faq\">\r\n        <Colxx xxs=\"12\" className=\"mt-4\">\r\n          {Faq.map((item, index) => (\r\n            <FaqCard\r\n              // eslint-disable-next-line react/no-array-index-key\r\n              key={`faqItem_${index}`}\r\n              item={item}\r\n              index={index}\r\n              showingIndex={showingIndex}\r\n              setShowIndex={setShowIndex}\r\n            />\r\n          ))}\r\n        </Colxx>\r\n      </TabPane>\r\n    </TabContent>\r\n  );\r\n};\r\n\r\nexport default TabPanes;\r\n","import React from 'react';\r\nimport { Card, CardBody, CardTitle } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n// import ParticipantCard from '../../../../../components/cards/ParticipantCard';\r\n\r\nimport IntlMessages from '../../../../../helpers/IntlMessages';\r\n\r\nconst ParticipantList = ({ data, match }) => {\r\n  return (\r\n    <>\r\n      <Card className=\"mb-4\">\r\n        <CardBody>\r\n          <CardTitle className=\"h1 mb-0 \">\r\n            <div className=\"d-flex justify-content-between \">\r\n              <IntlMessages id=\"challenges.participants\" />\r\n              {/* <pre>{JSON.stringify(data, null, 2)}</pre> */}\r\n\r\n              {data.length ? (\r\n                <>\r\n                  {`  (${data.length})`}\r\n                  <NavLink to={`${match.url}/participants`} className=\"p-0 m-0\">\r\n                    See all <i className=\"simple-icon-arrow-right-circle m-2\" />\r\n                  </NavLink>\r\n                </>\r\n              ) : null}\r\n            </div>\r\n          </CardTitle>\r\n        </CardBody>\r\n      </Card>\r\n\r\n      {data.length ? null : (\r\n        <Card className=\"mb-4\">\r\n          <CardBody>\r\n            <CardTitle className=\"h1 mb-0\">Currently No Participants</CardTitle>\r\n          </CardBody>\r\n        </Card>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ParticipantList;\r\n","import React, { useState } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Lightbox from 'react-image-lightbox';\r\nimport img from \"../../assets/img/profiles/profile.png\";\r\n\r\nconst SingleLightbox = ({ thumb, className, large }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  let isImg = false;\r\n  if(thumb !== null)\r\n  {\r\n    isImg = true;\r\n  }\r\n  console.log(thumb);\r\n  return (\r\n    <>\r\n      <NavLink to=\"#\" location={{}} onClick={() => setIsOpen(true)}>\r\n        <img \r\n          alt=\"Not Found\"\r\n          src={isImg?thumb:img}\r\n          className={className} \r\n          width=\"500\" \r\n        />\r\n      </NavLink>\r\n      {isOpen && (\r\n        <Lightbox mainSrc={large} onCloseRequest={() => setIsOpen(false)} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default SingleLightbox;\r\n","import React from 'react';\r\n\r\nimport { Card, CardBody, NavLink } from 'reactstrap';\r\nimport IntlMessages from '../../../../../helpers/IntlMessages';\r\n\r\nconst HackDetails = ({ hackInfo }) => {\r\n  const { hackathon } = hackInfo;\r\n\r\n  return (\r\n    <Card className=\"mb-4\">\r\n      <CardBody>\r\n        <div className=\"text-center pt-4\">\r\n          <p className=\"list-item-heading pt-2\">{hackathon.name}</p>\r\n        </div>\r\n        <p className=\"mb-3\">{hackathon.about}</p>\r\n        <p className=\"text-muted text-small mb-2\">\r\n          {/* <IntlMessages id=\"pages.location\" /> */}\r\n          Tagline\r\n        </p>\r\n        <p className=\"mb-3\">{hackathon.tagline}</p>\r\n        {/* <p className=\"text-muted text-small mb-2\">\r\n          <IntlMessages id=\"pages.responsibilities\" />\r\n        </p>\r\n        <p className=\"mb-3\">\r\n          <Badge color=\"outline-secondary\" className=\"mb-1 mr-1\" pill>\r\n            FRONTEND\r\n          </Badge>\r\n          <Badge color=\"outline-secondary\" className=\"mb-1 mr-1\" pill>\r\n            JAVASCRIPT\r\n          </Badge>\r\n          <Badge color=\"outline-secondary\" className=\"mb-1 mr-1\" pill>\r\n            SECURITY\r\n          </Badge>\r\n          <Badge color=\"outline-secondary\" className=\"mb-1 mr-1\" pill>\r\n            DESIGN\r\n          </Badge>\r\n        </p> */}\r\n        <p className=\"text-muted text-small mb-2\">\r\n          <IntlMessages id=\"menu.contact\" />\r\n        </p>\r\n        <div className=\"social-icons\">\r\n          <ul className=\"list-unstyled list-inline\">\r\n            <li className=\"list-inline-item\">\r\n              <NavLink href={hackathon.facebook} target=\"_blank\">\r\n                <i className=\"simple-icon-social-facebook\" />\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"list-inline-item\">\r\n              <NavLink href={hackathon.twitter} target=\"_blank\">\r\n                <i className=\"simple-icon-social-twitter\" />\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"list-inline-item\">\r\n              <NavLink href={hackathon.instagram} target=\"_blank\">\r\n                <i className=\"simple-icon-social-instagram\" />\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"list-inline-item\">\r\n              <NavLink href={hackathon.linkedin} target=\"_blank\">\r\n                <i className=\"simple-icon-social-linkedin\" />\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"list-inline-item\">\r\n              <NavLink href={hackathon.hackathon_website} target=\"_blank\">\r\n                <i className=\"simple-icon-link\" />\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default HackDetails;\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { useState } from 'react';\r\nimport { Button, Card, CardHeader, Row } from 'reactstrap';\r\n\r\nimport {\r\n  Colxx,\r\n  Separator,\r\n} from '../../../../components/common/CustomBootstrap';\r\n\r\nimport Breadcrumb from '../../../../containers/navs/Breadcrumb';\r\nimport AppError from '../../../../helpers/AppError';\r\nimport IntlMessages from '../../../../helpers/IntlMessages';\r\nimport NavItems from './components/NavItems';\r\nimport TabPanes from './components/TabPanes';\r\n\r\nimport { adminRoot } from '../../../../constants/defaultValues';\r\nimport useFetch from '../../../../hooks/use-fetch';\r\nimport ParticipantList from './components/ParicipantList';\r\nimport SingleLightbox from '../../../../components/application/SingleLightbox';\r\nimport HackDetails from './components/HackDetails';\r\n\r\nconst Details = ({ match }) => {\r\n  const { id } = match.params;\r\n\r\n  if (!id) throw new AppError('Please Provide Hackathon ID');\r\n\r\n  const [activeTab, setActiveTab] = useState('basics');\r\n\r\n  const { loading, data, error } = useFetch(`/getdetails/${id}`, 'getdetails');\r\n\r\n  if (loading) return <div className=\"loading\" />;\r\n\r\n  if (error) throw new AppError(error);\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Colxx xxs=\"10\">\r\n          <Breadcrumb heading=\"menu.details\" match={match} />\r\n        </Colxx>\r\n        <Colxx xxs=\"2\">\r\n          <Button size=\"sm\" href={`${adminRoot}/challenges/basics/${id}`}>\r\n            <IntlMessages id=\"challenges.edit-hackathon\" />\r\n          </Button>\r\n        </Colxx>\r\n      </Row>\r\n\r\n      <Separator className=\"mb-5\" />\r\n\r\n      <Row>\r\n        <Colxx xxs=\"12\" className=\"mb-5\">\r\n          <Card>\r\n            <SingleLightbox\r\n              thumb={data.hackathon.hackathon_cover_img}\r\n              large={data.hackathon.hackathon_cover_img}\r\n              className=\"social-header card-img\"\r\n            />\r\n          </Card>\r\n        </Colxx>\r\n\r\n        <Colxx xxs=\"12\" sm=\"5\" className=\"mb-4 col-left\">\r\n          <SingleLightbox\r\n            thumb={data.hackathon.hackathon_logo}\r\n            large={data.hackathon.hackathon_logo}\r\n            className=\"img-thumbnail card-img social-profile-img\"\r\n          />\r\n          {!loading && <HackDetails hackInfo={data} />}\r\n          {!loading && (\r\n            <ParticipantList id={id} data={data.Participant} match={match} />\r\n          )}\r\n        </Colxx>\r\n\r\n        <Colxx xxs=\"12\" sm=\"7\" className=\"mb-4 col-right\">\r\n          <Card className=\"mb-4\">\r\n            <CardHeader>\r\n              <NavItems activeTab={activeTab} setActiveTab={setActiveTab} />\r\n              <TabPanes activeTab={activeTab} hackInfo={data} />\r\n\r\n              {/* <pre>{JSON.stringify(data, null, 2)}</pre> */}\r\n            </CardHeader>\r\n          </Card>\r\n        </Colxx>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Details;\r\n"],"sourceRoot":""}