{"version":3,"sources":["../node_modules/reactstrap/es/FormGroup.js","../node_modules/reactstrap/es/Popover.js","../node_modules/reactstrap/es/PopoverBody.js","../node_modules/reactstrap/es/Badge.js","../node_modules/react-table/index.js","../../src/publicUtils.js","../../src/utils.js","../../src/makeDefaultPluginHooks.js","../../src/hooks/useColumnVisibility.js","../../src/hooks/useTable.js","../../src/plugin-hooks/useExpanded.js","../../src/filterTypes.js","../../src/plugin-hooks/useFilters.js","../../src/plugin-hooks/useGlobalFilter.js","../../src/aggregations.js","../../src/plugin-hooks/useGroupBy.js","../../src/sortTypes.js","../../src/plugin-hooks/useSortBy.js","../../src/plugin-hooks/usePagination.js","../../src/plugin-hooks/_UNSTABLE_usePivotColumns.js","../../src/plugin-hooks/useRowSelect.js","../../src/plugin-hooks/useRowState.js","../../src/plugin-hooks/useColumnOrder.js","../../src/plugin-hooks/useResizeColumns.js","../../src/plugin-hooks/useAbsoluteLayout.js","../../src/plugin-hooks/useBlockLayout.js","../../src/plugin-hooks/useFlexLayout.js","../../src/plugin-hooks/useGridLayout.js","../node_modules/reactstrap/es/PaginationItem.js","../node_modules/reactstrap/es/PaginationLink.js","../node_modules/reactstrap/es/Pagination.js"],"names":["propTypes","children","PropTypes","node","row","bool","check","inline","disabled","tag","tagPropType","className","string","cssModule","object","FormGroup","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps","Popover","popperClasses","popperClassName","innerClassName","TooltipPopoverWrapper","placement","placementPrefix","trigger","PopoverBody","color","pill","innerRef","oneOfType","func","Badge","href","ref","module","exports","require","actions","init","defaultRenderer","value","emptyRenderer","defaultColumn","Cell","width","minWidth","maxWidth","Number","MAX_SAFE_INTEGER","mergeProps","propList","reduce","next","style","makePropGetter","hooks","meta","userProps","prev","handlePropGetter","prevProps","Array","isArray","reduceHooks","initial","allowUndefined","loopHooks","context","forEach","hook","ensurePluginOrder","plugins","befores","pluginName","afters","findIndex","plugin","before","functionalUpdate","updater","old","useGetLatest","obj","useRef","current","useCallback","safeUseLayoutEffect","document","useLayoutEffect","useEffect","useMountedLayoutEffect","fn","deps","mountedRef","makeRenderer","instance","column","type","Comp","console","info","Error","flexRender","component","proto","Object","getPrototypeOf","prototype","isReactComponent","$$typeof","includes","description","linkColumnStructure","columns","parent","depth","map","assignColumnAccessor","flattenColumns","flattenBy","id","accessor","Header","accessorPath","split","path","def","val","cacheKey","JSON","stringify","pathObj","pathObjCache","get","flattenDeep","arr","newArr","i","length","push","String","d","replace","join","reOpenBracket","reCloseBracket","set","cursor","pathPart","e","error","assign","decorateColumn","userDefaultColumn","Footer","originalWidth","makeHeaderGroups","allColumns","additionalHeaderProperties","headerGroups","scanColumns","uid","getUID","headerGroup","headers","parentColumns","hasParents","some","newParent","latestParentColumn","reverse","originalId","placeholderOf","Map","getFirstDefined","args","isFunction","a","key","flat","recurse","expandRows","rows","manualExpandedKey","expanded","expandSubRows","expandedRows","handleRow","addToExpandedRows","isExpanded","original","canExpand","subRows","getFilterMethod","filter","userFilterTypes","filterTypes","text","shouldAutoRemoveFilter","autoRemove","unpreparedAccessWarning","passiveSupported","defaultGetTableProps","role","defaultGetTableBodyProps","defaultGetHeaderProps","colSpan","totalVisibleHeaderCount","defaultGetFooterProps","defaultGetHeaderGroupProps","index","defaultGetFooterGroupProps","defaultGetRowProps","defaultGetCellProps","cell","makeDefaultPluginHooks","useOptions","stateReducers","useControlledState","columnsDeps","allColumnsDeps","accessValue","materializedColumns","materializedColumnsDeps","useInstanceAfterData","visibleColumns","visibleColumnsDeps","headerGroupsDeps","useInstanceBeforeDimensions","useInstance","prepareRow","getTableProps","getTableBodyProps","getHeaderGroupProps","getFooterGroupProps","getHeaderProps","getFooterProps","getRowProps","getCellProps","useFinalInstance","resetHiddenColumns","toggleHideColumn","setHiddenColumns","toggleHideAllColumns","useColumnVisibility","getToggleHiddenProps","defaultGetToggleHiddenProps","getToggleHideAllColumnsProps","defaultGetToggleHideAllColumnsProps","reducer","state","hiddenColumns","onChange","toggleHidden","target","checked","isVisible","title","allColumnsHidden","indeterminate","action","previousState","initialState","columnId","handleColumn","parentVisible","subColumn","subHeader","flatHeaders","dispatch","getHooks","autoResetHiddenColumns","getInstance","getAutoResetHiddenColumns","defaultInitialState","defaultColumnInstance","defaultReducer","prevState","defaultGetSubRows","defaultGetRowId","defaultUseControlledState","applyDefaults","getSubRows","getRowId","stateReducer","calculateHeaderWidths","left","sumTotalMinWidth","sumTotalWidth","sumTotalMaxWidth","sumTotalFlexWidth","subHeaders","header","totalLeft","totalMinWidth","totalWidth","totalMaxWidth","totalFlexWidth","Math","min","max","canResize","accessRowsForColumn","data","flatRows","rowsById","accessValueHooks","originalRow","rowIndex","accessRow","parentRows","originalSubRows","cells","values","resetExpanded","toggleRowExpanded","toggleAllRowsExpanded","useExpanded","getToggleAllRowsExpandedProps","defaultGetToggleAllRowsExpandedProps","getToggleRowExpandedProps","defaultGetToggleRowExpandedProps","onClick","isAllRowsExpanded","keys","rowId","setExpanded","exists","shouldExist","paginateExpandedRows","autoResetExpanded","getAutoResetExpanded","Boolean","useMemo","expandedDepth","maxDepth","splitId","preExpandedRows","ids","filterValue","rowValue","toLowerCase","exactText","exactTextCase","includesAll","every","includesSome","includesValue","exact","equals","between","Infinity","temp","resetFilters","setFilter","setAllFilters","useFilters","filters","find","filterMethod","previousfilter","newFilter","manualFilters","defaultCanFilter","disableFilters","autoResetFilters","columnDefaultCanFilter","columnDisableFilters","canFilter","undefined","found","filteredFlatRows","filteredRowsById","filterRows","filteredRows","filteredSoFar","preFilteredRows","warn","getAutoResetFilters","preFilteredFlatRows","preFilteredRowsById","resetGlobalFilter","setGlobalFilter","useGlobalFilter","globalFilter","manualGlobalFilter","globalFilterValue","autoResetGlobalFilter","disableGlobalFilter","columnDisableGlobalFilter","filterableColumns","c","globalFilteredRows","globalFilteredFlatRows","globalFilteredRowsById","getAutoResetGlobalFilter","preGlobalFilteredRows","preGlobalFilteredFlatRows","preGlobalFilteredRowsById","sum","aggregatedValues","mid","floor","nums","sort","b","from","Set","size","emptyArray","emptyObject","resetGroupBy","setGroupBy","toggleGroupBy","useGroupBy","getGroupByToggleProps","defaultGetGroupByToggleProps","groupBy","canGroupBy","persist","resolvedGroupBy","groupByColumns","col","g","nonGroupByColumns","isGrouped","groupedIndex","indexOf","defaultUserAggregations","groupByFn","defaultGroupByFn","manualGroupBy","aggregations","userAggregations","autoResetGroupBy","disableGroupBy","defaultCanGroupBy","defaultColumnGroupBy","defaultGroupBy","columnDisableGroupBy","Aggregated","existingGroupBy","groupedFlatRows","groupedRowsById","onlyGroupedFlatRows","onlyGroupedRowsById","nonGroupedFlatRows","nonGroupedRowsById","groupedRows","groupUpRecursively","parentId","rowGroupsMap","entries","groupByVal","leafRows","aggregateFn","aggregate","groupedValues","leafValues","columnValue","aggregateValue","aggregateValueFn","groupByID","subRow","getAutoResetGroupBy","preGroupedRows","preGroupedFlatRow","preGroupedRowsById","allCells","isPlaceholder","isAggregated","resKey","reSplitAlphaNumeric","compareBasic","getRowValuesByColumnID","row1","row2","toString","isNaN","rowA","rowB","aa","shift","bb","an","parseInt","bn","combo","getTime","alower","blower","replaceNonNumeric","resetSortBy","setSortBy","toggleSortBy","clearSortBy","sortType","sortDescFirst","useSortBy","getSortByToggleProps","defaultGetSortByToggleProps","isMultiSortEvent","shiftKey","canSort","disableMultiSort","sortBy","sortAction","desc","multi","disableSortRemove","disableMultiRemove","maxMultiSortColCount","existingSortBy","existingIndex","hasDescDefined","newSortBy","splice","orderByFn","defaultOrderByFn","userSortTypes","sortTypes","manualSortBy","defaultCanSort","disableSortBy","autoResetSortBy","defaultColumnCanSort","columnDisableSortBy","columnSort","isSorted","sortedIndex","isSortedDesc","sortedFlatRows","availableSortBy","sortData","sortedData","sortMethod","sortInverted","sortedRows","getAutoResetSortBy","preSortedRows","preSortedFlatRows","funcs","dirs","sortFn","sortInt","resetPage","gotoPage","setPageSize","usePagination","pageSize","pageIndex","pageCount","page","newPageIndex","canNavigate","topRowIndex","autoResetPage","userPageCount","manualPagination","getAutoResetPage","ceil","pageOptions","fill","pageStart","pageEnd","slice","canPreviousPage","canNextPage","previousPage","nextPage","resetPivot","togglePivot","_UNSTABLE_usePivotColumns","getPivotToggleProps","defaultGetPivotToggleProps","defaultPivotColumns","canPivot","pivotColumns","setPivot","resolvedPivot","isPivotSource","uniqueValues","add","materialized","sourceColumns","newMaterialized","buildPivotColumns","pivotFilters","pivotColumn","u","columnGroup","PivotHeader","uniqueValue","isPivotGroup","pivotValue","sourceColumn","isPivoted","autoResetPivot","manaulPivot","disablePivot","defaultCanPivot","defaultColumnPivot","defaultPivot","columnDisablePivot","getAutoResetPivot","resetSelectedRows","toggleAllRowsSelected","toggleRowSelected","toggleAllPageRowsSelected","useRowSelect","getToggleRowSelectedProps","defaultGetToggleRowSelectedProps","getToggleAllRowsSelectedProps","defaultGetToggleAllRowsSelectedProps","getToggleAllPageRowsSelectedProps","defaultGetToggleAllPageRowsSelectedProps","manualRowSelectedKey","isSelected","isSomeSelected","isAllRowsSelected","selectedRowIds","isAllPageRowsSelected","setSelected","selectAll","selectSubRows","newSelectedRowIds","handleRowById","autoResetSelectedRows","selectedFlatRows","getRowIsSelected","allChildrenSelected","someSelected","getAutoResetSelectedRows","defaultInitialRowStateAccessor","defaultInitialCellStateAccessor","setRowState","setCellState","resetRowState","useRowState","initialRowStateAccessor","initialCellStateAccessor","rowState","oldRowState","oldCellState","cellState","autoResetRowState","getAutoResetRowState","setState","resetColumnOrder","setColumnOrder","useColumnOrder","columnOrder","columnOrderCopy","columnsCopy","columnsInOrder","targetColumnId","foundIndex","columnStartResizing","columnResizing","columnDoneResizing","resetResize","useResizeColumns","getResizerProps","defaultGetResizerProps","position","onResizeStart","isTouchEvent","touches","headerIdWidths","leafHeaders","recurseHeader","clientX","round","dispatchMove","clientXPos","dispatchEnd","handlersAndEvents","mouse","moveEvent","moveHandler","upEvent","upHandler","removeEventListener","touch","cancelable","preventDefault","stopPropagation","events","passiveIfSupported","supported","options","window","addEventListener","err","passive","columnWidth","onMouseDown","onTouchStart","draggable","columnWidths","startX","isResizingColumn","percentageDeltaX","newColumnWidths","headerId","headerWidth","disableResizing","isResizing","autoResetResize","getAutoResetResize","resetResizing","cellStyles","top","useAbsoluteLayout","getRowStyles","totalColumnsWidth","display","boxSizing","useBlockLayout","useFlexLayout","totalColumnsMinWidth","flex","useGridLayout","gridTemplateColumns","gridLayout","w","columnIndex","elWidth","getElementById","offsetWidth","startingWidth","newWidth","columnWidthsCopy","defaultFn","defaultWait","debounceRef","getDefaultFn","getDefaultWait","promise","Promise","resolve","reject","timeout","clearTimeout","setTimeout","userColumns","getStateReducer","s","handler","useReducer","reducerState","allColumnsQueue","initialRows","all","visibleColumnsDep","totalColumnsMaxWidth","render","footerGroups","active","PaginationItem","previous","first","last","PaginationLink","defaultAriaLabel","defaultCaret","ariaLabel","listClassName","listTag","Pagination","_classNames","ListTag","label","listClasses"],"mappings":"+JAAA,gFAMIA,EAAY,CACdC,SAAUC,IAAUC,KACpBC,IAAKF,IAAUG,KACfC,MAAOJ,IAAUG,KACjBE,OAAQL,IAAUG,KAClBG,SAAUN,IAAUG,KACpBI,IAAKC,IACLC,UAAWT,IAAUU,OACrBC,UAAWX,IAAUY,QAMnBC,EAAY,SAAmBC,GACjC,IAAIL,EAAYK,EAAML,UAClBE,EAAYG,EAAMH,UAClBT,EAAMY,EAAMZ,IACZI,EAAWQ,EAAMR,SACjBF,EAAQU,EAAMV,MACdC,EAASS,EAAMT,OACfU,EAAMD,EAAMP,IACZS,EAAaC,YAA8BH,EAAO,CAAC,YAAa,YAAa,MAAO,WAAY,QAAS,SAAU,QAEnHI,EAAUC,YAAgBC,IAAWX,IAAWP,GAAM,MAAeE,EAAQ,aAAe,gBAAcA,IAASC,IAAS,uBAA6BD,IAASE,IAAW,YAAqBK,GAMtM,MAJY,aAARI,IACFC,EAAWV,SAAWA,GAGJe,IAAMC,cAAcP,EAAKQ,YAAS,GAAIP,EAAY,CACpEP,UAAWS,MAIfL,EAAUf,UAAYA,EACtBe,EAAUW,aA1BS,CACjBjB,IAAK,OA0BQM,O,iCC3Cf,uDAUIY,EAAU,SAAiBX,GAC7B,IAAIY,EAAgBN,IAAW,UAAW,OAAQN,EAAMa,iBACpDT,EAAUE,IAAW,gBAAiBN,EAAMc,gBAChD,OAAoBP,IAAMC,cAAcO,IAAuBN,YAAS,GAAIT,EAAO,CACjFa,gBAAiBD,EACjBE,eAAgBV,MAIpBO,EAAQ3B,UAAYA,IACpB2B,EAAQD,aAhBW,CACjBM,UAAW,QACXC,gBAAiB,aACjBC,QAAS,SAcIP,O,iCCrBf,gFAMI3B,EAAY,CACdS,IAAKC,IACLC,UAAWT,IAAUU,OACrBC,UAAWX,IAAUY,QAMnBqB,EAAc,SAAqBnB,GACrC,IAAIL,EAAYK,EAAML,UAClBE,EAAYG,EAAMH,UAClBI,EAAMD,EAAMP,IACZS,EAAaC,YAA8BH,EAAO,CAAC,YAAa,YAAa,QAE7EI,EAAUC,YAAgBC,IAAWX,EAAW,gBAAiBE,GACrE,OAAoBU,IAAMC,cAAcP,EAAKQ,YAAS,GAAIP,EAAY,CACpEP,UAAWS,MAIfe,EAAYnC,UAAYA,EACxBmC,EAAYT,aAjBO,CACjBjB,IAAK,OAiBQ0B,O,iCC7Bf,gFAMInC,EAAY,CACdoC,MAAOlC,IAAUU,OACjByB,KAAMnC,IAAUG,KAChBI,IAAKC,IACL4B,SAAUpC,IAAUqC,UAAU,CAACrC,IAAUY,OAAQZ,IAAUsC,KAAMtC,IAAUU,SAC3EX,SAAUC,IAAUC,KACpBQ,UAAWT,IAAUU,OACrBC,UAAWX,IAAUY,QAQnB2B,EAAQ,SAAezB,GACzB,IAAIL,EAAYK,EAAML,UAClBE,EAAYG,EAAMH,UAClBuB,EAAQpB,EAAMoB,MACdE,EAAWtB,EAAMsB,SACjBD,EAAOrB,EAAMqB,KACbpB,EAAMD,EAAMP,IACZS,EAAaC,YAA8BH,EAAO,CAAC,YAAa,YAAa,QAAS,WAAY,OAAQ,QAE1GI,EAAUC,YAAgBC,IAAWX,EAAW,QAAS,SAAWyB,IAAOC,GAAO,cAAuBxB,GAM7G,OAJIK,EAAWwB,MAAgB,SAARzB,IACrBA,EAAM,KAGYM,IAAMC,cAAcP,EAAKQ,YAAS,GAAIP,EAAY,CACpEP,UAAWS,EACXuB,IAAKL,MAITG,EAAMzC,UAAYA,EAClByC,EAAMf,aA5Ba,CACjBU,MAAO,YACPC,MAAM,EACN5B,IAAK,QA0BQgC,O,oBC3CbG,EAAOC,QAAUC,EAAQ,M,6lCCC3B,IAEaC,EAAU,CACrBC,KAAM,QAGKC,EAAkB,SAAC,GAAD,QAAGC,wBAAQ,MAC7BC,EAAgB,kBAAM5B,yCAEtB6B,EAAgB,CAC3BC,KAAMJ,EACNK,MAAO,IACPC,SAAU,EACVC,SAAUC,OAAOC,kBAGnB,SAASC,+BAAcC,oDACdA,EAASC,QAAO,SAAC7C,EAAO8C,OACrBC,EAA8BD,EAA9BC,MAAOpD,EAAuBmD,EAAvBnD,iBAEfK,OACKA,OAHiC8C,0BAOlCC,IACF/C,EAAM+C,MAAQ/C,EAAM+C,WACV/C,EAAM+C,OAAS,MAASA,GAAS,IACvCA,GAGFpD,IACFK,EAAML,UAAYK,EAAML,UACpBK,EAAML,UAAY,IAAMA,EACxBA,GAGkB,KAApBK,EAAML,kBACDK,EAAML,UAGRK,IACN,QAkBQgD,EAAiB,SAACC,EAAOC,yBAAO,IACpC,SAACC,yBAAY,IAClB,UAAIF,GAAOE,IAAWN,QACpB,SAACO,EAAMN,UAlBb,SAASO,EAAiBC,EAAWH,EAAWD,SAErB,mBAAdC,EACFE,EAAiB,GAAIF,EAAUG,EAAWJ,IAI/CK,MAAMC,QAAQL,GACTR,gBAAWW,UAAcH,IAI3BR,EAAWW,EAAWH,GAZ/B,CAmByBC,EAAMN,OAClBI,GACHC,iBAEJ,MAIOM,EAAc,SAACR,EAAOS,EAASR,EAAWS,mBAAXT,MAAO,IACjDD,EAAMJ,QAAO,SAACO,EAAMN,UACAA,EAAKM,EAAMF,KAU5BQ,IAEQE,EAAY,SAACX,EAAOY,EAASX,yBAAO,IAC/CD,EAAMa,SAAQ,YACMC,EAAKF,EAASX,OAW7B,SAASc,EAAkBC,EAASC,EAASC,EAAYC,GAM1CH,EAAQI,WAC1B,mBAAUC,EAAOH,aAAeA,KAalCD,EAAQJ,SAAQ,YACMG,EAAQI,WAC1B,mBAAUC,EAAOH,aAAeI,QAY/B,SAASC,EAAiBC,EAASC,SACd,mBAAZD,EAAyBA,EAAQC,GAAOD,EAGjD,SAASE,EAAaC,OACrBjD,EAAMpB,EAAMsE,gBAClBlD,EAAImD,QAAUF,EAEPrE,EAAMwE,aAAY,kBAAMpD,EAAImD,UAAS,QAIjCE,EACS,oBAAbC,SAA2B1E,EAAM2E,gBAAkB3E,EAAM4E,UAE3D,SAASC,EAAuBC,EAAIC,OACnCC,EAAahF,EAAMsE,WAEzBG,GAAoB,WACdO,EAAWT,SACbO,IAEFE,EAAWT,aAEVQ,GAuCE,SAASE,EAAaC,EAAUC,EAAQxC,yBAAO,IAC7C,SAACyC,EAAMxC,kBAAY,QAClByC,EAAuB,iBAATD,EAAoBD,EAAOC,GAAQA,cAE5CC,QACTC,QAAQC,KAAKJ,GACP,IAAIK,MA1MA,sCA6MLC,EAAWJ,OAAWH,GAAUC,UAAWxC,KAASC,KAIxD,SAAS6C,EAAWJ,EAAM5F,UAYjC,SAA0BiG,SAED,mBAAdA,IAECC,EAAQC,OAAOC,eAAeH,IACvBI,WAAaH,EAAMG,UAAUC,iBAF3C,IACOJ,EAJZ,CAR0BD,EAHAL,IAMD,mBAAdK,GAeX,SAA2BA,SAEF,iBAAdA,GACuB,iBAAvBA,EAAUM,UACjB,CAAC,aAAc,qBAAqBC,SAASP,EAAUM,SAASE,aAJpE,CAdsBR,GAPY1F,gBAACqF,EAAS5F,GAAY4F,EAGxD,IAA0BK,EC1MnB,SAASS,EAAoBC,EAASC,EAAQC,yBAAQ,GACpDF,EAAQG,KAAI,mBAOjBC,EANArB,OACKA,GACHkB,SACAC,WAKEnB,EAAOiB,UACTjB,EAAOiB,QAAUD,EAAoBhB,EAAOiB,QAASjB,EAAQmB,EAAQ,IAEhEnB,KAIJ,SAASsB,EAAeL,UACtBM,EAAUN,EAAS,WAGrB,SAASI,EAAqBrB,OAE7BwB,EAAyBxB,EAAzBwB,GAAIC,EAAqBzB,EAArByB,SAAUC,EAAW1B,EAAX0B,UAEI,iBAAbD,EAAuB,CAChCD,EAAKA,GAAMC,MACLE,EAAeF,EAASG,MAAM,KACpCH,EAAW,mBA+HR,SAAevC,EAAK2C,EAAMC,OAC1BD,SACI3C,MAYL6C,EAVEC,EAA2B,mBAATH,EAAsBA,EAAOI,KAAKC,UAAUL,GAE9DM,EACJC,EAAaC,IAAIL,IAChB,eACOG,EAiJZ,SAAuBjD,UAevB,SAASoD,EAAYC,EAAKC,GAAS,QAATA,UAAS,IAC5B3E,MAAMC,QAAQyE,OAGZ,IAAIE,EAAI,EAAGA,EAAIF,EAAIG,OAAQD,GAAK,EACnCH,EAAYC,EAAIE,GAAID,QAHtBA,EAAOG,KAAKJ,UAMPC,EART,CAbgBtD,GAETkC,KAAI,mBAAKwB,OAAOC,GAAGC,QAAQ,IAAK,QAEhCC,KAAK,KAELD,QAAQE,EAAe,KACvBF,QAAQG,EAAgB,IAExBrB,MAAM,KAXb,CAjJoCC,UAC9BO,EAAac,IAAIlB,EAAUG,GACpBA,EAHR,OASDJ,EAAMI,EAAQhF,QAAO,SAACgG,EAAQC,UAAaD,EAAOC,KAAWlE,GAC7D,MAAOmE,oBAGKtB,EAAsBA,EAAMD,EArBrC,CA/HqBpI,EAAKiI,QAG1BH,GAAwB,iBAAXE,GAAuBA,IACvCF,EAAKE,IAGFF,GAAMxB,EAAOiB,cAChBd,QAAQmD,MAAMtD,GACR,IAAIK,MAAM,2DAGbmB,QACHrB,QAAQmD,MAAMtD,GACR,IAAIK,MAAM,wDAGlBI,OAAO8C,OAAOvD,EAAQ,CACpBwB,KACAC,aAGKzB,EAGF,SAASwD,EAAexD,EAAQyD,OAChCA,QACG,IAAIpD,aAEZI,OAAO8C,OAAOvD,KAEZ0B,OAAQjF,EACRiH,OAAQjH,GACLC,KACA+G,KACAzD,IAGLS,OAAO8C,OAAOvD,EAAQ,CACpB2D,cAAe3D,EAAOpD,QAGjBoD,EAIF,SAAS4D,EACdC,EACAnH,EACAoH,kBAA6B,iBAAO,aAE9BC,EAAe,GAEjBC,EAAcH,EAEdI,EAAM,EACJC,EAAS,kBAAMD,sBAIbE,EAAc,CAClBC,QAAS,IAILC,EAAgB,GAEhBC,EAAaN,EAAYO,MAAK,mBAAK1B,EAAE3B,UAG3C8C,EAAY5F,SAAQ,gBAIdoG,EAFAC,EAAqB,UAAIJ,GAAeK,UAAU,GAIlDJ,IAGAE,EADExE,EAAOkB,OACTsD,KACKxE,EAAOkB,QACVyD,WAAY3E,EAAOkB,OAAOM,GAC1BA,GAAOxB,EAAOkB,OAAOM,OAAM0C,IAC3BE,QAAS,CAACpE,IACP8D,EAA2B9D,IAKpBwD,KAERmB,WAHkB3E,EAAOwB,kBAIzBA,GAAOxB,EAAOwB,mBAAkB0C,IAChCU,cAAe5E,EACfoE,QAAS,CAACpE,IACP8D,EAA2B9D,IAEhCtD,GAOF+H,GACAA,EAAmBE,aAAeH,EAAUG,WAE5CF,EAAmBL,QAAQzB,KAAK3C,GAEhCqE,EAAc1B,KAAK6B,IAIvBL,EAAYC,QAAQzB,KAAK3C,MAG3B+D,EAAapB,KAAKwB,GAGlBH,EAAcK,GA7DTL,EAAYtB,mBAgEZqB,EAAaW,UAGtB,IAAMtC,EAAe,IAAIyC,IA0BlB,SAASC,+BAAmBC,iDAC5B,IAAItC,EAAI,EAAGA,EAAIsC,EAAKrC,OAAQD,GAAK,cACzBsC,EAAKtC,UACPsC,EAAKtC,GA8BX,SAASuC,EAAWC,MACR,mBAANA,SACFA,EAIJ,SAAS1D,EAAUgB,EAAK2C,OACvBC,EAAO,UAEG,SAAVC,EAAU,GACd7C,EAAInE,SAAQ,YACLyE,EAAEqC,GAGLE,EAAQvC,EAAEqC,IAFVC,EAAKxC,KAAKE,MAHA,CAURN,GAED4C,EAGF,SAASE,EACdC,SACEC,sBAAmBC,iBAAUC,8BAEzBC,EAAe,UAiBrBJ,EAAKlH,SAAQ,mBAfK,SAAZuH,EAAajM,EAAKkM,sBACtBlM,EAAImM,WACDnM,EAAIoM,UAAYpM,EAAIoM,SAASP,IAAuBC,EAAS9L,EAAI8H,IAEpE9H,EAAIqM,UAAYrM,EAAIsM,WAAatM,EAAIsM,QAAQtD,OAEzCkD,GACFF,EAAa/C,KAAKjJ,GAGhBA,EAAIsM,SAAWtM,EAAIsM,QAAQtD,QAAUhJ,EAAImM,YAC3CnM,EAAIsM,QAAQ5H,SAAQ,mBAAOuH,EAAUjM,EAAK+L,MAX5B,CAeY/L,MAEvBgM,EAGF,SAASO,EAAgBC,EAAQC,EAAiBC,UAErDpB,EAAWkB,IACXC,EAAgBD,IAChBE,EAAYF,IACZE,EAAYC,KAIT,SAASC,EAAuBC,EAAY/J,EAAOwD,UACjDuG,EAAaA,EAAW/J,EAAOwD,YAAiBxD,EAGlD,SAASgK,UACR,IAAInG,MACR,mGAIJ,IAAIoG,EAAmB,KAyBjBzD,EAAgB,MAChBC,EAAiB,MChUjByD,EAAuB,sBAC3BC,KAAM,SACHrM,IAGCsM,EAA2B,sBAC/BD,KAAM,YACHrM,IAGCuM,EAAwB,SAACvM,SAAS0F,qBACtCkF,cAAelF,EAAOwB,GACtBsF,QAAS9G,EAAO+G,wBAChBJ,KAAM,gBACHrM,IAGC0M,EAAwB,SAAC1M,SAAS0F,qBACtCkF,cAAelF,EAAOwB,GACtBsF,QAAS9G,EAAO+G,yBACbzM,IAGC2M,EAA6B,SAAC3M,eAClC4K,qBAD2CgC,MAE3CP,KAAM,OACHrM,IAGC6M,EAA6B,SAAC7M,eAClC4K,qBAD2CgC,OAExC5M,IAGC8M,EAAqB,SAAC9M,eAC1B4K,aADmCxL,IACnB8H,GAChBmF,KAAM,OACHrM,IAGC+M,EAAsB,SAAC/M,SAASgN,mBACpCpC,YAAaoC,EAAK5N,IAAI8H,OAAM8F,EAAKtH,OAAOwB,GACxCmF,KAAM,QACHrM,IAGU,SAASiN,UACf,CACLC,WAAY,GACZC,cAAe,GACfC,mBAAoB,GACpBzG,QAAS,GACT0G,YAAa,GACb9D,WAAY,GACZ+D,eAAgB,GAChBC,YAAa,GACbC,oBAAqB,GACrBC,wBAAyB,GACzBC,qBAAsB,GACtBC,eAAgB,GAChBC,mBAAoB,GACpBnE,aAAc,GACdoE,iBAAkB,GAClBC,4BAA6B,GAC7BC,YAAa,GACbC,WAAY,GACZC,cAAe,CAAC7B,GAChB8B,kBAAmB,CAAC5B,GACpB6B,oBAAqB,CAACxB,GACtByB,oBAAqB,CAACvB,GACtBwB,eAAgB,CAAC9B,GACjB+B,eAAgB,CAAC5B,GACjB6B,YAAa,CAACzB,GACd0B,aAAc,CAACzB,GACf0B,iBAAkB,IChEtB1M,EAAQ2M,mBAAqB,qBAC7B3M,EAAQ4M,iBAAmB,mBAC3B5M,EAAQ6M,iBAAmB,mBAC3B7M,EAAQ8M,qBAAuB,uBAExB,IAAMC,EAAsB,YACjC7L,EAAM8L,qBAAuB,CAACC,GAC9B/L,EAAMgM,6BAA+B,CAACC,GAEtCjM,EAAMkK,cAAc9E,KAAK8G,GACzBlM,EAAM6K,4BAA4BzF,KAAKyF,GACvC7K,EAAM4K,iBAAiBxF,MAAK,SAAC/C,SAAQG,6BAChCH,GACHG,EAAS2J,MAAMC,mBAEjBpM,EAAM8K,YAAY1F,KAAK0F,IAGzBe,EAAoB3K,WAAa,sBAEjC,IAAM6K,EAA8B,SAAChP,SAAS0F,iBAAa,CACzD1F,EACA,CACEsP,SAAU,SAAAvG,GACRrD,EAAO6J,cAAcxG,EAAEyG,OAAOC,UAEhC1M,MAAO,CACL8F,OAAQ,WAEV4G,QAAS/J,EAAOgK,UAChBC,MAAO,2BAILT,EAAsC,SAAClP,SAASyF,mBAAe,CACnEzF,EACA,CACEsP,SAAU,SAAAvG,GACRtD,EAASoJ,sBAAsB9F,EAAEyG,OAAOC,UAE1C1M,MAAO,CACL8F,OAAQ,WAEV4G,SAAUhK,EAASmK,mBAAqBnK,EAAS2J,MAAMC,cAAcjH,OACrEuH,MAAO,4BACPE,eACGpK,EAASmK,kBAAoBnK,EAAS2J,MAAMC,cAAcjH,UAIjE,SAAS+G,EAAQC,EAAOU,EAAQC,EAAetK,MACzCqK,EAAOnK,OAAS5D,EAAQC,eAExBqN,cAAe,IACZD,MAIHU,EAAOnK,OAAS5D,EAAQ2M,+BAErBU,GACHC,cAAe5J,EAASuK,aAAaX,eAAiB,QAItDS,EAAOnK,OAAS5D,EAAQ4M,iBAAkB,KAMtCU,YAJGS,EAAO5N,MACV4N,EAAO5N,OACNkN,EAAMC,cAAc7I,SAASsJ,EAAOG,qBAGnCb,EAAMC,eAAeS,EAAOG,WAChCb,EAAMC,cAAczD,QAAO,mBAAKrD,IAAMuH,EAAOG,wBAG5Cb,GACHC,yBAIAS,EAAOnK,OAAS5D,EAAQ6M,sBAErBQ,GACHC,cAAe7K,EAAiBsL,EAAO5N,MAAOkN,EAAMC,iBAIpDS,EAAOnK,OAAS5D,EAAQ8M,0BAOrBO,GACHC,wBANOS,EAAO5N,MACV4N,EAAO5N,OACNkN,EAAMC,cAAcjH,QAIE3C,EAAS8D,WAAWzC,KAAI,mBAAKyB,EAAErB,MAAM,YAKtE,SAAS4G,EAA4BrI,OAEjCqE,EAEErE,EAFFqE,QACSuF,EACP5J,EADF2J,MAASC,cAGU9O,EAAMsE,WAETC,YAsBd2H,EAA0B,EAE9B3C,EAAQhG,SACN,mBAAc2I,GAtBK,SAAfyD,EAAgBxK,EAAQyK,GAC5BzK,EAAOgK,UAAYS,IAAkBd,EAAc7I,SAASd,EAAOwB,QAE/DuF,EAA0B,SAE1B/G,EAAOoE,SAAWpE,EAAOoE,QAAQ1B,OACnC1C,EAAOoE,QAAQhG,SACb,mBACG2I,GAA2ByD,EAAaE,EAAW1K,EAAOgK,cAG/DjD,EAA0B/G,EAAOgK,UAAY,EAAI,EAGnDhK,EAAO+G,wBAA0BA,EAE1BA,EAhBY,CAsBmC4D,SAI1D,SAAStC,EAAYtI,OAEjBkB,EAOElB,EAPFkB,QACA2J,EAME7K,EANF6K,YACAC,EAKE9K,EALF8K,SACAhH,EAIE9D,EAJF8D,WACAiH,EAGE/K,EAHF+K,SACSnB,EAEP5J,EAFF2J,MAASC,gBAEP5J,EADFgL,uCAGIC,EAAc/L,EAAac,GAE3BmK,EAAmBrG,EAAWnB,SAAWiH,EAAcjH,OAEvDuG,EAAmBpO,EAAMwE,aAC7B,SAACkL,EAAU/N,UACTqO,EAAS,CAAE5K,KAAM5D,EAAQ4M,iBAAkBsB,WAAU/N,YACvD,CAACqO,IAGG3B,EAAmBrO,EAAMwE,aAC7B,mBAASwL,EAAS,CAAE5K,KAAM5D,EAAQ6M,iBAAkB1M,YACpD,CAACqO,IAGG1B,EAAuBtO,EAAMwE,aACjC,mBAASwL,EAAS,CAAE5K,KAAM5D,EAAQ8M,qBAAsB3M,YACxD,CAACqO,IAGGtB,EAA+BjM,EACnCwN,IAAWvB,6BACX,CAAExJ,SAAUiL,MAGdJ,EAAYxM,SAAQ,YAClB4B,EAAO6J,aAAe,YACpBgB,EAAS,CACP5K,KAAM5D,EAAQ4M,iBACdsB,SAAUvK,EAAOwB,GACjBhF,WAIJwD,EAAOqJ,qBAAuB/L,EAC5BwN,IAAWzB,qBACX,CACEtJ,SAAUiL,IACVhL,kBAKAiL,EAA4BhM,EAAa8L,GAE/CrL,GAAuB,WACjBuL,KACFJ,EAAS,CAAE5K,KAAM5D,EAAQ2M,uBAE1B,CAAC6B,EAAU5J,IAEdR,OAAO8C,OAAOxD,EAAU,CACtBmK,mBACAjB,mBACAC,mBACAC,uBACAI,iCC7LJ,IAAM2B,GAAsB,GACtBC,GAAwB,GACxBC,GAAiB,SAAC1B,EAAOU,EAAQiB,UAAc3B,GAC/C4B,GAAoB,SAAC5R,EAAKwN,UAAUxN,EAAIsM,SAAW,IACnDuF,GAAkB,SAAC7R,EAAKwN,EAAOhG,aAChCA,EAAS,CAACA,EAAOM,GAAI0F,GAAOnE,KAAK,KAAOmE,IACvCsE,GAA4B,mBAAK3I,GAEvC,SAAS4I,GAAcnR,SASjBA,EAPFgQ,0BAAeY,OAOb5Q,EANFoC,2BAAgByO,OAMd7Q,EALFoR,wBAAaJ,OAKXhR,EAJFqR,sBAAWJ,OAITjR,EAHFsR,0BAAeR,OAGb9Q,EAFFoN,gCAAqB8D,mBAEnBlR,iGAIFgQ,eACA5N,gBACAgP,aACAC,WACAC,eACAlE,uBAmZJ,SAASmE,GAAsBzH,EAAS0H,kBAAO,OACzCC,EAAmB,EACnBC,EAAgB,EAChBC,EAAmB,EACnBC,EAAoB,SAExB9H,EAAQhG,SAAQ,gBACC+N,EAAeC,EAAxBhI,WAENgI,EAAOC,UAAYP,EAEfK,GAAcA,EAAWzJ,OAAQ,OAM/BmJ,GAAsBM,EAAYL,GAJpCQ,OACAC,OACAC,OACAC,OAEFL,EAAOE,cAAgBA,EACvBF,EAAOG,WAAaA,EACpBH,EAAOI,cAAgBA,EACvBJ,EAAOK,eAAiBA,OAExBL,EAAOE,cAAgBF,EAAOvP,SAC9BuP,EAAOG,WAAaG,KAAKC,IACvBD,KAAKE,IAAIR,EAAOvP,SAAUuP,EAAOxP,OACjCwP,EAAOtP,UAETsP,EAAOI,cAAgBJ,EAAOtP,SAC9BsP,EAAOK,eAAiBL,EAAOS,UAAYT,EAAOG,WAAa,EAE7DH,EAAOpC,YACT8B,GAAQM,EAAOG,WACfR,GAAoBK,EAAOE,cAC3BN,GAAiBI,EAAOG,WACxBN,GAAoBG,EAAOI,cAC3BN,GAAqBE,EAAOK,mBAIzB,CAACV,EAAkBC,EAAeC,EAAkBC,GAG7D,SAASY,UACPC,SACAzH,SACA0H,aACAC,aACAjN,WACA2L,aACAD,eACAwB,qBACAlC,gBAmFA+B,EAAK3O,SAAQ,SAAC+O,EAAaC,UA9ET,SAAZC,EAAaF,EAAaC,EAAUjM,EAAWD,EAAQoM,YAAnBnM,MAAQ,OAE1C2E,EAAWqH,EAEX3L,EAAKmK,EAASwB,EAAaC,EAAUlM,GAEvCxH,EAAMuT,EAASzL,MAGd9H,EAsCMA,EAAIsM,SAIbtM,EAAI6T,gBAAgBnP,SAAQ,SAACyE,EAAGJ,UAAM4K,EAAUxK,EAAGJ,EAAGtB,EAAQ,EAAGzH,eAzCjEA,EAAM,CACJ8H,KACAsE,WACAoB,MAAOkG,EACPjM,QACAqM,MAAO,CAAC,MAKNA,MAAMpM,IAAMoF,EAChB9M,EAAI8T,MAAMtH,OAASM,EACnB9M,EAAI8T,MAAMpP,QAAUoI,EACpB9M,EAAI8T,MAAM,GAAG1E,aAAetC,EAG5B9M,EAAI+T,OAAS,GAGbH,EAAW3K,KAAKjJ,GAEhBsT,EAASrK,KAAKjJ,GAEduT,EAASzL,GAAM9H,EAGfA,EAAI6T,gBAAkB7B,EAAWyB,EAAaC,GAG1C1T,EAAI6T,gBAAiB,KACjBvH,EAAU,GAChBtM,EAAI6T,gBAAgBnP,SAAQ,SAACyE,EAAGJ,UAC9B4K,EAAUxK,EAAGJ,EAAGtB,EAAQ,EAAGzH,EAAKsM,MAGlCtM,EAAIsM,QAAUA,EAUdhG,EAAOyB,WACT/H,EAAI+T,OAAOzN,EAAOwB,IAAMxB,EAAOyB,SAC7B0L,EACAC,EACA1T,EACA4T,EACAP,IAKJrT,EAAI+T,OAAOzN,EAAOwB,IAAMzD,EACtBmP,EACAxT,EAAI+T,OAAOzN,EAAOwB,IAClB,CACE9H,MACAsG,SACAD,SAAUiL,MAxEE,CA+ENmC,EAAaC,EAAU,SAAc9H,MClkBnDjJ,EAAQqR,cAAgB,gBACxBrR,EAAQsR,kBAAoB,oBAC5BtR,EAAQuR,sBAAwB,4BAEnBC,GAAc,YACzBtQ,EAAMuQ,8BAAgC,CAACC,IACvCxQ,EAAMyQ,0BAA4B,CAACC,IACnC1Q,EAAMkK,cAAc9E,KAAK8G,IACzBlM,EAAM8K,YAAY1F,KAAK0F,IACvB9K,EAAM+K,WAAW3F,KAAK2F,KAGxBuF,GAAYpP,WAAa,cAEzB,IAAMsP,GAAuC,SAACzT,SAASyF,mBAAe,CACpEzF,EACA,CACE4T,QAAS,SAAA7K,GACPtD,EAAS6N,yBAEXvQ,MAAO,CACL8F,OAAQ,WAEV8G,MAAO,8BAILgE,GAAmC,SAAC3T,SAASZ,cAAU,CAC3DY,EACA,CACE4T,QAAS,WACPxU,EAAIiU,qBAENtQ,MAAO,CACL8F,OAAQ,WAEV8G,MAAO,yBAKX,SAASR,GAAQC,EAAOU,EAAQC,EAAetK,MACzCqK,EAAOnK,OAAS5D,EAAQC,eAExBkJ,SAAU,IACPkE,MAIHU,EAAOnK,OAAS5D,EAAQqR,0BAErBhE,GACHlE,SAAUzF,EAASuK,aAAa9E,UAAY,QAI5C4E,EAAOnK,OAAS5D,EAAQuR,sBAAuB,KACzCpR,EAAU4N,EAAV5N,MACA2R,EAAgCpO,EAAhCoO,kBAAmBlB,EAAalN,EAAbkN,qBAEFzQ,EAAwBA,GAAS2R,EAE3C,KACP3I,EAAW,UAEjB/E,OAAO2N,KAAKnB,GAAU7O,SAAQ,YAC5BoH,EAAS6I,SAAS,KAIf3E,GACHlE,yBAKCkE,GACHlE,SAAU,QAIV4E,EAAOnK,OAAS5D,EAAQsR,kBAAmB,OACrCnM,EAA2B4I,EAA3B5I,GAAW8M,EAAgBlE,EAAvB5N,MACN+R,EAAS7E,EAAMlE,SAAShE,GAExBgN,WACGF,EAA8BA,GAAeC,MAEjDA,GAAUC,cAER9E,GACHlE,cACKkE,EAAMlE,iBACRhE,MAAK,MAGL,GAAI+M,IAAWC,EAAa,OACJ9E,EAAMlE,SAA1BhE,OAA0BgE,EAA1BhE,QAEJkI,GACHlE,cAHOhE,oBAMFkI,GAKb,SAASrB,GAAYtI,OAEjBgN,EAWEhN,EAXFgN,KACAzH,EAUEvF,EAVFuF,KACA2H,EASElN,EATFkN,WASElN,EARFwF,+BAAoB,eAQlBxF,EAPF0O,uCAOE1O,EANF0F,gCAME1F,EALF2O,kCACA5D,EAIE/K,EAJF+K,SACAvM,EAGEwB,EAHFxB,QACSiH,EAEPzF,EAFF2J,MAASlE,SACTqF,EACE9K,EADF8K,SAGFvM,EACEC,EACA,CAAC,YAAa,aAAc,kBAAmB,mBAC/C,mBAGIoQ,EAAuB1P,EAAayP,GAEtCP,EAAoBS,QACtBnO,OAAO2N,KAAKnB,GAAUvK,QAAUjC,OAAO2N,KAAK5I,GAAU9C,QAGpDyL,GACE1N,OAAO2N,KAAKnB,GAAU1I,MAAK,mBAAOiB,EAAShE,QAC7C2M,MAKJzO,GAAuB,WACjBiP,KACF9D,EAAS,CAAE5K,KAAM5D,EAAQqR,kBAE1B,CAAC7C,EAAUkC,QAERY,EAAoB9S,EAAMwE,aAC9B,SAACmC,EAAIhF,GACHqO,EAAS,CAAE5K,KAAM5D,EAAQsR,kBAAmBnM,KAAIhF,YAElD,CAACqO,IAGG+C,EAAwB/S,EAAMwE,aAClC,mBAASwL,EAAS,CAAE5K,KAAM5D,EAAQuR,sBAAuBpR,YACzD,CAACqO,IAGGnF,EAAe7K,EAAMgU,SAAQ,kBAC7BJ,EACKpJ,EAAWC,EAAM,CAAEC,oBAAmBC,WAAUC,kBAGlDH,IACN,CAACmJ,EAAsBnJ,EAAMC,EAAmBC,EAAUC,IAEvDqJ,EAAgBjU,EAAMgU,SAAQ,kBAmCtC,SAA2BrJ,OACrBuJ,EAAW,SAEftO,OAAO2N,KAAK5I,GAAUpH,SAAQ,gBACtB4Q,EAAUxN,EAAGI,MAAM,KACzBmN,EAAWrC,KAAKE,IAAImC,EAAUC,EAAQtM,WAGjCqM,EART,CAnC8DvJ,KAAW,CACrEA,IAGIwF,EAAc/L,EAAac,GAE3B+N,EAAgCxQ,EACpCwN,IAAWgD,8BACX,CAAE/N,SAAUiL,MAGdvK,OAAO8C,OAAOxD,EAAU,CACtBkP,gBAAiB3J,EACjBI,eACAJ,KAAMI,EACNoJ,gBACAX,oBACAR,oBACAC,wBACAE,kCAIJ,SAASxF,GAAW5O,SAAmBoR,IAAZ/K,SAAY+K,SAAY/K,aACjDrG,EAAIiU,kBAAoB,mBAAO5N,EAAS4N,kBAAkBjU,EAAI8H,GAAI0B,IAElExJ,EAAIsU,0BAA4B1Q,EAC9BwN,IAAWkD,0BACX,CACEjO,WACArG,YCnNO2M,GAAO,SAACf,EAAM4J,EAAKC,UACvB7J,EAAKY,QAAO,mBACVgJ,EAAI3K,MAAK,gBACR6K,EAAW1V,EAAI+T,OAAOjM,UACrBoB,OAAOwM,GACXC,cACAvO,SAAS8B,OAAOuM,GAAaE,sBAMtChJ,GAAKE,WAAa,mBAAQxE,GAEnB,IAAMuN,GAAY,SAAChK,EAAM4J,EAAKC,UAC5B7J,EAAKY,QAAO,mBACVgJ,EAAI3K,MAAK,gBACR6K,EAAW1V,EAAI+T,OAAOjM,mBACrB4N,GACHxM,OAAOwM,GAAUC,gBAAkBzM,OAAOuM,GAAaE,qBAMjEC,GAAU/I,WAAa,mBAAQxE,GAExB,IAAMwN,GAAgB,SAACjK,EAAM4J,EAAKC,UAChC7J,EAAKY,QAAO,mBACVgJ,EAAI3K,MAAK,gBACR6K,EAAW1V,EAAI+T,OAAOjM,mBACrB4N,GACHxM,OAAOwM,KAAcxM,OAAOuM,UAMtCI,GAAchJ,WAAa,mBAAQxE,GAE5B,IAAMjB,GAAW,SAACwE,EAAM4J,EAAKC,UAC3B7J,EAAKY,QAAO,mBACVgJ,EAAI3K,MAAK,mBACG7K,EAAI+T,OAAOjM,GACZV,SAASqO,UAK/BrO,GAASyF,WAAa,mBAAQxE,IAAQA,EAAIW,QAEnC,IAAM8M,GAAc,SAAClK,EAAM4J,EAAKC,UAC9B7J,EAAKY,QAAO,mBACVgJ,EAAI3K,MAAK,gBACR6K,EAAW1V,EAAI+T,OAAOjM,UAE1B4N,GACAA,EAAS1M,QACTyM,EAAYM,OAAM,mBAAOL,EAAStO,SAASiB,aAMnDyN,GAAYjJ,WAAa,mBAAQxE,IAAQA,EAAIW,QAEtC,IAAMgN,GAAe,SAACpK,EAAM4J,EAAKC,UAC/B7J,EAAKY,QAAO,mBACVgJ,EAAI3K,MAAK,gBACR6K,EAAW1V,EAAI+T,OAAOjM,UAE1B4N,GACAA,EAAS1M,QACTyM,EAAY5K,MAAK,mBAAO6K,EAAStO,SAASiB,aAMlD2N,GAAanJ,WAAa,mBAAQxE,IAAQA,EAAIW,QAEvC,IAAMiN,GAAgB,SAACrK,EAAM4J,EAAKC,UAChC7J,EAAKY,QAAO,mBACVgJ,EAAI3K,MAAK,gBACR6K,EAAW1V,EAAI+T,OAAOjM,UACrB2N,EAAYrO,SAASsO,UAKlCO,GAAcpJ,WAAa,mBAAQxE,IAAQA,EAAIW,QAExC,IAAMkN,GAAQ,SAACtK,EAAM4J,EAAKC,UACxB7J,EAAKY,QAAO,mBACVgJ,EAAI3K,MAAK,mBACG7K,EAAI+T,OAAOjM,KACR2N,SAK1BS,GAAMrJ,WAAa,4BAAcxE,GAE1B,IAAM8N,GAAS,SAACvK,EAAM4J,EAAKC,UACzB7J,EAAKY,QAAO,mBACVgJ,EAAI3K,MAAK,mBACG7K,EAAI+T,OAAOjM,IAET2N,SAKzBU,GAAOtJ,WAAa,mBAAc,MAAPxE,GAEpB,IAAM+N,GAAU,SAACxK,EAAM4J,EAAKC,SAChBA,GAAe,GAA3BxC,OAAKC,WAEVD,EAAqB,iBAARA,EAAmBA,SAChCC,EAAqB,iBAARA,EAAmBA,EAAMmD,KAEvB,KACPC,EAAOrD,EACbA,EAAMC,EACNA,EAAMoD,SAGD1K,EAAKY,QAAO,mBACVgJ,EAAI3K,MAAK,gBACR6K,EAAW1V,EAAI+T,OAAOjM,UACrB4N,GAAYzC,GAAOyC,GAAYxC,SAK5CkD,GAAQvJ,WAAa,mBAClBxE,GAA0B,iBAAXA,EAAI,IAAqC,iBAAXA,EAAI,2KCtHpD1F,EAAQ4T,aAAe,eACvB5T,EAAQ6T,UAAY,YACpB7T,EAAQ8T,cAAgB,oBAEXC,GAAa,YACxB7S,EAAMkK,cAAc9E,KAAK8G,IACzBlM,EAAM8K,YAAY1F,KAAK0F,KAKzB,SAASoB,GAAQC,EAAOU,EAAQC,EAAetK,MACzCqK,EAAOnK,OAAS5D,EAAQC,eAExB+T,QAAS,IACN3G,MAIHU,EAAOnK,OAAS5D,EAAQ4T,yBAErBvG,GACH2G,QAAStQ,EAASuK,aAAa+F,SAAW,QAI1CjG,EAAOnK,OAAS5D,EAAQ6T,UAAW,KAC7B3F,EAA0BH,EAA1BG,SAAU4E,EAAgB/E,EAAhB+E,YACVtL,EAA6C9D,EAA7C8D,WAAyBsC,EAAoBpG,EAAjCqG,YAEdpG,EAAS6D,EAAWyM,MAAK,mBAAKzN,EAAErB,KAAO+I,SAExCvK,QACG,IAAIK,uDACyCkK,OAI/CgG,EAAetK,EACnBjG,EAAOkG,OACPC,GAAmB,GACnBC,IAGIoK,EAAiB9G,EAAM2G,QAAQC,MAAK,mBAAKzN,EAAErB,KAAO+I,KAElDkG,EAAY3R,EAChBqQ,EACAqB,GAAkBA,EAAehU,cAI/B8J,EAAuBiK,EAAahK,WAAYkK,EAAWzQ,QAExD0J,GACH2G,QAAS3G,EAAM2G,QAAQnK,QAAO,mBAAKrD,EAAErB,KAAO+I,YAMzCb,EAFH8G,GAGAH,QAAS3G,EAAM2G,QAAQjP,KAAI,mBACrByB,EAAErB,KAAO+I,EACJ,CAAE/I,GAAI+I,EAAU/N,MAAOiU,GAEzB5N,OAOXwN,kBAAa3G,EAAM2G,SAAS,CAAE7O,GAAI+I,EAAU/N,MAAOiU,UAInDrG,EAAOnK,OAAS5D,EAAQ8T,cAAe,KACjCE,EAAYjG,EAAZiG,QACAxM,EAA6C9D,EAA7C8D,WAAyBsC,EAAoBpG,EAAjCqG,wBAGfsD,GAEH2G,QAASvR,EAAiBuR,EAAS3G,EAAM2G,SAASnK,QAAO,gBACjDlG,EAAS6D,EAAWyM,MAAK,mBAAKzN,EAAErB,KAAO0E,EAAO1E,aAQlD8E,EAPmBL,EACnBjG,EAAOkG,OACPC,GAAmB,GACnBC,IAIoCG,WAAYL,EAAO1J,MAAOwD,SAUxE,SAASqI,GAAYtI,OAEjBgN,EAYEhN,EAZFgN,KACAzH,EAWEvF,EAXFuF,KACA0H,EAUEjN,EAVFiN,SACAC,EASElN,EATFkN,SACApJ,EAQE9D,EARF8D,WACasC,EAOXpG,EAPFqG,YACAsK,EAME3Q,EANF2Q,gBAME3Q,EALF4Q,iCACAC,EAIE7Q,EAJF6Q,eACSP,EAGPtQ,EAHF2J,MAAS2G,QACTxF,EAEE9K,EAFF8K,WAEE9K,EADF8Q,iCAGIX,EAAYrV,EAAMwE,aACtB,SAACkL,EAAU4E,GACTtE,EAAS,CAAE5K,KAAM5D,EAAQ6T,UAAW3F,WAAU4E,kBAEhD,CAACtE,IAGGsF,EAAgBtV,EAAMwE,aAC1B,YACEwL,EAAS,CACP5K,KAAM5D,EAAQ8T,cACdE,cAGJ,CAACxF,IAGHhH,EAAWzF,SAAQ,gBAEfoD,EAIExB,EAJFwB,GACAC,EAGEzB,EAHFyB,SACkBqP,EAEhB9Q,EAFF2Q,iBACgBI,EACd/Q,EADF4Q,eAIF5Q,EAAOgR,UAAYvP,EACfqD,OACEiM,WAAwCE,IACxCL,WAAkCK,GAGpCnM,EAAgBgM,EAAwBH,MAG5C3Q,EAAOkQ,UAAY,mBAAOA,EAAUlQ,EAAOwB,GAAIO,QAIzCmP,EAAQb,EAAQC,MAAK,mBAAKzN,EAAErB,KAAOA,KACzCxB,EAAOmP,YAAc+B,GAASA,EAAM1U,eAOlC3B,EAAMgU,SAAQ,cACZ6B,IAAkBL,EAAQ3N,aACrB,CAAC4C,EAAM0H,EAAUC,OAGpBkE,EAAmB,GACnBC,EAAmB,SAiElB,CA9DY,SAAbC,EAAc/L,EAAMnE,kBAAQ,OAC5BmQ,EAAehM,SAEnBgM,EAAejB,EAAQlT,QACrB,SAACoU,SAAqBhH,IAAJ/I,GAAqB2N,IAAP3S,MAExBwD,EAAS6D,EAAWyM,MAAK,mBAAKzN,EAAErB,KAAO+I,SAExCvK,SACIuR,EAGK,IAAVpQ,IACFnB,EAAOwR,gBAAkBD,OAGrBhB,EAAetK,EACnBjG,EAAOkG,OACPC,GAAmB,GACnBC,WAGGmK,GASLvQ,EAAOsR,aAAef,EACpBgB,EACA,CAAChH,GACD4E,GAGKnP,EAAOsR,eAdZnR,QAAQsR,uEAC4DzR,EAAOwB,QAEpE+P,KAaXjM,IAOWlH,SAAQ,YACnB+S,EAAiBxO,KAAKjJ,GACtB0X,EAAiB1X,EAAI8H,IAAM9H,EACtBA,EAAIsM,UAITtM,EAAIsM,QACFtM,EAAIsM,SAAWtM,EAAIsM,QAAQtD,OAAS,EAChC2O,EAAW3X,EAAIsM,QAAS7E,EAAQ,GAChCzH,EAAIsM,YAGLsL,EA3DU,CA8DAhM,GAAO6L,EAAkBC,KAC3C,CACDV,EACAL,EACA/K,EACA0H,EACAC,EACApJ,EACAsC,IAlFAmL,OACAH,OACAC,OAmFFvW,EAAMgU,SAAQ,WAGehL,EAAWqC,QACpC,mBAAWmK,EAAQC,MAAK,mBAAKzN,EAAErB,KAAOxB,EAAOwB,SAK5BpD,SAAQ,YACzB4B,EAAOwR,gBAAkBF,EACzBtR,EAAOsR,aAAeA,OAEvB,CAACA,EAAcjB,EAASxM,QAErB6N,EAAsBzS,EAAa4R,GAEzCnR,GAAuB,WACjBgS,KACF7G,EAAS,CAAE5K,KAAM5D,EAAQ4T,iBAE1B,CAACpF,EAAU6F,EAAgB,KAAO3D,IAErCtM,OAAO8C,OAAOxD,EAAU,CACtByR,gBAAiBlM,EACjBqM,oBAAqB3E,EACrB4E,oBAAqB3E,EACrBqE,eACAH,mBACAC,mBACA9L,KAAMgM,EACNtE,SAAUmE,EACVlE,SAAUmE,EACVlB,YACAC,kBAjRJC,GAAW3R,WAAa,aCTxBpC,EAAQwV,kBAAoB,oBAC5BxV,EAAQyV,gBAAkB,sBAEbC,GAAkB,YAC7BxU,EAAMkK,cAAc9E,KAAK8G,IACzBlM,EAAM8K,YAAY1F,KAAK0F,KAKzB,SAASoB,GAAQC,EAAOU,EAAQC,EAAetK,MACzCqK,EAAOnK,OAAS5D,EAAQwV,8BAErBnI,GACHsI,aAAcjS,EAASuK,aAAa0H,uBAAgBf,GAIpD7G,EAAOnK,OAAS5D,EAAQyV,gBAAiB,KACnC3C,EAAgB/E,EAAhB+E,YACAhJ,EAAoBpG,EAApBoG,gBAEFoK,EAAetK,EACnBlG,EAASiS,aACT7L,GAAmB,GACnBC,IAGIqK,EAAY3R,EAAiBqQ,EAAazF,EAAMsI,qBAGlD1L,EAAuBiK,EAAahK,WAAYkK,IACI/G,EAA9CsI,eAA8CtI,0BAKnDA,GACHsI,aAAcvB,KAKpB,SAASpI,GAAYtI,OAEjBgN,EAYEhN,EAZFgN,KACAzH,EAWEvF,EAXFuF,KACA0H,EAUEjN,EAVFiN,SACAC,EASElN,EATFkN,SACApJ,EAQE9D,EARF8D,WACasC,EAOXpG,EAPFqG,YACA4L,EAMEjS,EANFiS,aACAC,EAKElS,EALFkS,mBACuBC,EAIrBnS,EAJF2J,MAASsI,aACTnH,EAGE9K,EAHF8K,WAGE9K,EAFFoS,sCACAC,EACErS,EADFqS,oBAGIN,EAAkBjX,EAAMwE,aAC5B,YACEwL,EAAS,CAAE5K,KAAM5D,EAAQyV,gBAAiB3C,kBAE5C,CAACtE,MAYChQ,EAAMgU,SAAQ,cACZoD,YAA6BC,QACxB,CAAC5M,EAAM0H,EAAUC,OAGpBkE,EAAmB,GACnBC,EAAmB,GAEnBb,EAAetK,EACnB+L,EACA7L,GAAmB,GACnBC,QAGGmK,SACHpQ,QAAQsR,sDACDnM,EAGTzB,EAAWzF,SAAQ,gBACYiU,EAA8BrS,EAAnDoS,oBAERpS,EAAOgR,UAAYlM,OACjBuN,WAA6CpB,IAC7CmB,WAAuCnB,MACvC,IAIEqB,EAAoBzO,EAAWqC,QAAO,uBAAKqM,EAAEvB,mBAuB5C,CApBY,SAAbK,EAAa,UACjBC,EAAef,EACbe,EACAgB,EAAkBlR,KAAI,mBAAKyB,EAAErB,MAC7B0Q,IAGW9T,SAAQ,YACnB+S,EAAiBxO,KAAKjJ,GACtB0X,EAAiB1X,EAAI8H,IAAM9H,EAE3BA,EAAIsM,QACFtM,EAAIsM,SAAWtM,EAAIsM,QAAQtD,OACvB2O,EAAW3X,EAAIsM,SACftM,EAAIsM,WAGLsL,EAjBU,CAoBAhM,GAAO6L,EAAkBC,KAC3C,CACDa,EACAC,EACAF,EACA7L,EACAtC,EACAyB,EACA0H,EACAC,EACAmF,IAjEAI,OACAC,OACAC,OAkEIC,EAA2B1T,EAAakT,GAE9CzS,GAAuB,WACjBiT,KACF9H,EAAS,CAAE5K,KAAM5D,EAAQwV,sBAE1B,CAAChH,EAAUoH,EAAqB,KAAOlF,IAE1CtM,OAAO8C,OAAOxD,EAAU,CACtB6S,sBAAuBtN,EACvBuN,0BAA2B7F,EAC3B8F,0BAA2B7F,EAC3BuF,qBACAC,yBACAC,yBACApN,KAAMkN,EACNxF,SAAUyF,EACVxF,SAAUyF,EACVZ,kBACAM,wBCjLG,SAASW,GAAItF,EAAQuF,UAGnBA,EAAiB7V,QACtB,SAAC4V,EAAK3V,UAAS2V,GAAuB,iBAAT3V,EAAoBA,EAAO,KACxD,GDqBJ2U,GAAgBtT,WAAa,kECjBtB,SAAagP,OACdd,EAAMc,EAAO,IAAM,SAEvBA,EAAOrP,SAAQ,YACQ,iBAAV5B,IACTmQ,EAAMD,KAAKC,IAAIA,EAAKnQ,OAIjBmQ,OAGF,SAAac,OACdb,EAAMa,EAAO,IAAM,SAEvBA,EAAOrP,SAAQ,YACQ,iBAAV5B,IACToQ,EAAMF,KAAKE,IAAIA,EAAKpQ,OAIjBoQ,UAGF,SAAgBa,OACjBd,EAAMc,EAAO,IAAM,EACnBb,EAAMa,EAAO,IAAM,SAEvBA,EAAOrP,SAAQ,YACQ,iBAAV5B,IACTmQ,EAAMD,KAAKC,IAAIA,EAAKnQ,GACpBoQ,EAAMF,KAAKE,IAAIA,EAAKpQ,OAIdmQ,OAAQC,WAGb,SAAiBa,UACfsF,GAAI,EAAMtF,GAAUA,EAAO/K,eAG7B,SAAgB+K,OAChBA,EAAO/K,cACH,SAGHuQ,EAAMvG,KAAKwG,MAAMzF,EAAO/K,OAAS,GACjCyQ,EAAO,UAAI1F,GAAQ2F,MAAK,SAACnO,EAAGoO,UAAMpO,EAAIoO,YACrC5F,EAAO/K,OAAS,GAAM,EAAIyQ,EAAKF,IAAQE,EAAKF,EAAM,GAAKE,EAAKF,IAAQ,UAGtE,SAAgBxF,UACd5P,MAAMyV,KAAK,IAAIC,IAAI9F,GAAQA,uBAG7B,SAAqBA,UACnB,IAAI8F,IAAI9F,GAAQ+F,YAGlB,SAAe/F,UACbA,EAAO/K,UCxDV+Q,GAAa,GACbC,GAAc,GAGpBrX,EAAQsX,aAAe,eACvBtX,EAAQuX,WAAa,aACrBvX,EAAQwX,cAAgB,oBAEXC,GAAa,YACxBvW,EAAMwW,sBAAwB,CAACC,IAC/BzW,EAAMkK,cAAc9E,KAAK8G,IACzBlM,EAAM2K,mBAAmBvF,MAAK,SAAC/C,SAAQG,6BAClCH,GACHG,EAAS2J,MAAMuK,aAEjB1W,EAAM0K,eAAetF,KAAKsF,IAC1B1K,EAAM8K,YAAY1F,KAAK0F,IACvB9K,EAAM+K,WAAW3F,KAAK2F,KAGxBwL,GAAWrV,WAAa,aAExB,IAAMuV,GAA+B,SAAC1Z,SAAS8R,iBAAa,CAC1D9R,EACA,CACE4T,QAAS9B,EAAO8H,WACZ,SAAA7Q,GACEA,EAAE8Q,UACF/H,EAAOyH,wBAGbxW,MAAO,CACL8F,OAAQiJ,EAAO8H,WAAa,kBAE9BjK,MAAO,oBAKX,SAASR,GAAQC,EAAOU,EAAQC,EAAetK,MACzCqK,EAAOnK,OAAS5D,EAAQC,eAExB2X,QAAS,IACNvK,MAIHU,EAAOnK,OAAS5D,EAAQsX,yBAErBjK,GACHuK,QAASlU,EAASuK,aAAa2J,SAAW,QAI1C7J,EAAOnK,OAAS5D,EAAQuX,uBAGrBlK,GACHuK,QAHgB7J,EAAV5N,WAON4N,EAAOnK,OAAS5D,EAAQwX,cAAe,KACjCtJ,EAAgCH,EAAhCG,SAAiBqJ,EAAexJ,EAAtB5N,MAEZ4X,WACGR,EACHA,GACClK,EAAMuK,QAAQnT,SAASyJ,eAIvBb,EAFH0K,GAGAH,kBAAavK,EAAMuK,SAAS1J,MAM9B0J,QAASvK,EAAMuK,QAAQ/N,QAAO,mBAAKrD,IAAM0H,QAK/C,SAAStC,GACPhH,SAGagT,IADXlU,SACE2J,MAASuK,QAOPI,EAAiBJ,EACpB7S,KAAI,mBAAKH,EAAQqP,MAAK,mBAAOgE,EAAI9S,KAAO+S,QACxCrO,OAAO0I,SAEJ4F,EAAoBvT,EAAQiF,QAAO,mBAAQ+N,EAAQnT,SAASwT,EAAI9S,cAEtEP,YAAcoT,EAAmBG,IAEzBpW,SAAQ,YACd4B,EAAOyU,UAAYR,EAAQnT,SAASd,EAAOwB,IAC3CxB,EAAO0U,aAAeT,EAAQU,QAAQ3U,EAAOwB,OAGxCP,EAGT,IAAM2T,GAA0B,GAEhC,SAASvM,GAAYtI,OAEjBgN,EAgBEhN,EAhBFgN,KACAzH,EAeEvF,EAfFuF,KACA0H,EAcEjN,EAdFiN,SACAC,EAaElN,EAbFkN,SACApJ,EAYE9D,EAZF8D,WACA+G,EAWE7K,EAXF6K,cAWE7K,EAVF8U,uBAAYC,KACZC,EASEhV,EATFgV,gBASEhV,EARFiV,aAAcC,aAAmBL,KACjCrW,EAOEwB,EAPFxB,QACS0V,EAMPlU,EANF2J,MAASuK,QACTpJ,EAKE9K,EALF8K,WAKE9K,EAJFmV,iCACAC,EAGEpV,EAHFoV,eACAC,EAEErV,EAFFqV,kBACAtK,EACE/K,EADF+K,SAGFxM,EAAkBC,EAAS,CAAC,iBAAkB,cAAe,kBAEvDyM,EAAc/L,EAAac,GAEjC8D,EAAWzF,SAAQ,gBAEfqD,EAGEzB,EAHFyB,SACgB4T,EAEdrV,EAFFsV,eACgBC,EACdvV,EADFmV,eAGFnV,EAAOkU,WAAazS,EAChBqD,EACE9E,EAAOkU,gBACPqB,WAAwCtE,IACxCkE,WAAkClE,GAGpCnM,EACE9E,EAAOkU,WACPmB,EACAD,MAIFpV,EAAOkU,aACTlU,EAAO6T,cAAgB,kBAAM9T,EAAS8T,cAAc7T,EAAOwB,MAG7DxB,EAAOwV,WAAaxV,EAAOwV,YAAcxV,EAAOrD,YAG5CkX,EAAgBhZ,EAAMwE,aAC1B,SAACkL,EAAU/N,GACTqO,EAAS,CAAE5K,KAAM5D,EAAQwX,cAAetJ,WAAU/N,YAEpD,CAACqO,IAGG+I,EAAa/Y,EAAMwE,aACvB,YACEwL,EAAS,CAAE5K,KAAM5D,EAAQuX,WAAYpX,YAEvC,CAACqO,IAGHD,EAAYxM,SAAQ,YAClBgO,EAAO2H,sBAAwBzW,EAC7BwN,IAAWiJ,sBACX,CAAEhU,SAAUiL,IAAeoB,oBAY3BvR,EAAMgU,SAAQ,cACZkG,IAAkBd,EAAQvR,aACrB,CACL4C,EACA0H,EACAC,EACAwG,GACAC,GACA1G,EACAC,OAKEwI,EAAkBxB,EAAQ/N,QAAO,mBACrCrC,EAAWyM,MAAK,mBAAOgE,EAAI9S,KAAO+S,QAiEhCmB,EAAkB,GAChBC,EAAkB,GAClBC,EAAsB,GACtBC,EAAsB,GACtBC,EAAqB,GACrBC,EAAqB,GA6DrBC,EA1DqB,SAArBC,EAAsB3Q,EAAMnE,EAAW+U,eAAX/U,MAAQ,GAEpCA,IAAUsU,EAAgB/S,cACrB4C,MAGHiF,EAAWkL,EAAgBtU,GAG7BgV,EAAetB,EAAUvP,EAAMiF,UAGL9J,OAAO2V,QAAQD,GAAc/U,KACzD,WAA4B8F,OAA1BmP,OAAYL,OACRxU,EAAQ+I,MAAY8L,EAIlBrQ,EAAUiQ,EAAmBD,EAAa7U,EAAQ,EAHxDK,EAAK0U,EAAcA,MAAY1U,EAAOA,GAMhC8U,EAAWnV,EACbI,EAAUyU,EAAa,YACvBA,EAEEvI,EA7FkB,SAAC6I,EAAUN,EAAa7U,OAC9CsM,EAAS,UAEf5J,EAAWzF,SAAQ,eAEbqX,EAAgB3U,SAASd,EAAOwB,IAClCiM,EAAOzN,EAAOwB,IAAMwU,EAAY,GAC5BA,EAAY,GAAGvI,OAAOzN,EAAOwB,IAC7B,cAKF+U,EAC0B,mBAArBvW,EAAOwW,UACVxW,EAAOwW,UACPvB,EAAiBjV,EAAOwW,YACxBxB,GAAahV,EAAOwW,cAEtBD,EAAa,KAETE,EAAgBT,EAAY5U,KAAI,mBAAO1H,EAAI+T,OAAOzN,EAAOwB,OAGzDkV,EAAaJ,EAASlV,KAAI,gBAC1BuV,EAAcjd,EAAI+T,OAAOzN,EAAOwB,QAE/BL,GAASnB,EAAO4W,eAAgB,KAC7BC,EAC6B,mBAA1B7W,EAAO4W,eACV5W,EAAO4W,eACP3B,EAAiBjV,EAAO4W,iBACxB5B,GAAahV,EAAO4W,oBAErBC,QACH1W,QAAQC,KAAK,CAAEJ,WACT,IAAIK,mFAKZsW,EAAcE,EAAiBF,EAAajd,EAAKsG,UAE5C2W,KAGTlJ,EAAOzN,EAAOwB,IAAM+U,EAAYG,EAAYD,OACvC,IAAIzW,EAAOwW,gBAChBrW,QAAQC,KAAK,CAAEJ,WACT,IAAIK,8EAIVoN,EAAOzN,EAAOwB,IAAM,UAIjBiM,EAzDqB,CA6Fa6I,EAAUN,EAAa7U,GAEtDzH,EAAM,CACV8H,KACAiT,aACAqC,UAAWvM,EACX8L,aACA5I,SACAzH,UACAsQ,WACAnV,QACA+F,gBAGFlB,EAAQ5H,SAAQ,YACdsX,EAAgB/S,KAAKoU,GACrBpB,EAAgBoB,EAAOvV,IAAMuV,EACzBA,EAAOtC,WACTmB,EAAoBjT,KAAKoU,GACzBlB,EAAoBkB,EAAOvV,IAAMuV,IAEjCjB,EAAmBnT,KAAKoU,GACxBhB,EAAmBgB,EAAOvV,IAAMuV,MAI7Brd,KAnDc,CA0DY4L,UAEvC0Q,EAAY5X,SAAQ,YAClBsX,EAAgB/S,KAAKoU,GACrBpB,EAAgBoB,EAAOvV,IAAMuV,EACzBA,EAAOtC,WACTmB,EAAoBjT,KAAKoU,GACzBlB,EAAoBkB,EAAOvV,IAAMuV,IAEjCjB,EAAmBnT,KAAKoU,GACxBhB,EAAmBgB,EAAOvV,IAAMuV,MAK7B,CACLf,EACAN,EACAC,EACAC,EACAC,EACAC,EACAC,KAED,CACDhB,EACAd,EACA3O,EACA0H,EACAC,EACApJ,EACAoR,EACAJ,IAzLAmB,OACAN,OACAC,OACAC,OACAC,OACAC,OACAC,OAsLIiB,EAAsB/X,EAAaiW,GAEzCxV,GAAuB,WACjBsX,KACFnM,EAAS,CAAE5K,KAAM5D,EAAQsX,iBAE1B,CAAC9I,EAAUkK,EAAgB,KAAOhI,IAErCtM,OAAO8C,OAAOxD,EAAU,CACtBkX,eAAgB3R,EAChB4R,kBAAmBlK,EACnBmK,mBAAoBlK,EACpB+I,cACAN,kBACAC,kBACAC,sBACAC,sBACAC,qBACAC,qBACAzQ,KAAM0Q,EACNhJ,SAAU0I,EACVzI,SAAU0I,EACV9B,gBACAD,eAIJ,SAAStL,GAAW5O,GAClBA,EAAI0d,SAAShZ,SAAQ,kBAEnBkJ,EAAKmN,UAAYnN,EAAKtH,OAAOyU,WAAanN,EAAKtH,OAAOwB,KAAO9H,EAAIod,UAEjExP,EAAK+P,eAAiB/P,EAAKmN,WAAanN,EAAKtH,OAAOyU,UAEpDnN,EAAKgQ,cACFhQ,EAAKmN,YAAcnN,EAAK+P,yBAAiB3d,EAAIsM,gBAAJtM,EAAagJ,WAItD,SAASoS,GAAiBxP,EAAMiF,UAC9BjF,EAAKnI,QAAO,SAACO,EAAMhE,EAAK+I,OAGvB8U,KAAY7d,EAAI+T,OAAOlD,UAC7B7M,EAAK6Z,GAAU1Z,MAAMC,QAAQJ,EAAK6Z,IAAW7Z,EAAK6Z,GAAU,GAC5D7Z,EAAK6Z,GAAQ5U,KAAKjJ,GACXgE,IACN,ICpbL,IAAM8Z,GAAsB,aAmH5B,SAASC,GAAaxS,EAAGoO,UAChBpO,IAAMoO,EAAI,EAAIpO,EAAIoO,EAAI,GAAK,EAGpC,SAASqE,GAAuBC,EAAMC,EAAMrN,SACnC,CAACoN,EAAKlK,OAAOlD,GAAWqN,EAAKnK,OAAOlD,IAG7C,SAASsN,GAAS5S,SACC,iBAANA,EACL6S,MAAM7S,IAAMA,IAAM8K,KAAY9K,SACzB,GAEFrC,OAAOqC,GAEC,iBAANA,EACFA,EAEF,qDAhImB,SAAC8S,EAAMC,EAAMzN,SAC1BmN,GAAuBK,EAAMC,EAAMzN,GAA3CtF,OAAGoO,WAGRpO,EAAI4S,GAAS5S,GACboO,EAAIwE,GAASxE,GAIbpO,EAAIA,EAAErD,MAAM4V,IAAqBtR,OAAO0I,SACxCyE,EAAIA,EAAEzR,MAAM4V,IAAqBtR,OAAO0I,SAGjC3J,EAAEvC,QAAU2Q,EAAE3Q,QAAQ,KACvBuV,EAAKhT,EAAEiT,QACPC,EAAK9E,EAAE6E,QAELE,EAAKC,SAASJ,EAAI,IAClBK,EAAKD,SAASF,EAAI,IAElBI,EAAQ,CAACH,EAAIE,GAAIlF,UAGnB0E,MAAMS,EAAM,QACVN,EAAKE,SACA,KAELA,EAAKF,SACC,UAMRH,MAAMS,EAAM,WACPT,MAAMM,IAAO,EAAI,KAItBA,EAAKE,SACA,KAELA,EAAKF,SACC,UAILnT,EAAEvC,OAAS2Q,EAAE3Q,iBAEf,SAAkBqV,EAAMC,EAAMzN,SACtBmN,GAAuBK,EAAMC,EAAMzN,GAA3CtF,OAAGoO,cAKDoE,GAHPxS,EAAIA,EAAEuT,UACNnF,EAAIA,EAAEmF,kBAKD,SAAeT,EAAMC,EAAMzN,SACnBmN,GAAuBK,EAAMC,EAAMzN,UAEzCkN,sBAGF,SAAgBM,EAAMC,EAAMzN,SACpBmN,GAAuBK,EAAMC,EAAMzN,GAA3CtF,OAAGoO,WAERpO,EAAIA,EAAErD,MAAM,IAAIsE,OAAO0I,SACvByE,EAAIA,EAAEzR,MAAM,IAAIsE,OAAO0I,SAEhB3J,EAAEvC,QAAU2Q,EAAE3Q,QAAQ,KACvBuV,EAAKhT,EAAEiT,QACPC,EAAK9E,EAAE6E,QAEPO,EAASR,EAAG5I,cACZqJ,EAASP,EAAG9I,iBAGZoJ,EAASC,SACJ,KAELA,EAASD,SACH,KAGNR,EAAKE,SACA,KAELA,EAAKF,SACC,SAKLhT,EAAEvC,OAAS2Q,EAAE3Q,eAGf,SAAgBqV,EAAMC,EAAMzN,SACpBmN,GAAuBK,EAAMC,EAAMzN,GAA3CtF,OAAGoO,OAEFsF,EAAoB,mBAKnBlB,GAHPxS,EAAIlI,OAAO6F,OAAOqC,GAAGnC,QAAQ6V,EAAmB,KAChDtF,EAAItW,OAAO6F,OAAOyQ,GAAGvQ,QAAQ6V,EAAmB,SC5FlDtc,EAAQuc,YAAc,cACtBvc,EAAQwc,UAAY,YACpBxc,EAAQyc,aAAe,eACvBzc,EAAQ0c,YAAc,cAEtBrc,EAAcsc,SAAW,eACzBtc,EAAcuc,iBAAgB,IAEjBC,GAAY,YACvB3b,EAAM4b,qBAAuB,CAACC,IAC9B7b,EAAMkK,cAAc9E,KAAK8G,IACzBlM,EAAM8K,YAAY1F,KAAK0F,KAGzB6Q,GAAUza,WAAa,YAEvB,IAAM2a,GAA8B,SAAC9e,SAASyF,aAAUC,aACPD,EAAvCsZ,8BAAmB,SAAAhW,GAAA,OAAKA,EAAEiW,kBAE3B,CACLhf,EACA,CACE4T,QAASlO,EAAOuZ,QACZ,SAAAlW,GACEA,EAAE8Q,UACFnU,EAAO8Y,qBAEJ/Y,EAASyZ,kBAAoBH,EAAiBhW,YAIvDhG,MAAO,CACL8F,OAAQnD,EAAOuZ,QAAU,kBAE3BtP,MAAOjK,EAAOuZ,QAAU,0BAM9B,SAAS9P,GAAQC,EAAOU,EAAQC,EAAetK,MACzCqK,EAAOnK,OAAS5D,EAAQC,eAExBmd,OAAQ,IACL/P,MAIHU,EAAOnK,OAAS5D,EAAQuc,wBAErBlP,GACH+P,OAAQ1Z,EAASuK,aAAamP,QAAU,QAIxCrP,EAAOnK,OAAS5D,EAAQ0c,wBAKrBrP,GACH+P,OALiB/P,EAAX+P,OACiBvT,QAAO,mBAAKrD,EAAErB,KAAO4I,EAAOG,iBAQnDH,EAAOnK,OAAS5D,EAAQwc,sBAGrBnP,GACH+P,OAHiBrP,EAAXqP,YAONrP,EAAOnK,OAAS5D,EAAQyc,aAAc,KAyBpCY,EAxBInP,EAA0BH,EAA1BG,SAAUoP,EAAgBvP,EAAhBuP,KAAMC,EAAUxP,EAAVwP,MAGtB/V,EAKE9D,EALF8D,WACA2V,EAIEzZ,EAJFyZ,iBACAK,EAGE9Z,EAHF8Z,kBACAC,EAEE/Z,EAFF+Z,qBAEE/Z,EADFga,kCAAuBhd,OAAOC,mBAGxByc,EAAW/P,EAAX+P,OAIAR,EADOpV,EAAWyM,MAAK,mBAAKzN,EAAErB,KAAO+I,KACrC0O,cAGFe,EAAiBP,EAAOnJ,MAAK,mBAAKzN,EAAErB,KAAO+I,KAC3C0P,EAAgBR,EAAO9a,WAAU,mBAAKkE,EAAErB,KAAO+I,KAC/C2P,EAAiB,MAAOP,EAE1BQ,EAAY,SAwBC,YAjBbT,GAFCF,GAAoBI,EACnBI,EACW,SAEA,MAIXC,IAAkBR,EAAO/W,OAAS,GAAuB,IAAlB+W,EAAO/W,OACnC,UACJsX,EACI,SAEA,YAOdH,GACAK,GACAN,GAASE,KACRE,GACAA,EAAeL,OACdV,IACCe,EAAeL,MAAQV,KAE3BS,EAAa,UAGI,YAAfA,EACFS,EAAY,CACV,CACE3Y,GAAI+I,EACJoP,KAAMO,EAAiBP,EAAOV,IAGV,QAAfS,GACTS,YACKV,GACH,CACEjY,GAAI+I,EACJoP,KAAMO,EAAiBP,EAAOV,MAIxBmB,OAAO,EAAGD,EAAUzX,OAASqX,GACf,WAAfL,EAETS,EAAYV,EAAOrY,KAAI,mBACjByB,EAAErB,KAAO+I,OAEN1H,GACH8W,KAAMO,EAAiBP,GAAQK,EAAeL,OAG3C9W,KAEe,WAAf6W,IACTS,EAAYV,EAAOvT,QAAO,mBAAKrD,EAAErB,KAAO+I,WAIrCb,GACH+P,OAAQU,KAKd,SAAS9R,GAAYtI,OAEjBgN,EAeEhN,EAfFgN,KACAzH,EAcEvF,EAdFuF,KACA0H,EAaEjN,EAbFiN,SACAnJ,EAYE9D,EAZF8D,aAYE9D,EAXFsa,uBAAYC,KACDC,EAUTxa,EAVFya,UACAC,EASE1a,EATF0a,aACAC,EAQE3a,EARF2a,eACAC,EAOE5a,EAPF4a,cACA/P,EAME7K,EANF6K,YACS6O,EAKP1Z,EALF2J,MAAS+P,OACT5O,EAIE9K,EAJF8K,SACAtM,EAGEwB,EAHFxB,QACAuM,EAEE/K,EAFF+K,WAEE/K,EADF6a,gCAGFtc,EACEC,EACA,CAAC,aAAc,kBAAmB,aAAc,mBAChD,iBAGIsa,EAAYhe,EAAMwE,aACtB,YACEwL,EAAS,CAAE5K,KAAM5D,EAAQwc,UAAWY,aAEtC,CAAC5O,IAIGiO,EAAeje,EAAMwE,aACzB,SAACkL,EAAUoP,EAAMC,GACf/O,EAAS,CAAE5K,KAAM5D,EAAQyc,aAAcvO,WAAUoP,OAAMC,YAEzD,CAAC/O,IAIGG,EAAc/L,EAAac,GAGjC6K,EAAYxM,SAAQ,gBAEhBqD,EAIEzB,EAJFyB,SACSoZ,EAGP7a,EAHFuZ,QACeuB,EAEb9a,EAFF2a,cACAnZ,EACExB,EADFwB,GAGI+X,EAAU9X,EACZqD,OACEgW,WAAuC7J,IACvC0J,WAAiC1J,GAGnCnM,EAAgB4V,EAAgBG,MAEpC7a,EAAOuZ,QAAUA,EAEbvZ,EAAOuZ,UACTvZ,EAAO8Y,aAAe,SAACa,EAAMC,UAC3Bd,EAAa9Y,EAAOwB,GAAImY,EAAMC,IAEhC5Z,EAAO+Y,YAAc,WACnBlO,EAAS,CAAE5K,KAAM5D,EAAQ0c,YAAaxO,SAAUvK,EAAOwB,OAI3DxB,EAAOmZ,qBAAuB7b,EAC5BwN,IAAWqO,qBACX,CACEpZ,SAAUiL,IACVhL,eAIE+a,EAAatB,EAAOnJ,MAAK,mBAAKzN,EAAErB,KAAOA,KAC7CxB,EAAOgb,WAAaD,EACpB/a,EAAOib,YAAcxB,EAAO9a,WAAU,mBAAKkE,EAAErB,KAAOA,KACpDxB,EAAOkb,aAAelb,EAAOgb,SAAWD,EAAWpB,eAAO1I,MAGvBpW,EAAMgU,SAAQ,cAC7C4L,IAAiBhB,EAAO/W,aACnB,CAAC4C,EAAM0H,OAGVmO,EAAiB,GAGjBC,EAAkB3B,EAAOvT,QAAO,mBACpCrC,EAAWyM,MAAK,mBAAOgE,EAAI9S,KAAO4R,EAAK5R,eAoElC,CAjEU,SAAX6Z,EAAW,OAITC,EAAajB,EACjB/U,EACA8V,EAAgBha,KAAI,gBAEZpB,EAAS6D,EAAWyM,MAAK,mBAAKzN,EAAErB,KAAO4R,EAAK5R,UAE7CxB,QACG,IAAIK,uDACyC+S,EAAK5R,yBAIlDwX,EAAahZ,EAAbgZ,SASFuC,EACJvW,EAAWgU,KACVuB,GAAiB,IAAIvB,IACtBwB,GAAUxB,OAEPuC,QACG,IAAIlb,0DAC4C2Y,mBAAyB5F,EAAK5R,gBAM/E,SAACyD,EAAGoO,UAAMkI,EAAWtW,EAAGoO,EAAGD,EAAK5R,GAAI4R,EAAKuG,UAGlDyB,EAAgBha,KAAI,gBAEZpB,EAAS6D,EAAWyM,MAAK,mBAAKzN,EAAErB,KAAO4R,EAAK5R,aAE9CxB,GAAUA,EAAOwb,aACZpI,EAAKuG,MAGNvG,EAAKuG,gBAKjB2B,EAAWld,SAAQ,YACjB+c,EAAexY,KAAKjJ,GACfA,EAAIsM,SAAkC,IAAvBtM,EAAIsM,QAAQtD,SAGhChJ,EAAIsM,QAAUqV,EAAS3hB,EAAIsM,aAGtBsV,EA9DQ,CAiEAhW,GAAO6V,KACvB,CACDV,EACAhB,EACAnU,EACA0H,EACAnJ,EACAwW,EACAE,IArFKkB,OAAYN,OAwFbO,EAAqBzc,EAAa2b,GAExClb,GAAuB,WACjBgc,KACF7Q,EAAS,CAAE5K,KAAM5D,EAAQuc,gBAE1B,CAAC6B,EAAe,KAAO1N,IAE1BtM,OAAO8C,OAAOxD,EAAU,CACtB4b,cAAerW,EACfsW,kBAAmB5O,EACnByO,aACAN,iBACA7V,KAAMmW,EACNzO,SAAUmO,EACVtC,YACAC,iBAIG,SAASwB,GAAiB/X,EAAKsZ,EAAOC,SACpC,UAAIvZ,GAAK6Q,MAAK,SAAC2E,EAAMC,OACrB,IAAIvV,EAAI,EAAGA,EAAIoZ,EAAMnZ,OAAQD,GAAK,EAAG,KAClCsZ,EAASF,EAAMpZ,GACfkX,OAAOmC,EAAKrZ,IAA4B,SAAZqZ,EAAKrZ,GACjCuZ,EAAUD,EAAOhE,EAAMC,MACb,IAAZgE,SACKrC,GAAQqC,EAAUA,SAGtBF,EAAK,GAAK/D,EAAK7Q,MAAQ8Q,EAAK9Q,MAAQ8Q,EAAK9Q,MAAQ6Q,EAAK7Q,SCpXjE7K,EAAQ4f,UAAY,YACpB5f,EAAQ6f,SAAW,WACnB7f,EAAQ8f,YAAc,kBAETC,GAAgB,YAC3B7e,EAAMkK,cAAc9E,KAAK8G,IACzBlM,EAAM8K,YAAY1F,KAAK0F,KAKzB,SAASoB,GAAQC,EAAOU,EAAQC,EAAetK,MACzCqK,EAAOnK,OAAS5D,EAAQC,eAExB+f,SAAU,GACVC,UAAW,GACR5S,MAIHU,EAAOnK,OAAS5D,EAAQ4f,sBAErBvS,GACH4S,UAAWvc,EAASuK,aAAagS,WAAa,OAI9ClS,EAAOnK,OAAS5D,EAAQ6f,SAAU,KAC5BK,EAAoBxc,EAApBwc,UAAWC,EAASzc,EAATyc,KACbC,EAAe3d,EAAiBsL,EAAOkS,UAAW5S,EAAM4S,WAC1DI,KAAc,OAEdD,EAAe/S,EAAM4S,UAEvBI,GACiB,IAAfH,EACIC,EAAK9Z,QAAUgH,EAAM2S,SACrBI,EAAeF,EACZE,EAAe/S,EAAM4S,YAE9BI,EAAcD,GAAgB,GAG3BC,OAKAhT,GACH4S,UAAWG,IALJ/S,KASPU,EAAOnK,OAAS5D,EAAQ8f,YAAa,KAC/BE,EAAajS,EAAbiS,SACFM,EAAcjT,EAAM2S,SAAW3S,EAAM4S,sBAItC5S,GACH4S,UAJgB5P,KAAKwG,MAAMyJ,EAAcN,GAKzCA,cAKN,SAAShU,GAAYtI,OAEjBuF,EAmBEvF,EAnBFuF,OAmBEvF,EAlBF6c,gCAkBE7c,EAjBFwF,+BAAoB,aACpBhH,EAgBEwB,EAhBFxB,QACWse,EAeT9c,EAfFwc,YAeExc,EAdF0O,uCAcE1O,EAbF0F,gCAaE1F,EAZF2J,MACE2S,aACAC,cACA9W,aACAwM,iBACA3B,YACA4D,YACAwF,WAEF5O,EAGE9K,EAHF8K,SACAkC,EAEEhN,EAFFgN,KACA+P,EACE/c,EADF+c,iBAGFxe,EACEC,EACA,CAAC,kBAAmB,aAAc,aAAc,YAAa,eAC7D,qBAGIwe,EAAmB9d,EAAa2d,GAEtCld,GAAuB,WACjBqd,KACFlS,EAAS,CAAE5K,KAAM5D,EAAQ4f,cAE1B,CACDpR,EACAiS,EAAmB,KAAO/P,EAC1BiF,EACA3B,EACA4D,EACAwF,QAGI8C,EAAYO,EACdD,EACAnQ,KAAKsQ,KAAK1X,EAAK5C,OAAS2Z,GAEtBY,EAAcpiB,EAAMgU,SACxB,kBACE0N,EAAY,EACR,UAAI,IAAI1e,MAAM0e,IAAYW,KAAK,MAAM9b,KAAI,SAACyB,EAAGJ,UAAMA,KACnD,KACN,CAAC8Z,IAGGC,EAAO3hB,EAAMgU,SAAQ,eACrB2N,KAEAM,EACFN,EAAOlX,MACF,KACC6X,EAAYd,EAAWC,EACvBc,EAAUD,EAAYd,EAE5BG,EAAOlX,EAAK+X,MAAMF,EAAWC,UAG3B3O,EACK+N,EAGFnX,EAAWmX,EAAM,CAAEjX,oBAAmBC,WAAUC,oBACtD,CACDA,EACAD,EACAD,EACAuX,EACAR,EACAD,EACA5N,EACAnJ,IAGIgY,EAAkBhB,EAAY,EAC9BiB,GACW,IAAfhB,EAAmBC,EAAK9Z,QAAU2Z,EAAWC,EAAYC,EAAY,EAEjEL,EAAWrhB,EAAMwE,aACrB,YACEwL,EAAS,CAAE5K,KAAM5D,EAAQ6f,SAAUI,gBAErC,CAACzR,IAGG2S,EAAe3iB,EAAMwE,aAAY,kBAC9B6c,GAAS,mBAAOld,EAAM,OAC5B,CAACkd,IAEEuB,EAAW5iB,EAAMwE,aAAY,kBAC1B6c,GAAS,mBAAOld,EAAM,OAC5B,CAACkd,IAEEC,EAActhB,EAAMwE,aACxB,YACEwL,EAAS,CAAE5K,KAAM5D,EAAQ8f,YAAaE,eAExC,CAACxR,IAGHpK,OAAO8C,OAAOxD,EAAU,CACtBkd,cACAV,YACAC,OACAc,kBACAC,cACArB,WACAsB,eACAC,WACAtB,gBAhLJC,GAAc3d,WAZK,gBCDnBpC,EAAQqhB,WAAa,aACrBrhB,EAAQshB,YAAc,kBAETC,GAA4B,YACvCrgB,EAAMsgB,oBAAsB,CAACC,IAC7BvgB,EAAMkK,cAAc9E,KAAK8G,IACzBlM,EAAMyK,qBAAqBrF,KAAKqF,IAChCzK,EAAMsG,WAAWlB,KAAKkB,IACtBtG,EAAMsK,YAAYlF,KAAKkF,IACvBtK,EAAMuK,oBAAoBnF,KAAKmF,IAC/BvK,EAAMwK,wBAAwBpF,KAAKoF,IACnCxK,EAAM0K,eAAetF,KAAKsF,IAC1B1K,EAAM2K,mBAAmBvF,KAAKuF,IAC9B3K,EAAM8K,YAAY1F,KAAK0F,IACvB9K,EAAM+K,WAAW3F,KAAK2F,KAGxBsV,GAA0Bnf,WAAa,kBAEvC,IAAMsf,GAAsB,GAEtBD,GAA6B,SAACxjB,SAAS8R,iBAAa,CACxD9R,EACA,CACE4T,QAAS9B,EAAO4R,SACZ,SAAA3a,GACEA,EAAE8Q,UACF/H,EAAOuR,sBAGbtgB,MAAO,CACL8F,OAAQiJ,EAAO4R,SAAW,kBAE5B/T,MAAO,kBAKX,SAASR,GAAQC,EAAOU,EAAQC,EAAetK,MACzCqK,EAAOnK,OAAS5D,EAAQC,eAExB2hB,aAAcF,IACXrU,MAIHU,EAAOnK,OAAS5D,EAAQqhB,uBAErBhU,GACHuU,aAAcle,EAASuK,aAAa2T,cAAgBF,QAIpD3T,EAAOnK,OAAS5D,EAAQshB,YAAa,KAC/BpT,EAA8BH,EAA9BG,SAAiB2T,EAAa9T,EAApB5N,MAEZ2hB,WACGD,EACHA,GACCxU,EAAMuU,aAAand,SAASyJ,eAI5Bb,EAFHyU,GAGAF,uBAAkBvU,EAAMuU,cAAc1T,MAMxC0T,aAAcvU,EAAMuU,aAAa/X,QAAO,mBAAKrD,IAAM0H,QAKzD,SAASvC,GAAqBjI,GAC5BA,EAAS8D,WAAWzF,SAAQ,YAC1B4B,EAAOoe,cAAgBre,EAAS2J,MAAMuU,aAAand,SAASd,EAAOwB,OAIvE,SAASqC,GAAW5C,SAAWlB,oBAC7BkB,EAAQ7C,SAAQ,YACd4B,EAAOoe,cAAgBre,EAAS2J,MAAMuU,aAAand,SAASd,EAAOwB,IACnExB,EAAOqe,aAAe,IAAI9K,OAErBtS,EAGT,SAAS4G,GAAYrL,SAASwD,kBACxBA,EAAOqe,uBAAuB7hB,GAChCwD,EAAOqe,aAAaC,IAAI9hB,GAEnBA,EAGT,SAASsL,GAAoByW,SAAgBxe,aACnC8D,EAAsB9D,EAAtB8D,WAAY6F,EAAU3J,EAAV2J,UAEfA,EAAMuU,aAAavb,SAAWgH,EAAMuK,UAAYvK,EAAMuK,QAAQvR,cAC1D6b,MAGHN,EAAevU,EAAMuU,aACxB7c,KAAI,mBAAMyC,EAAWyM,MAAK,mBAAKzN,EAAErB,KAAOA,QACxC0E,OAAO0I,SAEJ4P,EAAgB3a,EAAWqC,QAC/B,mBACGrD,EAAEub,gBACF1U,EAAMuK,QAAQnT,SAAS+B,EAAErB,MACzBkI,EAAMuU,aAAand,SAAS+B,EAAErB,OAyD7Bid,EAAkBnd,EAtDE,SAApBod,EAAqBvd,EAAWD,EAAQyd,YAAnBxd,MAAQ,YAAWwd,MAAe,QACrDC,EAAcX,EAAa9c,UAE5Byd,EAwBgB/gB,MAAMyV,KAAKsL,EAAYP,cAAcjL,OAEtChS,KAAI,SAAAyd,GAAA,IAChBC,OACDF,GACHld,OACEkd,EAAYG,aAA6C,iBAAvBH,EAAYxS,OACvCwS,EAAYld,YAAWsd,EAC1BA,EACNC,gBACA/d,SACAC,QACAK,GAAIN,EACGA,EAAOM,OAAMod,EAAYpd,OAAMwd,EAC/BJ,EAAYpd,OAAMwd,EACzBE,WAAYF,WAGdF,EAAY7d,QAAUyd,EAAkBvd,EAAQ,EAAG2d,YAC9CH,GACH,mBAAOjlB,EAAI+T,OAAOmR,EAAYpd,MAAQwd,MAGjCF,KA9CAN,EAAcpd,KAAI,wBAQlB+d,GACHnB,YACAoB,aACAle,SACAC,MAAOA,EACPK,OAAON,EAAYA,EAAOM,OAAM2d,EAAa3d,GAAO2d,EAAa3d,IACjEC,SAAU,SAAC0L,EAAa1K,EAAG/I,MACrBilB,EAAalP,OAAM,mBAAUvJ,EAAOxM,aAC/BA,EAAI+T,OAAO0R,EAAa3d,UApBjB,IAsDakd,gBAE5BH,EAAiBE,GAG9B,SAAS1W,GACPnI,aAEEG,SACE2J,MAASuU,iBAAchK,4BAIhBrU,GAAMqe,EAAchK,IAGjC,SAAShM,GAAeA,SAA8ByB,IAAZ3J,SAAY2J,aACpDzB,EAAiBA,EAAe/B,QAAO,mBAAMrD,EAAEub,iBAE3C1U,EAAMuU,aAAavb,QAAUgH,EAAMuK,SAAWvK,EAAMuK,QAAQvR,SAC9DuF,EAAiBA,EAAe/B,QAC9B,mBAAUlG,EAAOyU,WAAazU,EAAOof,cAIlCnX,EAGT,SAASC,GAAmBtI,SAAQG,6BACvBH,GAAMG,EAAS2J,MAAMuU,aAAcle,EAAS2J,MAAMuK,UAG/D,SAAS5L,GAAYtI,OAEjBkB,EAYElB,EAZFkB,QACA4C,EAWE9D,EAXF8D,WACA+G,EAUE7K,EAVF6K,YAGAE,EAOE/K,EAPF+K,SACAvM,EAMEwB,EANFxB,QACAsM,EAKE9K,EALF8K,WAKE9K,EAJFsf,+BACAC,EAGEvf,EAHFuf,YACAC,EAEExf,EAFFwf,aACAC,EACEzf,EADFyf,gBAGFlhB,EAAkBC,EAAS,CAAC,cAAe,uBAErCyM,EAAc/L,EAAac,GAEjC8D,EAAWzF,SAAQ,gBAEfqD,EAGEzB,EAHFyB,SACcge,EAEZzf,EAFF0f,aACcC,EACZ3f,EADFuf,aAGFvf,EAAOge,SAAWvc,EACdqD,EACE9E,EAAOge,cACP2B,WAAsC1O,IACtCsO,WAAgCtO,GAGlCnM,EACE9E,EAAOge,SACPyB,EACAD,MAIFxf,EAAOge,WACThe,EAAO2d,YAAc,kBAAM5d,EAAS4d,YAAY3d,EAAOwB,MAGzDxB,EAAOwV,WAAaxV,EAAOwV,YAAcxV,EAAOrD,QAOlDiO,EAAYxM,SAAQ,YAClBgO,EAAOyR,oBAAsBvgB,EAC3BwN,IAAW+S,oBACX,CACE9d,SAAUiL,IACVoB,kBAKAwT,EAAoB3gB,EAAaogB,GAEvC3f,GAAuB,WACjBkgB,KACF/U,EAAS,CAAE5K,KAAM5D,EAAQqhB,eAE1B,CAAC7S,EAAUyU,EAAc,KAAOre,IAEnCR,OAAO8C,OAAOxD,EAAU,CACtB4d,YAvBkB,SAACpT,EAAU/N,GAC7BqO,EAAS,CAAE5K,KAAM5D,EAAQshB,YAAapT,WAAU/N,aA0BpD,SAAS8L,GAAW5O,GAClBA,EAAI0d,SAAShZ,SAAQ,YAEnBkJ,EAAK8X,UAAY9X,EAAKtH,OAAOof,aCtRjC/iB,EAAQwjB,kBAAoB,oBAC5BxjB,EAAQyjB,sBAAwB,wBAChCzjB,EAAQ0jB,kBAAoB,oBAC5B1jB,EAAQ2jB,0BAA4B,gCAEvBC,GAAe,YAC1B1iB,EAAM2iB,0BAA4B,CAACC,IACnC5iB,EAAM6iB,8BAAgC,CAACC,IACvC9iB,EAAM+iB,kCAAoC,CACxCC,IAEFhjB,EAAMkK,cAAc9E,KAAK8G,IACzBlM,EAAM8K,YAAY1F,KAAK0F,IACvB9K,EAAM+K,WAAW3F,KAAK2F,KAGxB2X,GAAaxhB,WAnBM,eAqBnB,IAAM0hB,GAAmC,SAAC7lB,SAASyF,aAAUrG,UACXqG,EAAxCygB,kCAAuB,qBASxB,CACLlmB,EACA,CACEsP,SAAU,SAAAvG,GACR3J,EAAIqmB,kBAAkB1c,EAAEyG,OAAOC,UAEjC1M,MAAO,CACL8F,OAAQ,WAEV4G,WAfArQ,EAAIoM,WAAYpM,EAAIoM,SAAS0a,KAGrB9mB,EAAI+mB,WAaZxW,MAAO,sBACPE,cAAezQ,EAAIgnB,kBAKnBL,GAAuC,SAAC/lB,SAASyF,mBAAe,CACpEzF,EACA,CACEsP,SAAU,SAAAvG,GACRtD,EAAS+f,sBAAsBzc,EAAEyG,OAAOC,UAE1C1M,MAAO,CACL8F,OAAQ,WAEV4G,QAAShK,EAAS4gB,kBAClB1W,MAAO,2BACPE,cAAeyE,SACZ7O,EAAS4gB,mBACRlgB,OAAO2N,KAAKrO,EAAS2J,MAAMkX,gBAAgBle,WAK7C6d,GAA2C,SAACjmB,SAASyF,mBAAe,CACxEzF,EACA,CACEsP,kBAASvG,GACPtD,EAASigB,0BAA0B3c,EAAEyG,OAAOC,UAE9C1M,MAAO,CACL8F,OAAQ,WAEV4G,QAAShK,EAAS8gB,sBAClB5W,MAAO,wCACPE,cAAeyE,SACZ7O,EAAS8gB,uBACR9gB,EAASyc,KAAKjY,MAAK,gBAAG/C,cAASzB,EAAS2J,MAAMkX,eAAepf,UAMrE,SAASiI,GAAQC,EAAOU,EAAQC,EAAetK,MACzCqK,EAAOnK,OAAS5D,EAAQC,eAExBskB,eAAgB,IACblX,MAIHU,EAAOnK,OAAS5D,EAAQwjB,8BAErBnW,GACHkX,eAAgB7gB,EAASuK,aAAasW,gBAAkB,QAIxDxW,EAAOnK,OAAS5D,EAAQyjB,sBAAuB,KAClCgB,EAAgB1W,EAAvB5N,MAENmkB,EAGE5gB,EAHF4gB,kBACA1T,EAEElN,EAFFkN,WAEElN,EADFgW,gCAAqB9I,IAGjB8T,WACGD,EAA8BA,GAAeH,EAIhDC,EAAiBngB,OAAO8C,OAAO,GAAImG,EAAMkX,uBAE3CG,EACFtgB,OAAO2N,KAAK2H,GAAoB3X,SAAQ,YACtCwiB,EAAevS,SAGjB5N,OAAO2N,KAAK2H,GAAoB3X,SAAQ,mBAC/BwiB,EAAevS,WAKrB3E,GACHkX,sBAIAxW,EAAOnK,OAAS5D,EAAQ0jB,kBAAmB,KACrCve,EAA2B4I,EAA3B5I,GAAWsf,EAAgB1W,EAAvB5N,MACJyQ,EAA+ClN,EAA/CkN,WAA+ClN,EAArCihB,8BAAsBtV,EAAe3L,EAAf2L,WAClC+U,EAAa/W,EAAMkX,eAAepf,GAClCgN,WACGsS,EAA8BA,GAAeL,KAElDA,IAAejS,SACV9E,MAGHuX,OAAyBvX,EAAMkX,uBAEf,SAAhBM,EAAgB,OACdxnB,EAAMuT,EAASzL,MAEhB9H,EAAI+a,YACHjG,EACFyS,EAAkBzf,aAEXyf,EAAkBzf,IAIzBwf,GAAiBtV,EAAWhS,UACvBgS,EAAWhS,GAAK0E,SAAQ,mBAAO8iB,EAAcxnB,EAAI8H,OAZtC,CAgBRA,QAGTkI,GACHkX,eAAgBK,OAIhB7W,EAAOnK,OAAS5D,EAAQ2jB,0BAA2B,KACtCc,EAAgB1W,EAAvB5N,MAENggB,EAKEzc,EALFyc,KACAvP,EAIElN,EAJFkN,WAIElN,EAHFihB,8BACAH,EAEE9gB,EAFF8gB,sBACAnV,EACE3L,EADF2L,WAGIqV,WACGD,EAA8BA,GAAeD,EAEhDI,OAAyBvX,EAAMkX,uBAkBrCpE,EAAKpe,SAAQ,mBAhBS,SAAhB8iB,EAAgB,OACdxnB,EAAMuT,EAASzL,MAEhB9H,EAAI+a,YACHsM,EACFE,EAAkBzf,aAEXyf,EAAkBzf,IAIzBwf,GAAiBtV,EAAWhS,UACvBgS,EAAWhS,GAAK0E,SAAQ,mBAAO8iB,EAAcxnB,EAAI8H,OAZtC,CAgBY9H,EAAI8H,YAGjCkI,GACHkX,eAAgBK,WAGbvX,EAGT,SAASrB,GAAYtI,OAEjBgN,EAYEhN,EAZFgN,KACAzH,EAWEvF,EAXFuF,KACAwF,EAUE/K,EAVF+K,SACAvM,EASEwB,EATFxB,QACA0O,EAQElN,EARFkN,WAQElN,EAPFgW,gCAAqB9I,MAOnBlN,EANFohB,sCACSP,EAKP7gB,EALF2J,MAASkX,iBAKP7gB,EAJFihB,8BACAnW,EAGE9K,EAHF8K,SACA2R,EAEEzc,EAFFyc,KACA9Q,EACE3L,EADF2L,WAGFpN,EACEC,EACA,CAAC,aAAc,aAAc,YAAa,cAAe,iBACzD,oBAGI6iB,EAAmBvmB,EAAMgU,SAAQ,eAC/BuS,EAAmB,UAEzB9b,EAAKlH,SAAQ,gBACLqiB,EAAaO,EAwFzB,SAASK,EAAiB3nB,EAAKknB,EAAgBlV,MACzCkV,EAAelnB,EAAI8H,aACd,IAGHwE,EAAU0F,EAAWhS,MAEvBsM,GAAWA,EAAQtD,OAAQ,KACzB4e,KACAC,KAAe,OAEnBvb,EAAQ5H,SAAQ,YAEVmjB,IAAiBD,IAIjBD,EAAiBtK,EAAQ6J,EAAgBlV,GAC3C6V,KAEAD,WAGGA,KAA6BC,GAAe,cAvBvD,CAvF2B7nB,EAAKknB,EAAgBlV,KACpCkV,EAAelnB,EAAI8H,IACzB9H,EAAI+mB,aAAeA,EACnB/mB,EAAIgnB,eAAgC,OAAfD,EAEjBA,GACFW,EAAiBze,KAAKjJ,MAInB0nB,IACN,CAAC9b,EAAM0b,EAAeJ,EAAgBlV,IAErCiV,EAAoB/R,QACtBnO,OAAO2N,KAAK2H,GAAoBrT,QAAUjC,OAAO2N,KAAKwS,GAAgBle,QAGpEme,EAAwBF,EAExBA,GACElgB,OAAO2N,KAAK2H,GAAoBxR,MAAK,mBAAOqc,EAAepf,QAC7Dmf,MAICA,GACCnE,GAAQA,EAAK9Z,QAAU8Z,EAAKjY,MAAK,gBAAG/C,cAAUof,EAAepf,QAC/Dqf,MAAwB,IAItBW,EAA2BviB,EAAakiB,GAE9CzhB,GAAuB,WACjB8hB,KACF3W,EAAS,CAAE5K,KAAM5D,EAAQwjB,sBAE1B,CAAChV,EAAUkC,QAER+S,EAAwBjlB,EAAMwE,aAClC,mBAASwL,EAAS,CAAE5K,KAAM5D,EAAQyjB,sBAAuBtjB,YACzD,CAACqO,IAGGmV,EAA4BnlB,EAAMwE,aACtC,mBAASwL,EAAS,CAAE5K,KAAM5D,EAAQ2jB,0BAA2BxjB,YAC7D,CAACqO,IAGGkV,EAAoBllB,EAAMwE,aAC9B,SAACmC,EAAIhF,UAAUqO,EAAS,CAAE5K,KAAM5D,EAAQ0jB,kBAAmBve,KAAIhF,YAC/D,CAACqO,IAGGG,EAAc/L,EAAac,GAE3BqgB,EAAgC9iB,EACpCwN,IAAWsV,8BACX,CAAErgB,SAAUiL,MAGRsV,EAAoChjB,EACxCwN,IAAWwV,kCACX,CAAEvgB,SAAUiL,MAGdvK,OAAO8C,OAAOxD,EAAU,CACtBqhB,mBACAT,oBACAE,wBACAd,oBACAD,wBACAM,gCACAE,oCACAN,8BAIJ,SAAS1X,GAAW5O,SAAOqG,aACzBrG,EAAIqmB,kBAAoB,mBAAOhgB,EAASggB,kBAAkBrmB,EAAI8H,GAAI0B,IAElExJ,EAAIwmB,0BAA4B5iB,EAC9ByC,EAAS+K,WAAWoV,0BACpB,CAAEngB,SAAUA,EAAUrG,QC/T1B,IAAM+nB,GAAiC,kBAAQ,IACzCC,GAAkC,kBAAS,IAGjDrlB,EAAQslB,YAAc,cACtBtlB,EAAQulB,aAAe,eACvBvlB,EAAQwlB,cAAgB,oBAEXC,GAAc,YACzBvkB,EAAMkK,cAAc9E,KAAK8G,IACzBlM,EAAM8K,YAAY1F,KAAK0F,IACvB9K,EAAM+K,WAAW3F,KAAK2F,KAKxB,SAASmB,GAAQC,EAAOU,EAAQC,EAAetK,SAKzCA,EAHFgiB,qCAA0BN,OAGxB1hB,EAFFiiB,sCAA2BN,KAC3BzU,EACElN,EADFkN,YAGE7C,EAAOnK,OAAS5D,EAAQC,eAExB2lB,SAAU,IACPvY,MAIHU,EAAOnK,OAAS5D,EAAQwlB,0BAErBnY,GACHuY,SAAUliB,EAASuK,aAAa2X,UAAY,QAI5C7X,EAAOnK,OAAS5D,EAAQslB,YAAa,OAC/BtT,EAAiBjE,EAAjBiE,MAAO7R,EAAU4N,EAAV5N,MAET0lB,WACGxY,EAAMuY,SAAS5T,GAClB3E,EAAMuY,SAAS5T,GACf0T,EAAwB9U,EAASoB,gBAGlC3E,GACHuY,cACKvY,EAAMuY,iBACR5T,GAAQvP,EAAiBtC,EAAO0lB,YAKnC9X,EAAOnK,OAAS5D,EAAQulB,aAAc,eAChCvT,EAA2BjE,EAA3BiE,MAAO9D,EAAoBH,EAApBG,SAAU/N,EAAU4N,EAAV5N,MAEnB0lB,WACGxY,EAAMuY,SAAS5T,GAClB3E,EAAMuY,SAAS5T,GACf0T,EAAwB9U,EAASoB,IAEjC8T,YAC0C,MAAvCD,cAAaE,gBAAbF,IAAyB3X,IAC5B2X,EAAYE,UAAU7X,GACtByX,WACE/U,EAASoB,cAATpB,EAAiBO,YAARa,EAATpB,EAAwBqD,MAAK,mBAAQhJ,EAAKtH,OAAOwB,KAAO+I,kBAI3Db,GACHuY,cACKvY,EAAMuY,iBACR5T,QACI6T,GACHE,eACMF,EAAYE,WAAa,WAC5B7X,GAAWzL,EAAiBtC,EAAO2lB,gBAQhD,SAAS9Z,GAAYtI,SACkCA,EAA7CsiB,kCAA0BtV,EAAmBhN,EAAnBgN,KAAMlC,EAAa9K,EAAb8K,SAElC8W,EAAc9mB,EAAMwE,aACxB,SAACgP,EAAO7R,UACNqO,EAAS,CACP5K,KAAM5D,EAAQslB,YACdtT,QACA7R,YAEJ,CAACqO,IAGG+W,EAAe/mB,EAAMwE,aACzB,SAACgP,EAAO9D,EAAU/N,UAChBqO,EAAS,CACP5K,KAAM5D,EAAQulB,aACdvT,QACA9D,WACA/N,YAEJ,CAACqO,IAGGyX,EAAuBrjB,EAAaojB,GAE1C3iB,GAAuB,WACjB4iB,KACFzX,EAAS,CAAE5K,KAAM5D,EAAQwlB,kBAE1B,CAAC9U,IAEJtM,OAAO8C,OAAOxD,EAAU,CACtB4hB,cACAC,iBAIJ,SAAStZ,GAAW5O,SAAOqG,eAKrBA,EAHFgiB,qCAA0BN,OAGxB1hB,EAFFiiB,sCAA2BN,KAClBO,EACPliB,EADF2J,MAASuY,SAGPvoB,IACFA,EAAIgQ,eACKuY,EAASvoB,EAAI8H,IAChBygB,EAASvoB,EAAI8H,IACbugB,EAAwBroB,GAE9BA,EAAI6oB,SAAW,mBACNxiB,EAAS4hB,YAAYjoB,EAAI8H,GAAIzC,IAGtCrF,EAAI8T,MAAMpP,SAAQ,YACX1E,EAAIgQ,MAAM0Y,YACb1oB,EAAIgQ,MAAM0Y,UAAY,IAGxB9a,EAAKoC,eACIhQ,EAAIgQ,MAAM0Y,UAAU9a,EAAKtH,OAAOwB,IACnC9H,EAAIgQ,MAAM0Y,UAAU9a,EAAKtH,OAAOwB,IAChCwgB,EAAyB1a,GAE/BA,EAAKib,SAAW,mBACPxiB,EAAS6hB,aAAaloB,EAAI8H,GAAI8F,EAAKtH,OAAOwB,GAAIzC,QAzI7D+iB,GAAYrjB,WAAa,cClBzBpC,EAAQmmB,iBAAmB,mBAC3BnmB,EAAQomB,eAAiB,qBAEZC,GAAiB,YAC5BnlB,EAAMkK,cAAc9E,KAAK8G,IACzBlM,EAAM2K,mBAAmBvF,MAAK,SAAC/C,SAAQG,6BAC1BH,GAAMG,EAAS2J,MAAMiZ,iBAElCplB,EAAM0K,eAAetF,KAAKsF,IAC1B1K,EAAM8K,YAAY1F,KAAK0F,KAKzB,SAASoB,GAAQC,EAAOU,EAAQC,EAAetK,UACzCqK,EAAOnK,OAAS5D,EAAQC,QAExBqmB,YAAa,IACVjZ,GAIHU,EAAOnK,OAAS5D,EAAQmmB,sBAErB9Y,GACHiZ,YAAa5iB,EAASuK,aAAaqY,aAAe,KAIlDvY,EAAOnK,OAAS5D,EAAQomB,oBAErB/Y,GACHiZ,YAAa7jB,EAAiBsL,EAAOuY,YAAajZ,EAAMiZ,sBAK9D,SAAS1a,GACPhH,SAGa0hB,IADX5iB,SACE2J,MAASiZ,gBAKRA,IAAgBA,EAAYjgB,cACxBzB,UAGH2hB,YAAsBD,GAGtBE,YAAkB5hB,GAGlB6hB,EAAiB,oBAIfC,EAAiBH,EAAgB1K,QACjC8K,EAAaH,EAAYlkB,WAAU,mBAAKkE,EAAErB,KAAOuhB,KACnDC,GAAc,GAChBF,EAAengB,KAAKkgB,EAAYzI,OAAO4I,EAAY,GAAG,KAJnDH,EAAYngB,QAAUkgB,EAAgBlgB,4BASlCogB,EAAmBD,GAGhC,SAASxa,GAAYtI,OACX8K,EAAa9K,EAAb8K,SAER9K,EAAS0iB,eAAiB5nB,EAAMwE,aAC9B,mBACSwL,EAAS,CAAE5K,KAAM5D,EAAQomB,eAAgBE,kBAElD,CAAC9X,IAlEL6X,GAAejkB,WAAa,iBCH5B/B,EAAcmQ,aAGdxQ,EAAQ4mB,oBAAsB,sBAC9B5mB,EAAQ6mB,eAAiB,iBACzB7mB,EAAQ8mB,mBAAqB,qBAC7B9mB,EAAQ+mB,YAAc,kBAETC,GAAmB,YAC9B9lB,EAAM+lB,gBAAkB,CAACC,IACzBhmB,EAAMoL,eAAehG,KAAK,CACxBtF,MAAO,CACLmmB,SAAU,cAGdjmB,EAAMkK,cAAc9E,KAAK8G,IACzBlM,EAAM8K,YAAY1F,KAAK0F,IACvB9K,EAAM6K,4BAA4BzF,KAAKyF,KAGnCmb,GAAyB,SAACjpB,SAASyF,aAAUqM,WACzCvB,EAAa9K,EAAb8K,SAEF4Y,EAAgB,SAACpgB,EAAG+I,OACpBsX,KAAe,GACJ,eAAXrgB,EAAEpD,KAAuB,IAEvBoD,EAAEsgB,SAAWtgB,EAAEsgB,QAAQjhB,OAAS,SAGpCghB,KAAe,IAGXE,EA8NV,SAAwBxX,OAChByX,EAAc,UACE,SAAhBC,EAAgB,GAChB1X,EAAOnL,SAAWmL,EAAOnL,QAAQyB,QACnC0J,EAAOnL,QAAQG,IAAI0iB,GAErBD,EAAYlhB,KAAKyJ,GAJG,CAMRA,GACPyX,EATT,CA/N2CzX,GACAhL,KAAI,kBAAK,CAACyB,EAAErB,GAAIqB,EAAE0J,eAEnDwX,EAAUL,EAAehX,KAAKsX,MAAM3gB,EAAEsgB,QAAQ,GAAGI,SAAW1gB,EAAE0gB,QAE9DE,EAAe,YACnBpZ,EAAS,CAAE5K,KAAM5D,EAAQ6mB,eAAgBa,QAASG,KAE9CC,EAAc,kBAAMtZ,EAAS,CAAE5K,KAAM5D,EAAQ8mB,sBAE7CiB,EAAoB,CACxBC,MAAO,CACLC,UAAW,YACXC,YAAa,SAAAlhB,GAAA,OAAK4gB,EAAa5gB,EAAE0gB,UACjCS,QAAS,UACTC,UAAW,SAAAphB,GACT9D,SAASmlB,oBACP,YACAN,EAAkBC,MAAME,aAE1BhlB,SAASmlB,oBACP,UACAN,EAAkBC,MAAMI,WAE1BN,MAGJQ,MAAO,CACLL,UAAW,YACXC,YAAa,SAAAlhB,GAAA,OACPA,EAAEuhB,aACJvhB,EAAEwhB,iBACFxhB,EAAEyhB,mBAEJb,EAAa5gB,EAAEsgB,QAAQ,GAAGI,aAG5BS,QAAS,WACTC,UAAW,SAAAphB,GACT9D,SAASmlB,oBACPN,EAAkBO,MAAML,UACxBF,EAAkBO,MAAMJ,aAE1BhlB,SAASmlB,oBACPN,EAAkBO,MAAMH,QACxBJ,EAAkBO,MAAMJ,aAE1BJ,OAKAY,EAASrB,EACXU,EAAkBO,MAClBP,EAAkBC,MAChBW,IjBkMH,cAE2B,kBAArBve,EAAgC,OAAOA,MAE9Cwe,KAAY,QAERC,EAAU,sBAEZD,MAAY,IAKhBE,OAAOC,iBAAiB,OAAQ,KAAMF,GACtCC,OAAOT,oBAAoB,OAAQ,KAAMQ,GACzC,MAAOG,GACPJ,KAAY,OAEdxe,EAAmBwe,EAlBd,IiBjMC,CAAEK,YAEN/lB,SAAS6lB,iBACPL,EAAOT,UACPS,EAAOR,YACPS,GAEFzlB,SAAS6lB,iBACPL,EAAOP,QACPO,EAAON,UACPO,GAGFna,EAAS,CACP5K,KAAM5D,EAAQ4mB,oBACd1Y,SAAU6B,EAAO5K,GACjB+jB,YAAanZ,EAAOG,WACpBqX,iBACAG,mBAIG,CACLzpB,EACA,CACEkrB,YAAa,SAAAniB,GAAA,OAAKA,EAAE8Q,WAAasP,EAAcpgB,EAAG+I,IAClDqZ,aAAc,SAAApiB,GAAA,OAAKA,EAAE8Q,WAAasP,EAAcpgB,EAAG+I,IACnD/O,MAAO,CACL8F,OAAQ,cAEVuiB,aACA/e,KAAM,eAOZ,SAAS8C,GAAQC,EAAOU,MAClBA,EAAOnK,OAAS5D,EAAQC,eAExB4mB,eAAgB,CACdyC,aAAc,KAEbjc,MAIHU,EAAOnK,OAAS5D,EAAQ+mB,wBAErB1Z,GACHwZ,eAAgB,CACdyC,aAAc,SAKhBvb,EAAOnK,OAAS5D,EAAQ4mB,oBAAqB,KACvCc,EAAmD3Z,EAAnD2Z,QAASxZ,EAA0CH,EAA1CG,SAAUgb,EAAgCnb,EAAhCmb,YAAa3B,EAAmBxZ,EAAnBwZ,2BAGnCla,GACHwZ,oBACKxZ,EAAMwZ,gBACT0C,OAAQ7B,EACRH,iBACA2B,cACAM,iBAAkBtb,SAKpBH,EAAOnK,OAAS5D,EAAQ6mB,eAAgB,KAClCa,EAAY3Z,EAAZ2Z,UAC6Cra,EAAMwZ,eAAnD0C,WAAQL,oBAAa3B,eAGvBkC,GADS/B,EAAU6B,GACSL,EAE5BQ,EAAkB,qBALsB,MAO/B3nB,SAAQ,gBAAE4nB,OAAUC,OACjCF,EAAgBC,GAAYtZ,KAAKE,IAC/BqZ,EAAcA,EAAcH,EAC5B,WAKCpc,GACHwZ,oBACKxZ,EAAMwZ,gBACTyC,kBACKjc,EAAMwZ,eAAeyC,gBACrBI,cAMP3b,EAAOnK,OAAS5D,EAAQ8mB,wBAErBzZ,GACHwZ,oBACKxZ,EAAMwZ,gBACT0C,OAAQ,KACRC,iBAAkB,gBAtE1BxC,GAAiB5kB,WAAa,mBA4E9B,IAAM2J,GAA8B,gBAEhCwC,EAIE7K,EAJF6K,YACAsb,EAGEnmB,EAHFmmB,gBACApb,EAEE/K,EAFF+K,SACSoY,EACPnjB,EADF2J,MAASwZ,eAGLlY,EAAc/L,EAAac,GAEjC6K,EAAYxM,SAAQ,gBACZyO,EAAY/H,OAChBsH,EAAO8Z,yBAAmCjV,IAC1CiV,WAAmCjV,GAIrC7E,EAAOS,UAAYA,EACnBT,EAAOxP,MACLsmB,EAAeyC,aAAavZ,EAAO5K,KACnC4K,EAAOzI,eACPyI,EAAOxP,MACTwP,EAAO+Z,WAAajD,EAAe2C,mBAAqBzZ,EAAO5K,GAE3DqL,IACFT,EAAOkX,gBAAkBhmB,EAAewN,IAAWwY,gBAAiB,CAClEvjB,SAAUiL,IACVoB,gBAMR,SAAS/D,GAAYtI,OACXxB,EAAuDwB,EAAvDxB,QAASsM,EAA8C9K,EAA9C8K,WAA8C9K,EAApCqmB,gCAAwBnlB,EAAYlB,EAAZkB,QAEnD3C,EAAkBC,EAAS,CAAC,qBAAsB,wBAE5C8nB,EAAqBpnB,EAAamnB,GACxC1mB,GAAuB,WACjB2mB,KACFxb,EAAS,CAAE5K,KAAM5D,EAAQ+mB,gBAE1B,CAACniB,QAEEqlB,EAAgBzrB,EAAMwE,aAC1B,kBAAMwL,EAAS,CAAE5K,KAAM5D,EAAQ+mB,gBAC/B,CAACvY,IAGHpK,OAAO8C,OAAOxD,EAAU,CACtBumB,sBCzQEC,GAAa,CACjB/C,SAAU,WACVgD,IAAK,GAGMC,GAAoB,YAC/BlpB,EAAMiL,kBAAkB7F,KAAK+jB,IAC7BnpB,EAAMsL,YAAYlG,KAAK+jB,IACvBnpB,EAAMkL,oBAAoB9F,KAAK+jB,IAC/BnpB,EAAMmL,oBAAoB/F,KAAK+jB,IAE/BnpB,EAAMoL,eAAehG,MAAK,SAACrI,SAAS0F,iBAAa,CAC/C1F,EACA,CACE+C,WACKkpB,IACHza,KAAS9L,EAAOqM,eAChBzP,MAAUoD,EAAOuM,uBAKvBhP,EAAMuL,aAAanG,MAAK,SAACrI,SAASgN,eAAW,CAC3ChN,EACA,CACE+C,WACKkpB,IACHza,KAASxE,EAAKtH,OAAOqM,eACrBzP,MAAU0K,EAAKtH,OAAOuM,uBAK5BhP,EAAMqL,eAAejG,MAAK,SAACrI,SAAS0F,iBAAa,CAC/C1F,EACA,CACE+C,WACKkpB,IACHza,KAAS9L,EAAOqM,eAChBzP,MAAUoD,EAAOuM,wBAMzBka,GAAkBhoB,WAAa,oBAE/B,IAAMioB,GAAe,SAACpsB,WAAwB,CAC5CA,EACA,CACE+C,MAAO,CACLmmB,SAAU,WACV5mB,QALyBmD,SAKN4mB,2BCpDnBJ,GAAa,CACjBK,QAAS,eACTC,UAAW,cAGPH,GAAe,SAACpsB,WAAwB,CAC5CA,EACA,CACE+C,MAAO,CACLupB,QAAS,OACThqB,QALyBmD,SAKN4mB,2BAKZG,GAAiB,YAC5BvpB,EAAMsL,YAAYlG,KAAK+jB,IACvBnpB,EAAMkL,oBAAoB9F,KAAK+jB,IAC/BnpB,EAAMmL,oBAAoB/F,KAAK+jB,IAE/BnpB,EAAMoL,eAAehG,MAAK,SAACrI,SAAS0F,iBAAa,CAC/C1F,EACA,CACE+C,WACKkpB,IACH3pB,MAAUoD,EAAOuM,uBAKvBhP,EAAMuL,aAAanG,MAAK,SAACrI,SAASgN,eAAW,CAC3ChN,EACA,CACE+C,WACKkpB,IACH3pB,MAAU0K,EAAKtH,OAAOuM,uBAK5BhP,EAAMqL,eAAejG,MAAK,SAACrI,SAAS0F,iBAAa,CAC/C1F,EACA,CACE+C,WACKkpB,IACH3pB,MAAUoD,EAAOuM,wBC7ClB,SAASwa,GAAcxpB,GAC5BA,EAAMgL,cAAc5F,KAAK4F,IACzBhL,EAAMsL,YAAYlG,KAAK+jB,IACvBnpB,EAAMkL,oBAAoB9F,KAAK+jB,IAC/BnpB,EAAMmL,oBAAoB/F,KAAK+jB,IAC/BnpB,EAAMoL,eAAehG,KAAKgG,IAC1BpL,EAAMuL,aAAanG,KAAKmG,IACxBvL,EAAMqL,eAAejG,KAAKiG,ID4C5Bke,GAAeroB,WAAa,iBCzC5BsoB,GAActoB,WAAa,gBAE3B,IAAM8J,GAAgB,SAACjO,WAAwB,CAC7CA,EACA,CACE+C,MAAO,CACLR,WAJ0BkD,SAIJinB,8BAKtBN,GAAe,SAACpsB,WAAwB,CAC5CA,EACA,CACE+C,MAAO,CACLupB,QAAS,OACTK,KAAM,WACNpqB,WANyBkD,SAMHinB,8BAKtBre,GAAiB,SAACrO,SAAS0F,iBAAa,CAC5C1F,EACA,CACE+C,MAAO,CACLwpB,UAAW,aACXI,KAAMjnB,EAAOyM,eACNzM,EAAOyM,gCAEd5P,SAAamD,EAAOsM,mBACpB1P,MAAUoD,EAAOuM,oBAKjBzD,GAAe,SAACxO,SAASgN,eAAW,CACxChN,EACA,CACE+C,MAAO,CACLwpB,UAAW,aACXI,KAAS3f,EAAKtH,OAAOyM,yBACrB5P,SAAayK,EAAKtH,OAAOsM,mBACzB1P,MAAU0K,EAAKtH,OAAOuM,oBAKtB3D,GAAiB,SAACtO,SAAS0F,iBAAa,CAC5C1F,EACA,CACE+C,MAAO,CACLwpB,UAAW,aACXI,KAAMjnB,EAAOyM,eACNzM,EAAOyM,gCAEd5P,SAAamD,EAAOsM,mBACpB1P,MAAUoD,EAAOuM,oBCnEhB,SAAS2a,GAAc3pB,GAC5BA,EAAMkK,cAAc9E,KAAK8G,IACzBlM,EAAMgL,cAAc5F,KAAK4F,IACzBhL,EAAMoL,eAAehG,KAAKgG,IAG5Bue,GAAczoB,WAAa,gBAE3B,IAAM8J,GAAgB,SAACjO,WAAwB,CAC7CA,EACA,CACE+C,MAAO,CACLupB,eACAO,sBAL0BpnB,SAKI2J,MAAM0d,WAAWzB,aAAavkB,KAAI,mBAAKimB,KAAGtkB,cAKxE4F,GAAiB,SAACrO,WAAsB,CAC5CA,EACA,CACEkH,oBAH6BxB,OAGHwB,GAC1BnE,MAAO,CACLmmB,sBAKN,SAAS/Z,GAAQC,EAAOU,EAAQC,EAAetK,eACzCqK,EAAOnK,eAEPmnB,WAAY,CACVzB,aAAc5lB,EAASkB,QAAQG,KAAI,6BAElCsI,8BAIHU,EAAOnK,KAAgC,KACjCsK,EAAaH,EAAbG,SACF+c,EAAcvnB,EAASkI,eAAetJ,WAAU,mBAAO2V,EAAI9S,KAAO+I,KAClEgd,EAuCV,SAAyBhd,SACjB3N,WAAQ2C,SAASioB,8BAA8Bjd,WAAvChL,EAAoDkoB,wBAE9D7qB,SACKA,EAJX,CAvCoC2N,mBAE5Bgd,OAEG7d,GACH0d,gBACK1d,EAAM0d,YACT7c,WACA+c,cACAI,cAAeH,MAIZ7d,wBAIPU,EAAOnK,KAA2B,OAKhCyJ,EAAM0d,WAHRE,gBACAI,kBACA/B,iBAIIgC,EAAWD,GADFhe,EAAMwZ,eAAe0C,OAASxb,EAAO2Z,SAE9C6D,YAAuBjC,UAC7BiC,EAAiBN,GAAkBK,YAG9Bje,GACH0d,gBACK1d,EAAM0d,YACTzB,aAAciC,oVtBwFf,SAA0BC,EAAWC,kBAAc,OAClDC,EAAcltB,EAAMsE,OAAO,IAE3B6oB,EAAe/oB,EAAa4oB,GAC5BI,EAAiBhpB,EAAa6oB,UAE7BjtB,EAAMwE,uCACX,iHAAU0F,4CACHgjB,EAAY3oB,QAAQ8oB,UACvBH,EAAY3oB,QAAQ8oB,QAAU,IAAIC,SAAQ,SAACC,EAASC,GAClDN,EAAY3oB,QAAQgpB,QAAUA,EAC9BL,EAAY3oB,QAAQipB,OAASA,MAI7BN,EAAY3oB,QAAQkpB,SACtBC,aAAaR,EAAY3oB,QAAQkpB,SAGnCP,EAAY3oB,QAAQkpB,QAAUE,WAAWA,EAAXA,QAAW,0FAChCT,EAAY3oB,QAAQkpB,sBAEzBP,EAAY3oB,iBAAsB4oB,iBAAkBjjB,2BAAhCqjB,wEAEpBL,EAAY3oB,QAAQipB,6CAEbN,EAAY3oB,QAAQ8oB,oFAE5BD,uBAEIF,EAAY3oB,QAAQ8oB,sGAxBlB7oB,GA0BX,CAAC2oB,EAAcC,2SI1IK,SAAC3tB,8BAAUiE,uDAEjCjE,EAAQmR,GAAcnR,GAGtBiE,GAAW6K,UAAwB7K,OAM7ByM,EAAc/L,EAHFpE,EAAMsE,OAAO,IAGcC,SAG7CqB,OAAO8C,OAAOyH,SACT1Q,GACHiE,UACAhB,MAAOgK,OAIThJ,EAAQ2H,OAAO0I,SAASxQ,SAAQ,YAC9BQ,EAAOoM,IAAczN,cAIjBuN,EAAW7L,EAAa+L,IAAczN,OAC5CyN,IAAcF,SAAWA,SAClBE,IAAczN,MAGrBkD,OAAO8C,OACLyH,IACAjN,EAAY+M,IAAWtD,WAAYiE,GAAcnR,WAY/C0Q,IARF+B,SACS0b,IAATxnB,QACAqJ,iBACA5N,kBACAgP,eACAC,aACAC,iBACAlE,uBAIIghB,EAAkBzpB,EAAa2M,GAG/BnC,EAAU5O,EAAMwE,aACpB,SAACqK,EAAOU,OAEDA,EAAOnK,WACVE,QAAQC,KAAK,CAAEgK,WACT,IAAI/J,MAAM,qCAIX,UACFyK,IAAWrD,cAEV5J,MAAMC,QAAQ4qB,KACdA,IACA,CAACA,MACLvrB,QACA,SAACwrB,EAAGC,UAAYA,EAAQD,EAAGve,EAAQV,EAAOsB,MAAkB2d,IAC5Djf,KAGJ,CAACoB,EAAU4d,EAAiB1d,MAIGnQ,EAAMguB,WAAWpf,UAAoB,kBACpEA,EAAQa,EAAc,CAAErK,KAAM5D,EAAQC,UADjCwsB,OAAcje,OAKfnB,EAAQ3L,YACR+M,IAAWpD,oBAAoBA,IACnCohB,EACA,CAAE/oB,SAAUiL,MAGdvK,OAAO8C,OAAOyH,IAAe,CAC3BtB,QACAmB,iBAII5J,EAAUpG,EAAMgU,SACpB,kBACE7N,EACEjD,EAAY+M,IAAW7J,QAASwnB,EAAa,CAC3C1oB,SAAUiL,UAIdF,EACAE,EACAyd,UAEG1qB,EAAY+M,IAAWnD,YAAa,GAAI,CAAE5H,SAAUiL,QAG3DA,IAAc/J,QAAUA,MAIpB4C,EAAahJ,EAAMgU,SACrB,kBACE9Q,EAAY+M,IAAWjH,WAAYvC,EAAeL,GAAU,CAC1DlB,SAAUiL,MACT5J,IAAIC,MAEPJ,EACA6J,EACAE,UAEGjN,EAAY+M,IAAWlD,eAAgB,GAAI,CAC5C7H,SAAUiL,QAIhBA,IAAcnH,WAAaA,QAGQhJ,EAAMgU,SAAQ,mBAC3CvJ,EAAO,GACP0H,EAAW,GACTC,EAAW,GAEX8b,YAAsBllB,GAErBklB,EAAgBrmB,QAAQ,KACvB1C,EAAS+oB,EAAgB7Q,QAC/BpL,GAAoB,CAClBC,OACAzH,OACA0H,WACAC,WACAjN,SACA2L,WACAD,aACAwB,iBAAkBpC,IAAWjD,YAC7BmD,sBAIG,CAAC1F,EAAM0H,EAAUC,KACvB,CAACpJ,EAAYkJ,EAAMpB,EAAUD,EAAYZ,EAAUE,IAvB/C1F,OAAM0H,OAAUC,OAyBvBxM,OAAO8C,OAAOyH,IAAe,CAC3B1F,OACA0jB,sBAAiB1jB,GACjB0H,WACAC,aAIF/O,EAAU4M,IAAW9C,qBAAsBgD,SAKvC/C,EAAiBpN,EAAMgU,SACzB,kBACE9Q,EAAY+M,IAAW7C,eAAgBpE,EAAY,CACjD9D,SAAUiL,MACT5J,KAAI,mBAAKoC,EAAeX,EAAGnG,SAE9BoO,EACAjH,EACAmH,EACAtO,UAEGqB,EAAY+M,IAAW5C,mBAAoB,GAAI,CAChDnI,SAAUiL,QAMhBnH,EAAahJ,EAAMgU,SAAQ,eACnB5N,YAAcgH,UAEpBpE,EAAWzF,SAAQ,YACZ6C,EAAQqP,MAAK,mBAAKzN,EAAErB,KAAOxB,EAAOwB,OACrCP,EAAQ0B,KAAK3C,MAIViB,IACN,CAAC4C,EAAYoE,IAChB+C,IAAcnH,WAAaA,MAkBrBE,EAAelJ,EAAMgU,SACzB,kBACE9Q,EACE+M,IAAW/G,aACXH,EAAiBqE,EAAgBvL,GACjCsO,QAGFF,EACA7C,EACAvL,EACAsO,UAEGjN,EAAY+M,IAAW3C,iBAAkB,GAAI,CAC9CpI,SAAUiL,QAIhBA,IAAcjH,aAAeA,MAGvBK,EAAUvJ,EAAMgU,SACpB,kBAAO9K,EAAarB,OAASqB,EAAa,GAAGK,QAAU,KACvD,CAACL,IAEHiH,IAAc5G,QAAUA,EAGxB4G,IAAcJ,YAAc7G,EAAa5G,QACvC,SAAC8rB,EAAK9kB,mBAAoB8kB,EAAQ9kB,EAAYC,WAC9C,IAGFlG,EAAU4M,IAAW1C,4BAA6B4C,SAG5Cke,EAAoBjhB,EACvB/B,QAAO,mBAAKrD,EAAEmH,aACd5I,KAAI,mBAAKyB,EAAErB,MACX4R,OACArQ,KAAK,KAERkF,EAAiBpN,EAAMgU,SACrB,kBAAM5G,EAAe/B,QAAO,mBAAKrD,EAAEmH,gBAElC/B,EAAgBihB,IAEnBle,IAAc/C,eAAiBA,QAO3B4D,GAAsBzH,GAHxB4iB,OACAL,OACAwC,cAGFne,IAAcgc,qBAAuBA,EACrChc,IAAc2b,kBAAoBA,EAClC3b,IAAcme,qBAAuBA,EAErCjrB,EAAU4M,IAAWzC,YAAa2C,eAI7BA,IAAcJ,YAAgBI,IAAcnH,YAAYzF,SAC3D,YAEE4B,EAAOopB,OAAStpB,EAAakL,IAAehL,GAG5CA,EAAO2I,eAAiBrL,EAAewN,IAAWnC,eAAgB,CAChE5I,SAAUiL,IACVhL,WAIFA,EAAO4I,eAAiBtL,EAAewN,IAAWlC,eAAgB,CAChE7I,SAAUiL,IACVhL,cAKNgL,IAAcjH,aAAelJ,EAAMgU,SACjC,kBACE9K,EAAamC,QAAO,SAAC/B,EAAa1B,UAEhC0B,EAAYC,QAAUD,EAAYC,QAAQ8B,QAAO,mBAQ3ClG,EAAOoE,QAPK,SAAVgB,EAAU,UACdhB,EAAQ8B,QAAO,mBACTlG,EAAOoE,QACFgB,EAAQpF,EAAOoE,SAEjBpE,EAAOgK,aACbtH,OANW,CAQC1C,EAAOoE,SAEjBpE,EAAOgK,eAIZ7F,EAAYC,QAAQ1B,SACtByB,EAAYsE,oBAAsBnL,EAChCwN,IAAWrC,oBACX,CAAE1I,SAAUiL,IAAe7G,cAAa+C,MAAOzE,IAGjD0B,EAAYuE,oBAAsBpL,EAChCwN,IAAWpC,oBACX,CAAE3I,SAAUiL,IAAe7G,cAAa+C,MAAOzE,aAQvD,CAACsB,EAAciH,EAAaF,IAG9BE,IAAcqe,aAAe,UAAIre,IAAcjH,cAAcW,UAK7DsG,IAAc1C,WAAazN,EAAMwE,aAC/B,YACE3F,EAAImP,YAAcvL,EAAewN,IAAWjC,YAAa,CACvD9I,SAAUiL,IACVtR,QAIFA,EAAI0d,SAAWvT,EAAWzC,KAAI,gBACtB5E,EAAQ9C,EAAI+T,OAAOzN,EAAOwB,IAE1B8F,EAAO,CACXtH,SACAtG,MACA8C,gBAIF8K,EAAKwB,aAAexL,EAAewN,IAAWhC,aAAc,CAC1D/I,SAAUiL,IACV1D,SAIFA,EAAK8hB,OAAStpB,EAAakL,IAAehL,EAAQ,CAChDtG,MACA4N,OACA9K,UAGK8K,KAGT5N,EAAI8T,MAAQvF,EAAe7G,KAAI,mBAC7B1H,EAAI0d,SAAS9G,MAAK,mBAAQhJ,EAAKtH,OAAOwB,KAAOxB,EAAOwB,SAItDtD,EAAU4M,IAAWxC,WAAY5O,EAAK,CAAEqG,SAAUiL,QAEpD,CAACF,EAAUE,EAAanH,EAAYoE,IAGtC+C,IAAczC,cAAgBjL,EAAewN,IAAWvC,cAAe,CACrExI,SAAUiL,MAGZA,IAAcxC,kBAAoBlL,EAChCwN,IAAWtC,kBACX,CACEzI,SAAUiL,MAId9M,EAAU4M,IAAW/B,iBAAkBiC,KAEhCA,sD,2CmBpcT,gFAMI1R,EAAY,CACdgwB,OAAQ9vB,IAAUG,KAClBJ,SAAUC,IAAUC,KACpBQ,UAAWT,IAAUU,OACrBC,UAAWX,IAAUY,OACrBN,SAAUN,IAAUG,KACpBI,IAAKC,KAMHuvB,EAAiB,SAAwBjvB,GAC3C,IAAIgvB,EAAShvB,EAAMgvB,OACfrvB,EAAYK,EAAML,UAClBE,EAAYG,EAAMH,UAClBL,EAAWQ,EAAMR,SACjBS,EAAMD,EAAMP,IACZS,EAAaC,YAA8BH,EAAO,CAAC,SAAU,YAAa,YAAa,WAAY,QAEnGI,EAAUC,YAAgBC,IAAWX,EAAW,YAAa,CAC/DqvB,OAAQA,EACRxvB,SAAUA,IACRK,GACJ,OAAoBU,IAAMC,cAAcP,EAAKQ,YAAS,GAAIP,EAAY,CACpEP,UAAWS,MAIf6uB,EAAejwB,UAAYA,EAC3BiwB,EAAevuB,aAtBI,CACjBjB,IAAK,MAsBQwvB,O,iCCrCf,gFAMIjwB,EAAY,CACd,aAAcE,IAAUU,OACxBX,SAAUC,IAAUC,KACpBQ,UAAWT,IAAUU,OACrBC,UAAWX,IAAUY,OACrBgD,KAAM5D,IAAUG,KAChB6vB,SAAUhwB,IAAUG,KACpB8vB,MAAOjwB,IAAUG,KACjB+vB,KAAMlwB,IAAUG,KAChBI,IAAKC,KAMH2vB,EAAiB,SAAwBrvB,GAC3C,IAUIsvB,EAVA3vB,EAAYK,EAAML,UAClBE,EAAYG,EAAMH,UAClBiD,EAAO9C,EAAM8C,KACbosB,EAAWlvB,EAAMkvB,SACjBC,EAAQnvB,EAAMmvB,MACdC,EAAOpvB,EAAMovB,KACbnvB,EAAMD,EAAMP,IACZS,EAAaC,YAA8BH,EAAO,CAAC,YAAa,YAAa,OAAQ,WAAY,QAAS,OAAQ,QAElHI,EAAUC,YAAgBC,IAAWX,EAAW,aAAcE,GAG9DqvB,EACFI,EAAmB,WACVxsB,EACTwsB,EAAmB,OACVH,EACTG,EAAmB,QACVF,IACTE,EAAmB,QAGrB,IACIC,EADAC,EAAYxvB,EAAM,eAAiBsvB,EAGnCJ,EACFK,EAAe,SACNzsB,EACTysB,EAAe,SACNJ,EACTI,EAAe,OACNH,IACTG,EAAe,QAGjB,IAAItwB,EAAWe,EAAMf,SAoBrB,OAlBIA,GAAYsE,MAAMC,QAAQvE,IAAiC,IAApBA,EAASmJ,SAClDnJ,EAAW,MAGRiB,EAAWwB,MAAgB,MAARzB,IACtBA,EAAM,WAGJivB,GAAYpsB,GAAQqsB,GAASC,KAC/BnwB,EAAW,CAAcsB,IAAMC,cAAc,OAAQ,CACnD,cAAe,OACfoK,IAAK,SACJ3L,GAAYswB,GAA4BhvB,IAAMC,cAAc,OAAQ,CACrEb,UAAW,UACXiL,IAAK,MACJ4kB,KAGejvB,IAAMC,cAAcP,EAAKQ,YAAS,GAAIP,EAAY,CACpEP,UAAWS,EACX,aAAcovB,IACZvwB,IAGNowB,EAAerwB,UAAYA,EAC3BqwB,EAAe3uB,aAnEI,CACjBjB,IAAK,KAmEQ4vB,O,iCCrFf,gFAMIrwB,EAAY,CACdC,SAAUC,IAAUC,KACpBQ,UAAWT,IAAUU,OACrB6vB,cAAevwB,IAAUU,OACzBC,UAAWX,IAAUY,OACrBoZ,KAAMha,IAAUU,OAChBH,IAAKC,IACLgwB,QAAShwB,IACT,aAAcR,IAAUU,QAQtB+vB,EAAa,SAAoB3vB,GACnC,IAAI4vB,EAEAjwB,EAAYK,EAAML,UAClB8vB,EAAgBzvB,EAAMyvB,cACtB5vB,EAAYG,EAAMH,UAClBqZ,EAAOlZ,EAAMkZ,KACbjZ,EAAMD,EAAMP,IACZowB,EAAU7vB,EAAM0vB,QAChBI,EAAQ9vB,EAAM,cACdE,EAAaC,YAA8BH,EAAO,CAAC,YAAa,gBAAiB,YAAa,OAAQ,MAAO,UAAW,eAExHI,EAAUC,YAAgBC,IAAWX,GAAYE,GACjDkwB,EAAc1vB,YAAgBC,IAAWmvB,EAAe,eAAeG,EAAc,IAAgB,cAAgB1W,KAAUA,EAAM0W,IAAe/vB,GACxJ,OAAoBU,IAAMC,cAAcP,EAAK,CAC3CN,UAAWS,EACX,aAAc0vB,GACAvvB,IAAMC,cAAcqvB,EAASpvB,YAAS,GAAIP,EAAY,CACpEP,UAAWowB,OAIfJ,EAAW3wB,UAAYA,EACvB2wB,EAAWjvB,aA7BQ,CACjBjB,IAAK,MACLiwB,QAAS,KACT,aAAc,cA2BDC","file":"static/js/50.4e89ed5e.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport classNames from 'classnames';\nimport TooltipPopoverWrapper, { propTypes } from './TooltipPopoverWrapper';\nvar defaultProps = {\n  placement: 'right',\n  placementPrefix: 'bs-popover',\n  trigger: 'click'\n};\n\nvar Popover = function Popover(props) {\n  var popperClasses = classNames('popover', 'show', props.popperClassName);\n  var classes = classNames('popover-inner', props.innerClassName);\n  return /*#__PURE__*/React.createElement(TooltipPopoverWrapper, _extends({}, props, {\n    popperClassName: popperClasses,\n    innerClassName: classes\n  }));\n};\n\nPopover.propTypes = propTypes;\nPopover.defaultProps = defaultProps;\nexport default Popover;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar PopoverBody = function PopoverBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'popover-body'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nPopoverBody.propTypes = propTypes;\nPopoverBody.defaultProps = defaultProps;\nexport default PopoverBody;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  color: PropTypes.string,\n  pill: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  color: 'secondary',\n  pill: false,\n  tag: 'span'\n};\n\nvar Badge = function Badge(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      innerRef = props.innerRef,\n      pill = props.pill,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"innerRef\", \"pill\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'badge', 'badge-' + color, pill ? 'badge-pill' : false), cssModule);\n\n  if (attributes.href && Tag === 'span') {\n    Tag = 'a';\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nBadge.propTypes = propTypes;\nBadge.defaultProps = defaultProps;\nexport default Badge;","if (process.env.NODE_ENV === 'production') {\n  module.exports = require('./dist/react-table.production.min.js')\n} else {\n  module.exports = require('./dist/react-table.development.js')\n}\n","import React from 'react'\n\nlet renderErr = 'Renderer Error ☝️'\n\nexport const actions = {\n  init: 'init',\n}\n\nexport const defaultRenderer = ({ value = '' }) => value;\nexport const emptyRenderer = () => <>&nbsp;</>;\n\nexport const defaultColumn = {\n  Cell: defaultRenderer,\n  width: 150,\n  minWidth: 0,\n  maxWidth: Number.MAX_SAFE_INTEGER,\n}\n\nfunction mergeProps(...propList) {\n  return propList.reduce((props, next) => {\n    const { style, className, ...rest } = next\n\n    props = {\n      ...props,\n      ...rest,\n    }\n\n    if (style) {\n      props.style = props.style\n        ? { ...(props.style || {}), ...(style || {}) }\n        : style\n    }\n\n    if (className) {\n      props.className = props.className\n        ? props.className + ' ' + className\n        : className\n    }\n\n    if (props.className === '') {\n      delete props.className\n    }\n\n    return props\n  }, {})\n}\n\nfunction handlePropGetter(prevProps, userProps, meta) {\n  // Handle a lambda, pass it the previous props\n  if (typeof userProps === 'function') {\n    return handlePropGetter({}, userProps(prevProps, meta))\n  }\n\n  // Handle an array, merge each item as separate props\n  if (Array.isArray(userProps)) {\n    return mergeProps(prevProps, ...userProps)\n  }\n\n  // Handle an object by default, merge the two objects\n  return mergeProps(prevProps, userProps)\n}\n\nexport const makePropGetter = (hooks, meta = {}) => {\n  return (userProps = {}) =>\n    [...hooks, userProps].reduce(\n      (prev, next) =>\n        handlePropGetter(prev, next, {\n          ...meta,\n          userProps,\n        }),\n      {}\n    )\n}\n\nexport const reduceHooks = (hooks, initial, meta = {}, allowUndefined) =>\n  hooks.reduce((prev, next) => {\n    const nextValue = next(prev, meta)\n    if (process.env.NODE_ENV !== 'production') {\n      if (!allowUndefined && typeof nextValue === 'undefined') {\n        console.info(next)\n        throw new Error(\n          'React Table: A reducer hook ☝️ just returned undefined! This is not allowed.'\n        )\n      }\n    }\n    return nextValue\n  }, initial)\n\nexport const loopHooks = (hooks, context, meta = {}) =>\n  hooks.forEach(hook => {\n    const nextValue = hook(context, meta)\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof nextValue !== 'undefined') {\n        console.info(hook, nextValue)\n        throw new Error(\n          'React Table: A loop-type hook ☝️ just returned a value! This is not allowed.'\n        )\n      }\n    }\n  })\n\nexport function ensurePluginOrder(plugins, befores, pluginName, afters) {\n  if (process.env.NODE_ENV !== 'production' && afters) {\n    throw new Error(\n      `Defining plugins in the \"after\" section of ensurePluginOrder is no longer supported (see plugin ${pluginName})`\n    )\n  }\n  const pluginIndex = plugins.findIndex(\n    plugin => plugin.pluginName === pluginName\n  )\n\n  if (pluginIndex === -1) {\n    if (process.env.NODE_ENV !== 'production') {\n      throw new Error(`The plugin \"${pluginName}\" was not found in the plugin list!\nThis usually means you need to need to name your plugin hook by setting the 'pluginName' property of the hook function, eg:\n\n  ${pluginName}.pluginName = '${pluginName}'\n`)\n    }\n  }\n\n  befores.forEach(before => {\n    const beforeIndex = plugins.findIndex(\n      plugin => plugin.pluginName === before\n    )\n    if (beforeIndex > -1 && beforeIndex > pluginIndex) {\n      if (process.env.NODE_ENV !== 'production') {\n        throw new Error(\n          `React Table: The ${pluginName} plugin hook must be placed after the ${before} plugin hook!`\n        )\n      }\n    }\n  })\n}\n\nexport function functionalUpdate(updater, old) {\n  return typeof updater === 'function' ? updater(old) : updater\n}\n\nexport function useGetLatest(obj) {\n  const ref = React.useRef()\n  ref.current = obj\n\n  return React.useCallback(() => ref.current, [])\n}\n\n// SSR has issues with useLayoutEffect still, so use useEffect during SSR\nexport const safeUseLayoutEffect =\n  typeof document !== 'undefined' ? React.useLayoutEffect : React.useEffect\n\nexport function useMountedLayoutEffect(fn, deps) {\n  const mountedRef = React.useRef(false)\n\n  safeUseLayoutEffect(() => {\n    if (mountedRef.current) {\n      fn()\n    }\n    mountedRef.current = true\n    // eslint-disable-next-line\n  }, deps)\n}\n\nexport function useAsyncDebounce(defaultFn, defaultWait = 0) {\n  const debounceRef = React.useRef({})\n\n  const getDefaultFn = useGetLatest(defaultFn)\n  const getDefaultWait = useGetLatest(defaultWait)\n\n  return React.useCallback(\n    async (...args) => {\n      if (!debounceRef.current.promise) {\n        debounceRef.current.promise = new Promise((resolve, reject) => {\n          debounceRef.current.resolve = resolve\n          debounceRef.current.reject = reject\n        })\n      }\n\n      if (debounceRef.current.timeout) {\n        clearTimeout(debounceRef.current.timeout)\n      }\n\n      debounceRef.current.timeout = setTimeout(async () => {\n        delete debounceRef.current.timeout\n        try {\n          debounceRef.current.resolve(await getDefaultFn()(...args))\n        } catch (err) {\n          debounceRef.current.reject(err)\n        } finally {\n          delete debounceRef.current.promise\n        }\n      }, getDefaultWait())\n\n      return debounceRef.current.promise\n    },\n    [getDefaultFn, getDefaultWait]\n  )\n}\n\nexport function makeRenderer(instance, column, meta = {}) {\n  return (type, userProps = {}) => {\n    const Comp = typeof type === 'string' ? column[type] : type\n\n    if (typeof Comp === 'undefined') {\n      console.info(column)\n      throw new Error(renderErr)\n    }\n\n    return flexRender(Comp, { ...instance, column, ...meta, ...userProps })\n  }\n}\n\nexport function flexRender(Comp, props) {\n  return isReactComponent(Comp) ? <Comp {...props} /> : Comp\n}\n\nfunction isReactComponent(component) {\n  return (\n    isClassComponent(component) ||\n    typeof component === 'function' ||\n    isExoticComponent(component)\n  )\n}\n\nfunction isClassComponent(component) {\n  return (\n    typeof component === 'function' &&\n    (() => {\n      const proto = Object.getPrototypeOf(component)\n      return proto.prototype && proto.prototype.isReactComponent\n    })()\n  )\n}\n\nfunction isExoticComponent(component) {\n  return (\n    typeof component === 'object' &&\n    typeof component.$$typeof === 'symbol' &&\n    ['react.memo', 'react.forward_ref'].includes(component.$$typeof.description)\n  )\n}\n","import { defaultColumn, emptyRenderer } from './publicUtils'\n\n// Find the depth of the columns\nexport function findMaxDepth(columns, depth = 0) {\n  return columns.reduce((prev, curr) => {\n    if (curr.columns) {\n      return Math.max(prev, findMaxDepth(curr.columns, depth + 1))\n    }\n    return depth\n  }, 0)\n}\n\n// Build the visible columns, headers and flat column list\nexport function linkColumnStructure(columns, parent, depth = 0) {\n  return columns.map(column => {\n    column = {\n      ...column,\n      parent,\n      depth,\n    }\n\n    assignColumnAccessor(column)\n\n    if (column.columns) {\n      column.columns = linkColumnStructure(column.columns, column, depth + 1)\n    }\n    return column\n  })\n}\n\nexport function flattenColumns(columns) {\n  return flattenBy(columns, 'columns')\n}\n\nexport function assignColumnAccessor(column) {\n  // First check for string accessor\n  let { id, accessor, Header } = column\n\n  if (typeof accessor === 'string') {\n    id = id || accessor\n    const accessorPath = accessor.split('.')\n    accessor = row => getBy(row, accessorPath)\n  }\n\n  if (!id && typeof Header === 'string' && Header) {\n    id = Header\n  }\n\n  if (!id && column.columns) {\n    console.error(column)\n    throw new Error('A column ID (or unique \"Header\" value) is required!')\n  }\n\n  if (!id) {\n    console.error(column)\n    throw new Error('A column ID (or string accessor) is required!')\n  }\n\n  Object.assign(column, {\n    id,\n    accessor,\n  })\n\n  return column\n}\n\nexport function decorateColumn(column, userDefaultColumn) {\n  if (!userDefaultColumn) {\n    throw new Error()\n  }\n  Object.assign(column, {\n    // Make sure there is a fallback header, just in case\n    Header: emptyRenderer,\n    Footer: emptyRenderer,\n    ...defaultColumn,\n    ...userDefaultColumn,\n    ...column,\n  })\n\n  Object.assign(column, {\n    originalWidth: column.width,\n  })\n\n  return column\n}\n\n// Build the header groups from the bottom up\nexport function makeHeaderGroups(\n  allColumns,\n  defaultColumn,\n  additionalHeaderProperties = () => ({})\n) {\n  const headerGroups = []\n\n  let scanColumns = allColumns\n\n  let uid = 0\n  const getUID = () => uid++\n\n  while (scanColumns.length) {\n    // The header group we are creating\n    const headerGroup = {\n      headers: [],\n    }\n\n    // The parent columns we're going to scan next\n    const parentColumns = []\n\n    const hasParents = scanColumns.some(d => d.parent)\n\n    // Scan each column for parents\n    scanColumns.forEach(column => {\n      // What is the latest (last) parent column?\n      let latestParentColumn = [...parentColumns].reverse()[0]\n\n      let newParent\n\n      if (hasParents) {\n        // If the column has a parent, add it if necessary\n        if (column.parent) {\n          newParent = {\n            ...column.parent,\n            originalId: column.parent.id,\n            id: `${column.parent.id}_${getUID()}`,\n            headers: [column],\n            ...additionalHeaderProperties(column),\n          }\n        } else {\n          // If other columns have parents, we'll need to add a place holder if necessary\n          const originalId = `${column.id}_placeholder`\n          newParent = decorateColumn(\n            {\n              originalId,\n              id: `${column.id}_placeholder_${getUID()}`,\n              placeholderOf: column,\n              headers: [column],\n              ...additionalHeaderProperties(column),\n            },\n            defaultColumn\n          )\n        }\n\n        // If the resulting parent columns are the same, just add\n        // the column and increment the header span\n        if (\n          latestParentColumn &&\n          latestParentColumn.originalId === newParent.originalId\n        ) {\n          latestParentColumn.headers.push(column)\n        } else {\n          parentColumns.push(newParent)\n        }\n      }\n\n      headerGroup.headers.push(column)\n    })\n\n    headerGroups.push(headerGroup)\n\n    // Start scanning the parent columns\n    scanColumns = parentColumns\n  }\n\n  return headerGroups.reverse()\n}\n\nconst pathObjCache = new Map()\n\nexport function getBy(obj, path, def) {\n  if (!path) {\n    return obj\n  }\n  const cacheKey = typeof path === 'function' ? path : JSON.stringify(path)\n\n  const pathObj =\n    pathObjCache.get(cacheKey) ||\n    (() => {\n      const pathObj = makePathArray(path)\n      pathObjCache.set(cacheKey, pathObj)\n      return pathObj\n    })()\n\n  let val\n\n  try {\n    val = pathObj.reduce((cursor, pathPart) => cursor[pathPart], obj)\n  } catch (e) {\n    // continue regardless of error\n  }\n  return typeof val !== 'undefined' ? val : def\n}\n\nexport function getFirstDefined(...args) {\n  for (let i = 0; i < args.length; i += 1) {\n    if (typeof args[i] !== 'undefined') {\n      return args[i]\n    }\n  }\n}\n\nexport function getElementDimensions(element) {\n  const rect = element.getBoundingClientRect()\n  const style = window.getComputedStyle(element)\n  const margins = {\n    left: parseInt(style.marginLeft),\n    right: parseInt(style.marginRight),\n  }\n  const padding = {\n    left: parseInt(style.paddingLeft),\n    right: parseInt(style.paddingRight),\n  }\n  return {\n    left: Math.ceil(rect.left),\n    width: Math.ceil(rect.width),\n    outerWidth: Math.ceil(\n      rect.width + margins.left + margins.right + padding.left + padding.right\n    ),\n    marginLeft: margins.left,\n    marginRight: margins.right,\n    paddingLeft: padding.left,\n    paddingRight: padding.right,\n    scrollWidth: element.scrollWidth,\n  }\n}\n\nexport function isFunction(a) {\n  if (typeof a === 'function') {\n    return a\n  }\n}\n\nexport function flattenBy(arr, key) {\n  const flat = []\n\n  const recurse = arr => {\n    arr.forEach(d => {\n      if (!d[key]) {\n        flat.push(d)\n      } else {\n        recurse(d[key])\n      }\n    })\n  }\n\n  recurse(arr)\n\n  return flat\n}\n\nexport function expandRows(\n  rows,\n  { manualExpandedKey, expanded, expandSubRows = true }\n) {\n  const expandedRows = []\n\n  const handleRow = (row, addToExpandedRows = true) => {\n    row.isExpanded =\n      (row.original && row.original[manualExpandedKey]) || expanded[row.id]\n\n    row.canExpand = row.subRows && !!row.subRows.length\n\n    if (addToExpandedRows) {\n      expandedRows.push(row)\n    }\n\n    if (row.subRows && row.subRows.length && row.isExpanded) {\n      row.subRows.forEach(row => handleRow(row, expandSubRows))\n    }\n  }\n\n  rows.forEach(row => handleRow(row))\n\n  return expandedRows\n}\n\nexport function getFilterMethod(filter, userFilterTypes, filterTypes) {\n  return (\n    isFunction(filter) ||\n    userFilterTypes[filter] ||\n    filterTypes[filter] ||\n    filterTypes.text\n  )\n}\n\nexport function shouldAutoRemoveFilter(autoRemove, value, column) {\n  return autoRemove ? autoRemove(value, column) : typeof value === 'undefined'\n}\n\nexport function unpreparedAccessWarning() {\n  throw new Error(\n    'React-Table: You have not called prepareRow(row) one or more rows you are attempting to render.'\n  )\n}\n\nlet passiveSupported = null\nexport function passiveEventSupported() {\n  // memoize support to avoid adding multiple test events\n  if (typeof passiveSupported === 'boolean') return passiveSupported\n\n  let supported = false\n  try {\n    const options = {\n      get passive() {\n        supported = true\n        return false\n      },\n    }\n\n    window.addEventListener('test', null, options)\n    window.removeEventListener('test', null, options)\n  } catch (err) {\n    supported = false\n  }\n  passiveSupported = supported\n  return passiveSupported\n}\n\n//\n\nconst reOpenBracket = /\\[/g\nconst reCloseBracket = /\\]/g\n\nfunction makePathArray(obj) {\n  return (\n    flattenDeep(obj)\n      // remove all periods in parts\n      .map(d => String(d).replace('.', '_'))\n      // join parts using period\n      .join('.')\n      // replace brackets with periods\n      .replace(reOpenBracket, '.')\n      .replace(reCloseBracket, '')\n      // split it back out on periods\n      .split('.')\n  )\n}\n\nfunction flattenDeep(arr, newArr = []) {\n  if (!Array.isArray(arr)) {\n    newArr.push(arr)\n  } else {\n    for (let i = 0; i < arr.length; i += 1) {\n      flattenDeep(arr[i], newArr)\n    }\n  }\n  return newArr\n}\n","const defaultGetTableProps = props => ({\n  role: 'table',\n  ...props,\n})\n\nconst defaultGetTableBodyProps = props => ({\n  role: 'rowgroup',\n  ...props,\n})\n\nconst defaultGetHeaderProps = (props, { column }) => ({\n  key: `header_${column.id}`,\n  colSpan: column.totalVisibleHeaderCount,\n  role: 'columnheader',\n  ...props,\n})\n\nconst defaultGetFooterProps = (props, { column }) => ({\n  key: `footer_${column.id}`,\n  colSpan: column.totalVisibleHeaderCount,\n  ...props,\n})\n\nconst defaultGetHeaderGroupProps = (props, { index }) => ({\n  key: `headerGroup_${index}`,\n  role: 'row',\n  ...props,\n})\n\nconst defaultGetFooterGroupProps = (props, { index }) => ({\n  key: `footerGroup_${index}`,\n  ...props,\n})\n\nconst defaultGetRowProps = (props, { row }) => ({\n  key: `row_${row.id}`,\n  role: 'row',\n  ...props,\n})\n\nconst defaultGetCellProps = (props, { cell }) => ({\n  key: `cell_${cell.row.id}_${cell.column.id}`,\n  role: 'cell',\n  ...props,\n})\n\nexport default function makeDefaultPluginHooks() {\n  return {\n    useOptions: [],\n    stateReducers: [],\n    useControlledState: [],\n    columns: [],\n    columnsDeps: [],\n    allColumns: [],\n    allColumnsDeps: [],\n    accessValue: [],\n    materializedColumns: [],\n    materializedColumnsDeps: [],\n    useInstanceAfterData: [],\n    visibleColumns: [],\n    visibleColumnsDeps: [],\n    headerGroups: [],\n    headerGroupsDeps: [],\n    useInstanceBeforeDimensions: [],\n    useInstance: [],\n    prepareRow: [],\n    getTableProps: [defaultGetTableProps],\n    getTableBodyProps: [defaultGetTableBodyProps],\n    getHeaderGroupProps: [defaultGetHeaderGroupProps],\n    getFooterGroupProps: [defaultGetFooterGroupProps],\n    getHeaderProps: [defaultGetHeaderProps],\n    getFooterProps: [defaultGetFooterProps],\n    getRowProps: [defaultGetRowProps],\n    getCellProps: [defaultGetCellProps],\n    useFinalInstance: [],\n  }\n}\n","import React from 'react'\n\nimport {\n  actions,\n  functionalUpdate,\n  useGetLatest,\n  makePropGetter,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nactions.resetHiddenColumns = 'resetHiddenColumns'\nactions.toggleHideColumn = 'toggleHideColumn'\nactions.setHiddenColumns = 'setHiddenColumns'\nactions.toggleHideAllColumns = 'toggleHideAllColumns'\n\nexport const useColumnVisibility = hooks => {\n  hooks.getToggleHiddenProps = [defaultGetToggleHiddenProps]\n  hooks.getToggleHideAllColumnsProps = [defaultGetToggleHideAllColumnsProps]\n\n  hooks.stateReducers.push(reducer)\n  hooks.useInstanceBeforeDimensions.push(useInstanceBeforeDimensions)\n  hooks.headerGroupsDeps.push((deps, { instance }) => [\n    ...deps,\n    instance.state.hiddenColumns,\n  ])\n  hooks.useInstance.push(useInstance)\n}\n\nuseColumnVisibility.pluginName = 'useColumnVisibility'\n\nconst defaultGetToggleHiddenProps = (props, { column }) => [\n  props,\n  {\n    onChange: e => {\n      column.toggleHidden(!e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: column.isVisible,\n    title: 'Toggle Column Visible',\n  },\n]\n\nconst defaultGetToggleHideAllColumnsProps = (props, { instance }) => [\n  props,\n  {\n    onChange: e => {\n      instance.toggleHideAllColumns(!e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: !instance.allColumnsHidden && !instance.state.hiddenColumns.length,\n    title: 'Toggle All Columns Hidden',\n    indeterminate:\n      !instance.allColumnsHidden && instance.state.hiddenColumns.length,\n  },\n]\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      hiddenColumns: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetHiddenColumns) {\n    return {\n      ...state,\n      hiddenColumns: instance.initialState.hiddenColumns || [],\n    }\n  }\n\n  if (action.type === actions.toggleHideColumn) {\n    const should =\n      typeof action.value !== 'undefined'\n        ? action.value\n        : !state.hiddenColumns.includes(action.columnId)\n\n    const hiddenColumns = should\n      ? [...state.hiddenColumns, action.columnId]\n      : state.hiddenColumns.filter(d => d !== action.columnId)\n\n    return {\n      ...state,\n      hiddenColumns,\n    }\n  }\n\n  if (action.type === actions.setHiddenColumns) {\n    return {\n      ...state,\n      hiddenColumns: functionalUpdate(action.value, state.hiddenColumns),\n    }\n  }\n\n  if (action.type === actions.toggleHideAllColumns) {\n    const shouldAll =\n      typeof action.value !== 'undefined'\n        ? action.value\n        : !state.hiddenColumns.length\n\n    return {\n      ...state,\n      hiddenColumns: shouldAll ? instance.allColumns.map(d => d.id) : [],\n    }\n  }\n}\n\nfunction useInstanceBeforeDimensions(instance) {\n  const {\n    headers,\n    state: { hiddenColumns },\n  } = instance\n\n  const isMountedRef = React.useRef(false)\n\n  if (!isMountedRef.current) {\n  }\n\n  const handleColumn = (column, parentVisible) => {\n    column.isVisible = parentVisible && !hiddenColumns.includes(column.id)\n\n    let totalVisibleHeaderCount = 0\n\n    if (column.headers && column.headers.length) {\n      column.headers.forEach(\n        subColumn =>\n          (totalVisibleHeaderCount += handleColumn(subColumn, column.isVisible))\n      )\n    } else {\n      totalVisibleHeaderCount = column.isVisible ? 1 : 0\n    }\n\n    column.totalVisibleHeaderCount = totalVisibleHeaderCount\n\n    return totalVisibleHeaderCount\n  }\n\n  let totalVisibleHeaderCount = 0\n\n  headers.forEach(\n    subHeader => (totalVisibleHeaderCount += handleColumn(subHeader, true))\n  )\n}\n\nfunction useInstance(instance) {\n  const {\n    columns,\n    flatHeaders,\n    dispatch,\n    allColumns,\n    getHooks,\n    state: { hiddenColumns },\n    autoResetHiddenColumns = true,\n  } = instance\n\n  const getInstance = useGetLatest(instance)\n\n  const allColumnsHidden = allColumns.length === hiddenColumns.length\n\n  const toggleHideColumn = React.useCallback(\n    (columnId, value) =>\n      dispatch({ type: actions.toggleHideColumn, columnId, value }),\n    [dispatch]\n  )\n\n  const setHiddenColumns = React.useCallback(\n    value => dispatch({ type: actions.setHiddenColumns, value }),\n    [dispatch]\n  )\n\n  const toggleHideAllColumns = React.useCallback(\n    value => dispatch({ type: actions.toggleHideAllColumns, value }),\n    [dispatch]\n  )\n\n  const getToggleHideAllColumnsProps = makePropGetter(\n    getHooks().getToggleHideAllColumnsProps,\n    { instance: getInstance() }\n  )\n\n  flatHeaders.forEach(column => {\n    column.toggleHidden = value => {\n      dispatch({\n        type: actions.toggleHideColumn,\n        columnId: column.id,\n        value,\n      })\n    }\n\n    column.getToggleHiddenProps = makePropGetter(\n      getHooks().getToggleHiddenProps,\n      {\n        instance: getInstance(),\n        column,\n      }\n    )\n  })\n\n  const getAutoResetHiddenColumns = useGetLatest(autoResetHiddenColumns)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetHiddenColumns()) {\n      dispatch({ type: actions.resetHiddenColumns })\n    }\n  }, [dispatch, columns])\n\n  Object.assign(instance, {\n    allColumnsHidden,\n    toggleHideColumn,\n    setHiddenColumns,\n    toggleHideAllColumns,\n    getToggleHideAllColumnsProps,\n  })\n}\n","import React from 'react'\n\n//\n\nimport {\n  linkColumnStructure,\n  flattenColumns,\n  assignColumnAccessor,\n  unpreparedAccessWarning,\n  makeHeaderGroups,\n  decorateColumn,\n} from '../utils'\n\nimport {\n  useGetLatest,\n  reduceHooks,\n  actions,\n  loopHooks,\n  makePropGetter,\n  makeRenderer,\n} from '../publicUtils'\n\nimport makeDefaultPluginHooks from '../makeDefaultPluginHooks'\n\nimport { useColumnVisibility } from './useColumnVisibility'\n\nconst defaultInitialState = {}\nconst defaultColumnInstance = {}\nconst defaultReducer = (state, action, prevState) => state\nconst defaultGetSubRows = (row, index) => row.subRows || []\nconst defaultGetRowId = (row, index, parent) =>\n  `${parent ? [parent.id, index].join('.') : index}`\nconst defaultUseControlledState = d => d\n\nfunction applyDefaults(props) {\n  const {\n    initialState = defaultInitialState,\n    defaultColumn = defaultColumnInstance,\n    getSubRows = defaultGetSubRows,\n    getRowId = defaultGetRowId,\n    stateReducer = defaultReducer,\n    useControlledState = defaultUseControlledState,\n    ...rest\n  } = props\n\n  return {\n    ...rest,\n    initialState,\n    defaultColumn,\n    getSubRows,\n    getRowId,\n    stateReducer,\n    useControlledState,\n  }\n}\n\nexport const useTable = (props, ...plugins) => {\n  // Apply default props\n  props = applyDefaults(props)\n\n  // Add core plugins\n  plugins = [useColumnVisibility, ...plugins]\n\n  // Create the table instance\n  let instanceRef = React.useRef({})\n\n  // Create a getter for the instance (helps avoid a lot of potential memory leaks)\n  const getInstance = useGetLatest(instanceRef.current)\n\n  // Assign the props, plugins and hooks to the instance\n  Object.assign(getInstance(), {\n    ...props,\n    plugins,\n    hooks: makeDefaultPluginHooks(),\n  })\n\n  // Allow plugins to register hooks as early as possible\n  plugins.filter(Boolean).forEach(plugin => {\n    plugin(getInstance().hooks)\n  })\n\n  // Consume all hooks and make a getter for them\n  const getHooks = useGetLatest(getInstance().hooks)\n  getInstance().getHooks = getHooks\n  delete getInstance().hooks\n\n  // Allow useOptions hooks to modify the options coming into the table\n  Object.assign(\n    getInstance(),\n    reduceHooks(getHooks().useOptions, applyDefaults(props))\n  )\n\n  const {\n    data,\n    columns: userColumns,\n    initialState,\n    defaultColumn,\n    getSubRows,\n    getRowId,\n    stateReducer,\n    useControlledState,\n  } = getInstance()\n\n  // Setup user reducer ref\n  const getStateReducer = useGetLatest(stateReducer)\n\n  // Build the reducer\n  const reducer = React.useCallback(\n    (state, action) => {\n      // Detect invalid actions\n      if (!action.type) {\n        console.info({ action })\n        throw new Error('Unknown Action 👆')\n      }\n\n      // Reduce the state from all plugin reducers\n      return [\n        ...getHooks().stateReducers,\n        // Allow the user to add their own state reducer(s)\n        ...(Array.isArray(getStateReducer())\n          ? getStateReducer()\n          : [getStateReducer()]),\n      ].reduce(\n        (s, handler) => handler(s, action, state, getInstance()) || s,\n        state\n      )\n    },\n    [getHooks, getStateReducer, getInstance]\n  )\n\n  // Start the reducer\n  const [reducerState, dispatch] = React.useReducer(reducer, undefined, () =>\n    reducer(initialState, { type: actions.init })\n  )\n\n  // Allow the user to control the final state with hooks\n  const state = reduceHooks(\n    [...getHooks().useControlledState, useControlledState],\n    reducerState,\n    { instance: getInstance() }\n  )\n\n  Object.assign(getInstance(), {\n    state,\n    dispatch,\n  })\n\n  // Decorate All the columns\n  const columns = React.useMemo(\n    () =>\n      linkColumnStructure(\n        reduceHooks(getHooks().columns, userColumns, {\n          instance: getInstance(),\n        })\n      ),\n    [\n      getHooks,\n      getInstance,\n      userColumns,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().columnsDeps, [], { instance: getInstance() }),\n    ]\n  )\n  getInstance().columns = columns\n\n  // Get the flat list of all columns and allow hooks to decorate\n  // those columns (and trigger this memoization via deps)\n  let allColumns = React.useMemo(\n    () =>\n      reduceHooks(getHooks().allColumns, flattenColumns(columns), {\n        instance: getInstance(),\n      }).map(assignColumnAccessor),\n    [\n      columns,\n      getHooks,\n      getInstance,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().allColumnsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n  getInstance().allColumns = allColumns\n\n  // Access the row model using initial columns\n  const [rows, flatRows, rowsById] = React.useMemo(() => {\n    let rows = []\n    let flatRows = []\n    const rowsById = {}\n\n    const allColumnsQueue = [...allColumns]\n\n    while (allColumnsQueue.length) {\n      const column = allColumnsQueue.shift()\n      accessRowsForColumn({\n        data,\n        rows,\n        flatRows,\n        rowsById,\n        column,\n        getRowId,\n        getSubRows,\n        accessValueHooks: getHooks().accessValue,\n        getInstance,\n      })\n    }\n\n    return [rows, flatRows, rowsById]\n  }, [allColumns, data, getRowId, getSubRows, getHooks, getInstance])\n\n  Object.assign(getInstance(), {\n    rows,\n    initialRows: [...rows],\n    flatRows,\n    rowsById,\n    // materializedColumns,\n  })\n\n  loopHooks(getHooks().useInstanceAfterData, getInstance())\n\n  // Get the flat list of all columns AFTER the rows\n  // have been access, and allow hooks to decorate\n  // those columns (and trigger this memoization via deps)\n  let visibleColumns = React.useMemo(\n    () =>\n      reduceHooks(getHooks().visibleColumns, allColumns, {\n        instance: getInstance(),\n      }).map(d => decorateColumn(d, defaultColumn)),\n    [\n      getHooks,\n      allColumns,\n      getInstance,\n      defaultColumn,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().visibleColumnsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n\n  // Combine new visible columns with all columns\n  allColumns = React.useMemo(() => {\n    const columns = [...visibleColumns]\n\n    allColumns.forEach(column => {\n      if (!columns.find(d => d.id === column.id)) {\n        columns.push(column)\n      }\n    })\n\n    return columns\n  }, [allColumns, visibleColumns])\n  getInstance().allColumns = allColumns\n\n  if (process.env.NODE_ENV !== 'production') {\n    const duplicateColumns = allColumns.filter((column, i) => {\n      return allColumns.findIndex(d => d.id === column.id) !== i\n    })\n\n    if (duplicateColumns.length) {\n      console.info(allColumns)\n      throw new Error(\n        `Duplicate columns were found with ids: \"${duplicateColumns\n          .map(d => d.id)\n          .join(', ')}\" in the columns array above`\n      )\n    }\n  }\n\n  // Make the headerGroups\n  const headerGroups = React.useMemo(\n    () =>\n      reduceHooks(\n        getHooks().headerGroups,\n        makeHeaderGroups(visibleColumns, defaultColumn),\n        getInstance()\n      ),\n    [\n      getHooks,\n      visibleColumns,\n      defaultColumn,\n      getInstance,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().headerGroupsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n  getInstance().headerGroups = headerGroups\n\n  // Get the first level of headers\n  const headers = React.useMemo(\n    () => (headerGroups.length ? headerGroups[0].headers : []),\n    [headerGroups]\n  )\n  getInstance().headers = headers\n\n  // Provide a flat header list for utilities\n  getInstance().flatHeaders = headerGroups.reduce(\n    (all, headerGroup) => [...all, ...headerGroup.headers],\n    []\n  )\n\n  loopHooks(getHooks().useInstanceBeforeDimensions, getInstance())\n\n  // Filter columns down to visible ones\n  const visibleColumnsDep = visibleColumns\n    .filter(d => d.isVisible)\n    .map(d => d.id)\n    .sort()\n    .join('_')\n\n  visibleColumns = React.useMemo(\n    () => visibleColumns.filter(d => d.isVisible),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [visibleColumns, visibleColumnsDep]\n  )\n  getInstance().visibleColumns = visibleColumns\n\n  // Header Visibility is needed by this point\n  const [\n    totalColumnsMinWidth,\n    totalColumnsWidth,\n    totalColumnsMaxWidth,\n  ] = calculateHeaderWidths(headers)\n\n  getInstance().totalColumnsMinWidth = totalColumnsMinWidth\n  getInstance().totalColumnsWidth = totalColumnsWidth\n  getInstance().totalColumnsMaxWidth = totalColumnsMaxWidth\n\n  loopHooks(getHooks().useInstance, getInstance())\n\n  // Each materialized header needs to be assigned a render function and other\n  // prop getter properties here.\n  ;[...getInstance().flatHeaders, ...getInstance().allColumns].forEach(\n    column => {\n      // Give columns/headers rendering power\n      column.render = makeRenderer(getInstance(), column)\n\n      // Give columns/headers a default getHeaderProps\n      column.getHeaderProps = makePropGetter(getHooks().getHeaderProps, {\n        instance: getInstance(),\n        column,\n      })\n\n      // Give columns/headers a default getFooterProps\n      column.getFooterProps = makePropGetter(getHooks().getFooterProps, {\n        instance: getInstance(),\n        column,\n      })\n    }\n  )\n\n  getInstance().headerGroups = React.useMemo(\n    () =>\n      headerGroups.filter((headerGroup, i) => {\n        // Filter out any headers and headerGroups that don't have visible columns\n        headerGroup.headers = headerGroup.headers.filter(column => {\n          const recurse = headers =>\n            headers.filter(column => {\n              if (column.headers) {\n                return recurse(column.headers)\n              }\n              return column.isVisible\n            }).length\n          if (column.headers) {\n            return recurse(column.headers)\n          }\n          return column.isVisible\n        })\n\n        // Give headerGroups getRowProps\n        if (headerGroup.headers.length) {\n          headerGroup.getHeaderGroupProps = makePropGetter(\n            getHooks().getHeaderGroupProps,\n            { instance: getInstance(), headerGroup, index: i }\n          )\n\n          headerGroup.getFooterGroupProps = makePropGetter(\n            getHooks().getFooterGroupProps,\n            { instance: getInstance(), headerGroup, index: i }\n          )\n\n          return true\n        }\n\n        return false\n      }),\n    [headerGroups, getInstance, getHooks]\n  )\n\n  getInstance().footerGroups = [...getInstance().headerGroups].reverse()\n\n  // The prepareRow function is absolutely necessary and MUST be called on\n  // any rows the user wishes to be displayed.\n\n  getInstance().prepareRow = React.useCallback(\n    row => {\n      row.getRowProps = makePropGetter(getHooks().getRowProps, {\n        instance: getInstance(),\n        row,\n      })\n\n      // Build the visible cells for each row\n      row.allCells = allColumns.map(column => {\n        const value = row.values[column.id]\n\n        const cell = {\n          column,\n          row,\n          value,\n        }\n\n        // Give each cell a getCellProps base\n        cell.getCellProps = makePropGetter(getHooks().getCellProps, {\n          instance: getInstance(),\n          cell,\n        })\n\n        // Give each cell a renderer function (supports multiple renderers)\n        cell.render = makeRenderer(getInstance(), column, {\n          row,\n          cell,\n          value,\n        })\n\n        return cell\n      })\n\n      row.cells = visibleColumns.map(column =>\n        row.allCells.find(cell => cell.column.id === column.id)\n      )\n\n      // need to apply any row specific hooks (useExpanded requires this)\n      loopHooks(getHooks().prepareRow, row, { instance: getInstance() })\n    },\n    [getHooks, getInstance, allColumns, visibleColumns]\n  )\n\n  getInstance().getTableProps = makePropGetter(getHooks().getTableProps, {\n    instance: getInstance(),\n  })\n\n  getInstance().getTableBodyProps = makePropGetter(\n    getHooks().getTableBodyProps,\n    {\n      instance: getInstance(),\n    }\n  )\n\n  loopHooks(getHooks().useFinalInstance, getInstance())\n\n  return getInstance()\n}\n\nfunction calculateHeaderWidths(headers, left = 0) {\n  let sumTotalMinWidth = 0\n  let sumTotalWidth = 0\n  let sumTotalMaxWidth = 0\n  let sumTotalFlexWidth = 0\n\n  headers.forEach(header => {\n    let { headers: subHeaders } = header\n\n    header.totalLeft = left\n\n    if (subHeaders && subHeaders.length) {\n      const [\n        totalMinWidth,\n        totalWidth,\n        totalMaxWidth,\n        totalFlexWidth,\n      ] = calculateHeaderWidths(subHeaders, left)\n      header.totalMinWidth = totalMinWidth\n      header.totalWidth = totalWidth\n      header.totalMaxWidth = totalMaxWidth\n      header.totalFlexWidth = totalFlexWidth\n    } else {\n      header.totalMinWidth = header.minWidth\n      header.totalWidth = Math.min(\n        Math.max(header.minWidth, header.width),\n        header.maxWidth\n      )\n      header.totalMaxWidth = header.maxWidth\n      header.totalFlexWidth = header.canResize ? header.totalWidth : 0\n    }\n    if (header.isVisible) {\n      left += header.totalWidth\n      sumTotalMinWidth += header.totalMinWidth\n      sumTotalWidth += header.totalWidth\n      sumTotalMaxWidth += header.totalMaxWidth\n      sumTotalFlexWidth += header.totalFlexWidth\n    }\n  })\n\n  return [sumTotalMinWidth, sumTotalWidth, sumTotalMaxWidth, sumTotalFlexWidth]\n}\n\nfunction accessRowsForColumn({\n  data,\n  rows,\n  flatRows,\n  rowsById,\n  column,\n  getRowId,\n  getSubRows,\n  accessValueHooks,\n  getInstance,\n}) {\n  // Access the row's data column-by-column\n  // We do it this way so we can incrementally add materialized\n  // columns after the first pass and avoid excessive looping\n  const accessRow = (originalRow, rowIndex, depth = 0, parent, parentRows) => {\n    // Keep the original reference around\n    const original = originalRow\n\n    const id = getRowId(originalRow, rowIndex, parent)\n\n    let row = rowsById[id]\n\n    // If the row hasn't been created, let's make it\n    if (!row) {\n      row = {\n        id,\n        original,\n        index: rowIndex,\n        depth,\n        cells: [{}], // This is a dummy cell\n      }\n\n      // Override common array functions (and the dummy cell's getCellProps function)\n      // to show an error if it is accessed without calling prepareRow\n      row.cells.map = unpreparedAccessWarning\n      row.cells.filter = unpreparedAccessWarning\n      row.cells.forEach = unpreparedAccessWarning\n      row.cells[0].getCellProps = unpreparedAccessWarning\n\n      // Create the cells and values\n      row.values = {}\n\n      // Push this row into the parentRows array\n      parentRows.push(row)\n      // Keep track of every row in a flat array\n      flatRows.push(row)\n      // Also keep track of every row by its ID\n      rowsById[id] = row\n\n      // Get the original subrows\n      row.originalSubRows = getSubRows(originalRow, rowIndex)\n\n      // Then recursively access them\n      if (row.originalSubRows) {\n        const subRows = []\n        row.originalSubRows.forEach((d, i) =>\n          accessRow(d, i, depth + 1, row, subRows)\n        )\n        // Keep the new subRows array on the row\n        row.subRows = subRows\n      }\n    } else if (row.subRows) {\n      // If the row exists, then it's already been accessed\n      // Keep recursing, but don't worry about passing the\n      // accumlator array (those rows already exist)\n      row.originalSubRows.forEach((d, i) => accessRow(d, i, depth + 1, row))\n    }\n\n    // If the column has an accessor, use it to get a value\n    if (column.accessor) {\n      row.values[column.id] = column.accessor(\n        originalRow,\n        rowIndex,\n        row,\n        parentRows,\n        data\n      )\n    }\n\n    // Allow plugins to manipulate the column value\n    row.values[column.id] = reduceHooks(\n      accessValueHooks,\n      row.values[column.id],\n      {\n        row,\n        column,\n        instance: getInstance(),\n      },\n      true\n    )\n  }\n\n  data.forEach((originalRow, rowIndex) =>\n    accessRow(originalRow, rowIndex, 0, undefined, rows)\n  )\n}\n","import React from 'react'\n\nimport { expandRows } from '../utils'\n\nimport {\n  useGetLatest,\n  actions,\n  useMountedLayoutEffect,\n  makePropGetter,\n  ensurePluginOrder,\n} from '../publicUtils'\n\n// Actions\nactions.resetExpanded = 'resetExpanded'\nactions.toggleRowExpanded = 'toggleRowExpanded'\nactions.toggleAllRowsExpanded = 'toggleAllRowsExpanded'\n\nexport const useExpanded = hooks => {\n  hooks.getToggleAllRowsExpandedProps = [defaultGetToggleAllRowsExpandedProps]\n  hooks.getToggleRowExpandedProps = [defaultGetToggleRowExpandedProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseExpanded.pluginName = 'useExpanded'\n\nconst defaultGetToggleAllRowsExpandedProps = (props, { instance }) => [\n  props,\n  {\n    onClick: e => {\n      instance.toggleAllRowsExpanded()\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    title: 'Toggle All Rows Expanded',\n  },\n]\n\nconst defaultGetToggleRowExpandedProps = (props, { row }) => [\n  props,\n  {\n    onClick: () => {\n      row.toggleRowExpanded()\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    title: 'Toggle Row Expanded',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      expanded: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetExpanded) {\n    return {\n      ...state,\n      expanded: instance.initialState.expanded || {},\n    }\n  }\n\n  if (action.type === actions.toggleAllRowsExpanded) {\n    const { value } = action\n    const { isAllRowsExpanded, rowsById } = instance\n\n    const expandAll = typeof value !== 'undefined' ? value : !isAllRowsExpanded\n\n    if (expandAll) {\n      const expanded = {}\n\n      Object.keys(rowsById).forEach(rowId => {\n        expanded[rowId] = true\n      })\n\n      return {\n        ...state,\n        expanded,\n      }\n    }\n\n    return {\n      ...state,\n      expanded: {},\n    }\n  }\n\n  if (action.type === actions.toggleRowExpanded) {\n    const { id, value: setExpanded } = action\n    const exists = state.expanded[id]\n\n    const shouldExist =\n      typeof setExpanded !== 'undefined' ? setExpanded : !exists\n\n    if (!exists && shouldExist) {\n      return {\n        ...state,\n        expanded: {\n          ...state.expanded,\n          [id]: true,\n        },\n      }\n    } else if (exists && !shouldExist) {\n      const { [id]: _, ...rest } = state.expanded\n      return {\n        ...state,\n        expanded: rest,\n      }\n    } else {\n      return state\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    rowsById,\n    manualExpandedKey = 'expanded',\n    paginateExpandedRows = true,\n    expandSubRows = true,\n    autoResetExpanded = true,\n    getHooks,\n    plugins,\n    state: { expanded },\n    dispatch,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useSortBy', 'useGroupBy', 'usePivotColumns', 'useGlobalFilter'],\n    'useExpanded'\n  )\n\n  const getAutoResetExpanded = useGetLatest(autoResetExpanded)\n\n  let isAllRowsExpanded = Boolean(\n    Object.keys(rowsById).length && Object.keys(expanded).length\n  )\n\n  if (isAllRowsExpanded) {\n    if (Object.keys(rowsById).some(id => !expanded[id])) {\n      isAllRowsExpanded = false\n    }\n  }\n\n  // Bypass any effects from firing when this changes\n  useMountedLayoutEffect(() => {\n    if (getAutoResetExpanded()) {\n      dispatch({ type: actions.resetExpanded })\n    }\n  }, [dispatch, data])\n\n  const toggleRowExpanded = React.useCallback(\n    (id, value) => {\n      dispatch({ type: actions.toggleRowExpanded, id, value })\n    },\n    [dispatch]\n  )\n\n  const toggleAllRowsExpanded = React.useCallback(\n    value => dispatch({ type: actions.toggleAllRowsExpanded, value }),\n    [dispatch]\n  )\n\n  const expandedRows = React.useMemo(() => {\n    if (paginateExpandedRows) {\n      return expandRows(rows, { manualExpandedKey, expanded, expandSubRows })\n    }\n\n    return rows\n  }, [paginateExpandedRows, rows, manualExpandedKey, expanded, expandSubRows])\n\n  const expandedDepth = React.useMemo(() => findExpandedDepth(expanded), [\n    expanded,\n  ])\n\n  const getInstance = useGetLatest(instance)\n\n  const getToggleAllRowsExpandedProps = makePropGetter(\n    getHooks().getToggleAllRowsExpandedProps,\n    { instance: getInstance() }\n  )\n\n  Object.assign(instance, {\n    preExpandedRows: rows,\n    expandedRows,\n    rows: expandedRows,\n    expandedDepth,\n    isAllRowsExpanded,\n    toggleRowExpanded,\n    toggleAllRowsExpanded,\n    getToggleAllRowsExpandedProps,\n  })\n}\n\nfunction prepareRow(row, { instance: { getHooks }, instance }) {\n  row.toggleRowExpanded = set => instance.toggleRowExpanded(row.id, set)\n\n  row.getToggleRowExpandedProps = makePropGetter(\n    getHooks().getToggleRowExpandedProps,\n    {\n      instance,\n      row,\n    }\n  )\n}\n\nfunction findExpandedDepth(expanded) {\n  let maxDepth = 0\n\n  Object.keys(expanded).forEach(id => {\n    const splitId = id.split('.')\n    maxDepth = Math.max(maxDepth, splitId.length)\n  })\n\n  return maxDepth\n}\n","export const text = (rows, ids, filterValue) => {\n  rows = rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return String(rowValue)\n        .toLowerCase()\n        .includes(String(filterValue).toLowerCase())\n    })\n  })\n  return rows\n}\n\ntext.autoRemove = val => !val\n\nexport const exactText = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue !== undefined\n        ? String(rowValue).toLowerCase() === String(filterValue).toLowerCase()\n        : true\n    })\n  })\n}\n\nexactText.autoRemove = val => !val\n\nexport const exactTextCase = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue !== undefined\n        ? String(rowValue) === String(filterValue)\n        : true\n    })\n  })\n}\n\nexactTextCase.autoRemove = val => !val\n\nexport const includes = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue.includes(filterValue)\n    })\n  })\n}\n\nincludes.autoRemove = val => !val || !val.length\n\nexport const includesAll = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return (\n        rowValue &&\n        rowValue.length &&\n        filterValue.every(val => rowValue.includes(val))\n      )\n    })\n  })\n}\n\nincludesAll.autoRemove = val => !val || !val.length\n\nexport const includesSome = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return (\n        rowValue &&\n        rowValue.length &&\n        filterValue.some(val => rowValue.includes(val))\n      )\n    })\n  })\n}\n\nincludesSome.autoRemove = val => !val || !val.length\n\nexport const includesValue = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return filterValue.includes(rowValue)\n    })\n  })\n}\n\nincludesValue.autoRemove = val => !val || !val.length\n\nexport const exact = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue === filterValue\n    })\n  })\n}\n\nexact.autoRemove = val => typeof val === 'undefined'\n\nexport const equals = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      // eslint-disable-next-line eqeqeq\n      return rowValue == filterValue\n    })\n  })\n}\n\nequals.autoRemove = val => val == null\n\nexport const between = (rows, ids, filterValue) => {\n  let [min, max] = filterValue || []\n\n  min = typeof min === 'number' ? min : -Infinity\n  max = typeof max === 'number' ? max : Infinity\n\n  if (min > max) {\n    const temp = min\n    min = max\n    max = temp\n  }\n\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue >= min && rowValue <= max\n    })\n  })\n}\n\nbetween.autoRemove = val =>\n  !val || (typeof val[0] !== 'number' && typeof val[1] !== 'number')\n","import React from 'react'\n\nimport {\n  getFirstDefined,\n  getFilterMethod,\n  shouldAutoRemoveFilter,\n} from '../utils'\n\nimport {\n  actions,\n  useGetLatest,\n  functionalUpdate,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport * as filterTypes from '../filterTypes'\n\n// Actions\nactions.resetFilters = 'resetFilters'\nactions.setFilter = 'setFilter'\nactions.setAllFilters = 'setAllFilters'\n\nexport const useFilters = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseFilters.pluginName = 'useFilters'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      filters: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetFilters) {\n    return {\n      ...state,\n      filters: instance.initialState.filters || [],\n    }\n  }\n\n  if (action.type === actions.setFilter) {\n    const { columnId, filterValue } = action\n    const { allColumns, filterTypes: userFilterTypes } = instance\n\n    const column = allColumns.find(d => d.id === columnId)\n\n    if (!column) {\n      throw new Error(\n        `React-Table: Could not find a column with id: ${columnId}`\n      )\n    }\n\n    const filterMethod = getFilterMethod(\n      column.filter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    const previousfilter = state.filters.find(d => d.id === columnId)\n\n    const newFilter = functionalUpdate(\n      filterValue,\n      previousfilter && previousfilter.value\n    )\n\n    //\n    if (shouldAutoRemoveFilter(filterMethod.autoRemove, newFilter, column)) {\n      return {\n        ...state,\n        filters: state.filters.filter(d => d.id !== columnId),\n      }\n    }\n\n    if (previousfilter) {\n      return {\n        ...state,\n        filters: state.filters.map(d => {\n          if (d.id === columnId) {\n            return { id: columnId, value: newFilter }\n          }\n          return d\n        }),\n      }\n    }\n\n    return {\n      ...state,\n      filters: [...state.filters, { id: columnId, value: newFilter }],\n    }\n  }\n\n  if (action.type === actions.setAllFilters) {\n    const { filters } = action\n    const { allColumns, filterTypes: userFilterTypes } = instance\n\n    return {\n      ...state,\n      // Filter out undefined values\n      filters: functionalUpdate(filters, state.filters).filter(filter => {\n        const column = allColumns.find(d => d.id === filter.id)\n        const filterMethod = getFilterMethod(\n          column.filter,\n          userFilterTypes || {},\n          filterTypes\n        )\n\n        if (\n          shouldAutoRemoveFilter(filterMethod.autoRemove, filter.value, column)\n        ) {\n          return false\n        }\n        return true\n      }),\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    filterTypes: userFilterTypes,\n    manualFilters,\n    defaultCanFilter = false,\n    disableFilters,\n    state: { filters },\n    dispatch,\n    autoResetFilters = true,\n  } = instance\n\n  const setFilter = React.useCallback(\n    (columnId, filterValue) => {\n      dispatch({ type: actions.setFilter, columnId, filterValue })\n    },\n    [dispatch]\n  )\n\n  const setAllFilters = React.useCallback(\n    filters => {\n      dispatch({\n        type: actions.setAllFilters,\n        filters,\n      })\n    },\n    [dispatch]\n  )\n\n  allColumns.forEach(column => {\n    const {\n      id,\n      accessor,\n      defaultCanFilter: columnDefaultCanFilter,\n      disableFilters: columnDisableFilters,\n    } = column\n\n    // Determine if a column is filterable\n    column.canFilter = accessor\n      ? getFirstDefined(\n          columnDisableFilters === true ? false : undefined,\n          disableFilters === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(columnDefaultCanFilter, defaultCanFilter, false)\n\n    // Provide the column a way of updating the filter value\n    column.setFilter = val => setFilter(column.id, val)\n\n    // Provide the current filter value to the column for\n    // convenience\n    const found = filters.find(d => d.id === id)\n    column.filterValue = found && found.value\n  })\n\n  const [\n    filteredRows,\n    filteredFlatRows,\n    filteredRowsById,\n  ] = React.useMemo(() => {\n    if (manualFilters || !filters.length) {\n      return [rows, flatRows, rowsById]\n    }\n\n    const filteredFlatRows = []\n    const filteredRowsById = {}\n\n    // Filters top level and nested rows\n    const filterRows = (rows, depth = 0) => {\n      let filteredRows = rows\n\n      filteredRows = filters.reduce(\n        (filteredSoFar, { id: columnId, value: filterValue }) => {\n          // Find the filters column\n          const column = allColumns.find(d => d.id === columnId)\n\n          if (!column) {\n            return filteredSoFar\n          }\n\n          if (depth === 0) {\n            column.preFilteredRows = filteredSoFar\n          }\n\n          const filterMethod = getFilterMethod(\n            column.filter,\n            userFilterTypes || {},\n            filterTypes\n          )\n\n          if (!filterMethod) {\n            console.warn(\n              `Could not find a valid 'column.filter' for column with the ID: ${column.id}.`\n            )\n            return filteredSoFar\n          }\n\n          // Pass the rows, id, filterValue and column to the filterMethod\n          // to get the filtered rows back\n          column.filteredRows = filterMethod(\n            filteredSoFar,\n            [columnId],\n            filterValue\n          )\n\n          return column.filteredRows\n        },\n        rows\n      )\n\n      // Apply the filter to any subRows\n      // We technically could do this recursively in the above loop,\n      // but that would severely hinder the API for the user, since they\n      // would be required to do that recursion in some scenarios\n      filteredRows.forEach(row => {\n        filteredFlatRows.push(row)\n        filteredRowsById[row.id] = row\n        if (!row.subRows) {\n          return\n        }\n\n        row.subRows =\n          row.subRows && row.subRows.length > 0\n            ? filterRows(row.subRows, depth + 1)\n            : row.subRows\n      })\n\n      return filteredRows\n    }\n\n    return [filterRows(rows), filteredFlatRows, filteredRowsById]\n  }, [\n    manualFilters,\n    filters,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    userFilterTypes,\n  ])\n\n  React.useMemo(() => {\n    // Now that each filtered column has it's partially filtered rows,\n    // lets assign the final filtered rows to all of the other columns\n    const nonFilteredColumns = allColumns.filter(\n      column => !filters.find(d => d.id === column.id)\n    )\n\n    // This essentially enables faceted filter options to be built easily\n    // using every column's preFilteredRows value\n    nonFilteredColumns.forEach(column => {\n      column.preFilteredRows = filteredRows\n      column.filteredRows = filteredRows\n    })\n  }, [filteredRows, filters, allColumns])\n\n  const getAutoResetFilters = useGetLatest(autoResetFilters)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetFilters()) {\n      dispatch({ type: actions.resetFilters })\n    }\n  }, [dispatch, manualFilters ? null : data])\n\n  Object.assign(instance, {\n    preFilteredRows: rows,\n    preFilteredFlatRows: flatRows,\n    preFilteredRowsById: rowsById,\n    filteredRows,\n    filteredFlatRows,\n    filteredRowsById,\n    rows: filteredRows,\n    flatRows: filteredFlatRows,\n    rowsById: filteredRowsById,\n    setFilter,\n    setAllFilters,\n  })\n}\n","import React from 'react'\n\nimport {\n  getFilterMethod,\n  shouldAutoRemoveFilter,\n  getFirstDefined,\n} from '../utils'\n\nimport {\n  actions,\n  useMountedLayoutEffect,\n  functionalUpdate,\n  useGetLatest,\n} from '../publicUtils'\n\nimport * as filterTypes from '../filterTypes'\n\n// Actions\nactions.resetGlobalFilter = 'resetGlobalFilter'\nactions.setGlobalFilter = 'setGlobalFilter'\n\nexport const useGlobalFilter = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseGlobalFilter.pluginName = 'useGlobalFilter'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.resetGlobalFilter) {\n    return {\n      ...state,\n      globalFilter: instance.initialState.globalFilter || undefined,\n    }\n  }\n\n  if (action.type === actions.setGlobalFilter) {\n    const { filterValue } = action\n    const { userFilterTypes } = instance\n\n    const filterMethod = getFilterMethod(\n      instance.globalFilter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    const newFilter = functionalUpdate(filterValue, state.globalFilter)\n\n    //\n    if (shouldAutoRemoveFilter(filterMethod.autoRemove, newFilter)) {\n      const { globalFilter, ...stateWithoutGlobalFilter } = state\n      return stateWithoutGlobalFilter\n    }\n\n    return {\n      ...state,\n      globalFilter: newFilter,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    filterTypes: userFilterTypes,\n    globalFilter,\n    manualGlobalFilter,\n    state: { globalFilter: globalFilterValue },\n    dispatch,\n    autoResetGlobalFilter = true,\n    disableGlobalFilter,\n  } = instance\n\n  const setGlobalFilter = React.useCallback(\n    filterValue => {\n      dispatch({ type: actions.setGlobalFilter, filterValue })\n    },\n    [dispatch]\n  )\n\n  // TODO: Create a filter cache for incremental high speed multi-filtering\n  // This gets pretty complicated pretty fast, since you have to maintain a\n  // cache for each row group (top-level rows, and each row's recursive subrows)\n  // This would make multi-filtering a lot faster though. Too far?\n\n  const [\n    globalFilteredRows,\n    globalFilteredFlatRows,\n    globalFilteredRowsById,\n  ] = React.useMemo(() => {\n    if (manualGlobalFilter || typeof globalFilterValue === 'undefined') {\n      return [rows, flatRows, rowsById]\n    }\n\n    const filteredFlatRows = []\n    const filteredRowsById = {}\n\n    const filterMethod = getFilterMethod(\n      globalFilter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    if (!filterMethod) {\n      console.warn(`Could not find a valid 'globalFilter' option.`)\n      return rows\n    }\n\n    allColumns.forEach(column => {\n      const { disableGlobalFilter: columnDisableGlobalFilter } = column\n\n      column.canFilter = getFirstDefined(\n        columnDisableGlobalFilter === true ? false : undefined,\n        disableGlobalFilter === true ? false : undefined,\n        true\n      )\n    })\n\n    const filterableColumns = allColumns.filter(c => c.canFilter === true)\n\n    // Filters top level and nested rows\n    const filterRows = filteredRows => {\n      filteredRows = filterMethod(\n        filteredRows,\n        filterableColumns.map(d => d.id),\n        globalFilterValue\n      )\n\n      filteredRows.forEach(row => {\n        filteredFlatRows.push(row)\n        filteredRowsById[row.id] = row\n\n        row.subRows =\n          row.subRows && row.subRows.length\n            ? filterRows(row.subRows)\n            : row.subRows\n      })\n\n      return filteredRows\n    }\n\n    return [filterRows(rows), filteredFlatRows, filteredRowsById]\n  }, [\n    manualGlobalFilter,\n    globalFilterValue,\n    globalFilter,\n    userFilterTypes,\n    allColumns,\n    rows,\n    flatRows,\n    rowsById,\n    disableGlobalFilter,\n  ])\n\n  const getAutoResetGlobalFilter = useGetLatest(autoResetGlobalFilter)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetGlobalFilter()) {\n      dispatch({ type: actions.resetGlobalFilter })\n    }\n  }, [dispatch, manualGlobalFilter ? null : data])\n\n  Object.assign(instance, {\n    preGlobalFilteredRows: rows,\n    preGlobalFilteredFlatRows: flatRows,\n    preGlobalFilteredRowsById: rowsById,\n    globalFilteredRows,\n    globalFilteredFlatRows,\n    globalFilteredRowsById,\n    rows: globalFilteredRows,\n    flatRows: globalFilteredFlatRows,\n    rowsById: globalFilteredRowsById,\n    setGlobalFilter,\n    disableGlobalFilter,\n  })\n}\n","export function sum(values, aggregatedValues) {\n  // It's faster to just add the aggregations together instead of\n  // process leaf nodes individually\n  return aggregatedValues.reduce(\n    (sum, next) => sum + (typeof next === 'number' ? next : 0),\n    0\n  )\n}\n\nexport function min(values) {\n  let min = values[0] || 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      min = Math.min(min, value)\n    }\n  })\n\n  return min\n}\n\nexport function max(values) {\n  let max = values[0] || 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      max = Math.max(max, value)\n    }\n  })\n\n  return max\n}\n\nexport function minMax(values) {\n  let min = values[0] || 0\n  let max = values[0] || 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      min = Math.min(min, value)\n      max = Math.max(max, value)\n    }\n  })\n\n  return `${min}..${max}`\n}\n\nexport function average(values) {\n  return sum(null, values) / values.length\n}\n\nexport function median(values) {\n  if (!values.length) {\n    return null\n  }\n\n  const mid = Math.floor(values.length / 2)\n  const nums = [...values].sort((a, b) => a - b)\n  return values.length % 2 !== 0 ? nums[mid] : (nums[mid - 1] + nums[mid]) / 2\n}\n\nexport function unique(values) {\n  return Array.from(new Set(values).values())\n}\n\nexport function uniqueCount(values) {\n  return new Set(values).size\n}\n\nexport function count(values) {\n  return values.length\n}\n","import React from 'react'\n\nimport * as aggregations from '../aggregations'\n\nimport { getFirstDefined, flattenBy } from '../utils'\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nconst emptyArray = []\nconst emptyObject = {}\n\n// Actions\nactions.resetGroupBy = 'resetGroupBy'\nactions.setGroupBy = 'setGroupBy'\nactions.toggleGroupBy = 'toggleGroupBy'\n\nexport const useGroupBy = hooks => {\n  hooks.getGroupByToggleProps = [defaultGetGroupByToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.visibleColumnsDeps.push((deps, { instance }) => [\n    ...deps,\n    instance.state.groupBy,\n  ])\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseGroupBy.pluginName = 'useGroupBy'\n\nconst defaultGetGroupByToggleProps = (props, { header }) => [\n  props,\n  {\n    onClick: header.canGroupBy\n      ? e => {\n          e.persist()\n          header.toggleGroupBy()\n        }\n      : undefined,\n    style: {\n      cursor: header.canGroupBy ? 'pointer' : undefined,\n    },\n    title: 'Toggle GroupBy',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      groupBy: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetGroupBy) {\n    return {\n      ...state,\n      groupBy: instance.initialState.groupBy || [],\n    }\n  }\n\n  if (action.type === actions.setGroupBy) {\n    const { value } = action\n    return {\n      ...state,\n      groupBy: value,\n    }\n  }\n\n  if (action.type === actions.toggleGroupBy) {\n    const { columnId, value: setGroupBy } = action\n\n    const resolvedGroupBy =\n      typeof setGroupBy !== 'undefined'\n        ? setGroupBy\n        : !state.groupBy.includes(columnId)\n\n    if (resolvedGroupBy) {\n      return {\n        ...state,\n        groupBy: [...state.groupBy, columnId],\n      }\n    }\n\n    return {\n      ...state,\n      groupBy: state.groupBy.filter(d => d !== columnId),\n    }\n  }\n}\n\nfunction visibleColumns(\n  columns,\n  {\n    instance: {\n      state: { groupBy },\n    },\n  }\n) {\n  // Sort grouped columns to the start of the column list\n  // before the headers are built\n\n  const groupByColumns = groupBy\n    .map(g => columns.find(col => col.id === g))\n    .filter(Boolean)\n\n  const nonGroupByColumns = columns.filter(col => !groupBy.includes(col.id))\n\n  columns = [...groupByColumns, ...nonGroupByColumns]\n\n  columns.forEach(column => {\n    column.isGrouped = groupBy.includes(column.id)\n    column.groupedIndex = groupBy.indexOf(column.id)\n  })\n\n  return columns\n}\n\nconst defaultUserAggregations = {}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    flatHeaders,\n    groupByFn = defaultGroupByFn,\n    manualGroupBy,\n    aggregations: userAggregations = defaultUserAggregations,\n    plugins,\n    state: { groupBy },\n    dispatch,\n    autoResetGroupBy = true,\n    disableGroupBy,\n    defaultCanGroupBy,\n    getHooks,\n  } = instance\n\n  ensurePluginOrder(plugins, ['useColumnOrder', 'useFilters'], 'useGroupBy')\n\n  const getInstance = useGetLatest(instance)\n\n  allColumns.forEach(column => {\n    const {\n      accessor,\n      defaultGroupBy: defaultColumnGroupBy,\n      disableGroupBy: columnDisableGroupBy,\n    } = column\n\n    column.canGroupBy = accessor\n      ? getFirstDefined(\n          column.canGroupBy,\n          columnDisableGroupBy === true ? false : undefined,\n          disableGroupBy === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(\n          column.canGroupBy,\n          defaultColumnGroupBy,\n          defaultCanGroupBy,\n          false\n        )\n\n    if (column.canGroupBy) {\n      column.toggleGroupBy = () => instance.toggleGroupBy(column.id)\n    }\n\n    column.Aggregated = column.Aggregated || column.Cell\n  })\n\n  const toggleGroupBy = React.useCallback(\n    (columnId, value) => {\n      dispatch({ type: actions.toggleGroupBy, columnId, value })\n    },\n    [dispatch]\n  )\n\n  const setGroupBy = React.useCallback(\n    value => {\n      dispatch({ type: actions.setGroupBy, value })\n    },\n    [dispatch]\n  )\n\n  flatHeaders.forEach(header => {\n    header.getGroupByToggleProps = makePropGetter(\n      getHooks().getGroupByToggleProps,\n      { instance: getInstance(), header }\n    )\n  })\n\n  const [\n    groupedRows,\n    groupedFlatRows,\n    groupedRowsById,\n    onlyGroupedFlatRows,\n    onlyGroupedRowsById,\n    nonGroupedFlatRows,\n    nonGroupedRowsById,\n  ] = React.useMemo(() => {\n    if (manualGroupBy || !groupBy.length) {\n      return [\n        rows,\n        flatRows,\n        rowsById,\n        emptyArray,\n        emptyObject,\n        flatRows,\n        rowsById,\n      ]\n    }\n\n    // Ensure that the list of filtered columns exist\n    const existingGroupBy = groupBy.filter(g =>\n      allColumns.find(col => col.id === g)\n    )\n\n    // Find the columns that can or are aggregating\n    // Uses each column to aggregate rows into a single value\n    const aggregateRowsToValues = (leafRows, groupedRows, depth) => {\n      const values = {}\n\n      allColumns.forEach(column => {\n        // Don't aggregate columns that are in the groupBy\n        if (existingGroupBy.includes(column.id)) {\n          values[column.id] = groupedRows[0]\n            ? groupedRows[0].values[column.id]\n            : null\n          return\n        }\n\n        // Aggregate the values\n        let aggregateFn =\n          typeof column.aggregate === 'function'\n            ? column.aggregate\n            : userAggregations[column.aggregate] ||\n              aggregations[column.aggregate]\n\n        if (aggregateFn) {\n          // Get the columnValues to aggregate\n          const groupedValues = groupedRows.map(row => row.values[column.id])\n\n          // Get the columnValues to aggregate\n          const leafValues = leafRows.map(row => {\n            let columnValue = row.values[column.id]\n\n            if (!depth && column.aggregateValue) {\n              const aggregateValueFn =\n                typeof column.aggregateValue === 'function'\n                  ? column.aggregateValue\n                  : userAggregations[column.aggregateValue] ||\n                    aggregations[column.aggregateValue]\n\n              if (!aggregateValueFn) {\n                console.info({ column })\n                throw new Error(\n                  `React Table: Invalid column.aggregateValue option for column listed above`\n                )\n              }\n\n              columnValue = aggregateValueFn(columnValue, row, column)\n            }\n            return columnValue\n          })\n\n          values[column.id] = aggregateFn(leafValues, groupedValues)\n        } else if (column.aggregate) {\n          console.info({ column })\n          throw new Error(\n            `React Table: Invalid column.aggregate option for column listed above`\n          )\n        } else {\n          values[column.id] = null\n        }\n      })\n\n      return values\n    }\n\n    let groupedFlatRows = []\n    const groupedRowsById = {}\n    const onlyGroupedFlatRows = []\n    const onlyGroupedRowsById = {}\n    const nonGroupedFlatRows = []\n    const nonGroupedRowsById = {}\n\n    // Recursively group the data\n    const groupUpRecursively = (rows, depth = 0, parentId) => {\n      // This is the last level, just return the rows\n      if (depth === existingGroupBy.length) {\n        return rows\n      }\n\n      const columnId = existingGroupBy[depth]\n\n      // Group the rows together for this level\n      let rowGroupsMap = groupByFn(rows, columnId)\n\n      // Peform aggregations for each group\n      const aggregatedGroupedRows = Object.entries(rowGroupsMap).map(\n        ([groupByVal, groupedRows], index) => {\n          let id = `${columnId}:${groupByVal}`\n          id = parentId ? `${parentId}>${id}` : id\n\n          // First, Recurse to group sub rows before aggregation\n          const subRows = groupUpRecursively(groupedRows, depth + 1, id)\n\n          // Flatten the leaf rows of the rows in this group\n          const leafRows = depth\n            ? flattenBy(groupedRows, 'leafRows')\n            : groupedRows\n\n          const values = aggregateRowsToValues(leafRows, groupedRows, depth)\n\n          const row = {\n            id,\n            isGrouped: true,\n            groupByID: columnId,\n            groupByVal,\n            values,\n            subRows,\n            leafRows,\n            depth,\n            index,\n          }\n\n          subRows.forEach(subRow => {\n            groupedFlatRows.push(subRow)\n            groupedRowsById[subRow.id] = subRow\n            if (subRow.isGrouped) {\n              onlyGroupedFlatRows.push(subRow)\n              onlyGroupedRowsById[subRow.id] = subRow\n            } else {\n              nonGroupedFlatRows.push(subRow)\n              nonGroupedRowsById[subRow.id] = subRow\n            }\n          })\n\n          return row\n        }\n      )\n\n      return aggregatedGroupedRows\n    }\n\n    const groupedRows = groupUpRecursively(rows)\n\n    groupedRows.forEach(subRow => {\n      groupedFlatRows.push(subRow)\n      groupedRowsById[subRow.id] = subRow\n      if (subRow.isGrouped) {\n        onlyGroupedFlatRows.push(subRow)\n        onlyGroupedRowsById[subRow.id] = subRow\n      } else {\n        nonGroupedFlatRows.push(subRow)\n        nonGroupedRowsById[subRow.id] = subRow\n      }\n    })\n\n    // Assign the new data\n    return [\n      groupedRows,\n      groupedFlatRows,\n      groupedRowsById,\n      onlyGroupedFlatRows,\n      onlyGroupedRowsById,\n      nonGroupedFlatRows,\n      nonGroupedRowsById,\n    ]\n  }, [\n    manualGroupBy,\n    groupBy,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    userAggregations,\n    groupByFn,\n  ])\n\n  const getAutoResetGroupBy = useGetLatest(autoResetGroupBy)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetGroupBy()) {\n      dispatch({ type: actions.resetGroupBy })\n    }\n  }, [dispatch, manualGroupBy ? null : data])\n\n  Object.assign(instance, {\n    preGroupedRows: rows,\n    preGroupedFlatRow: flatRows,\n    preGroupedRowsById: rowsById,\n    groupedRows,\n    groupedFlatRows,\n    groupedRowsById,\n    onlyGroupedFlatRows,\n    onlyGroupedRowsById,\n    nonGroupedFlatRows,\n    nonGroupedRowsById,\n    rows: groupedRows,\n    flatRows: groupedFlatRows,\n    rowsById: groupedRowsById,\n    toggleGroupBy,\n    setGroupBy,\n  })\n}\n\nfunction prepareRow(row) {\n  row.allCells.forEach(cell => {\n    // Grouped cells are in the groupBy and the pivot cell for the row\n    cell.isGrouped = cell.column.isGrouped && cell.column.id === row.groupByID\n    // Placeholder cells are any columns in the groupBy that are not grouped\n    cell.isPlaceholder = !cell.isGrouped && cell.column.isGrouped\n    // Aggregated cells are not grouped, not repeated, but still have subRows\n    cell.isAggregated =\n      !cell.isGrouped && !cell.isPlaceholder && row.subRows?.length\n  })\n}\n\nexport function defaultGroupByFn(rows, columnId) {\n  return rows.reduce((prev, row, i) => {\n    // TODO: Might want to implement a key serializer here so\n    // irregular column values can still be grouped if needed?\n    const resKey = `${row.values[columnId]}`\n    prev[resKey] = Array.isArray(prev[resKey]) ? prev[resKey] : []\n    prev[resKey].push(row)\n    return prev\n  }, {})\n}\n","const reSplitAlphaNumeric = /([0-9]+)/gm\n\n// Mixed sorting is slow, but very inclusive of many edge cases.\n// It handles numbers, mixed alphanumeric combinations, and even\n// null, undefined, and Infinity\nexport const alphanumeric = (rowA, rowB, columnId) => {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  // Force to strings (or \"\" for unsupported types)\n  a = toString(a)\n  b = toString(b)\n\n  // Split on number groups, but keep the delimiter\n  // Then remove falsey split values\n  a = a.split(reSplitAlphaNumeric).filter(Boolean)\n  b = b.split(reSplitAlphaNumeric).filter(Boolean)\n\n  // While\n  while (a.length && b.length) {\n    let aa = a.shift()\n    let bb = b.shift()\n\n    const an = parseInt(aa, 10)\n    const bn = parseInt(bb, 10)\n\n    const combo = [an, bn].sort()\n\n    // Both are string\n    if (isNaN(combo[0])) {\n      if (aa > bb) {\n        return 1\n      }\n      if (bb > aa) {\n        return -1\n      }\n      continue\n    }\n\n    // One is a string, one is a number\n    if (isNaN(combo[1])) {\n      return isNaN(an) ? -1 : 1\n    }\n\n    // Both are numbers\n    if (an > bn) {\n      return 1\n    }\n    if (bn > an) {\n      return -1\n    }\n  }\n\n  return a.length - b.length\n}\nexport function datetime(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  a = a.getTime()\n  b = b.getTime()\n\n  return compareBasic(a, b)\n}\n\nexport function basic(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  return compareBasic(a, b)\n}\n\nexport function string(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  a = a.split('').filter(Boolean)\n  b = b.split('').filter(Boolean)\n\n  while (a.length && b.length) {\n    let aa = a.shift()\n    let bb = b.shift()\n\n    let alower = aa.toLowerCase()\n    let blower = bb.toLowerCase()\n\n    // Case insensitive comparison until characters match\n    if (alower > blower) {\n      return 1\n    }\n    if (blower > alower) {\n      return -1\n    }\n    // If lowercase characters are identical\n    if (aa > bb) {\n      return 1\n    }\n    if (bb > aa) {\n      return -1\n    }\n    continue\n  }\n\n  return a.length - b.length\n}\n\nexport function number(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  const replaceNonNumeric = /[^0-9.]/gi\n\n  a = Number(String(a).replace(replaceNonNumeric, ''))\n  b = Number(String(b).replace(replaceNonNumeric, ''))\n\n  return compareBasic(a, b)\n}\n\n// Utils\n\nfunction compareBasic(a, b) {\n  return a === b ? 0 : a > b ? 1 : -1\n}\n\nfunction getRowValuesByColumnID(row1, row2, columnId) {\n  return [row1.values[columnId], row2.values[columnId]]\n}\n\nfunction toString(a) {\n  if (typeof a === 'number') {\n    if (isNaN(a) || a === Infinity || a === -Infinity) {\n      return ''\n    }\n    return String(a)\n  }\n  if (typeof a === 'string') {\n    return a\n  }\n  return ''\n}\n","import React from 'react'\n\nimport {\n  actions,\n  ensurePluginOrder,\n  defaultColumn,\n  makePropGetter,\n  useGetLatest,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport { getFirstDefined, isFunction } from '../utils'\n\nimport * as sortTypes from '../sortTypes'\n\n// Actions\nactions.resetSortBy = 'resetSortBy'\nactions.setSortBy = 'setSortBy'\nactions.toggleSortBy = 'toggleSortBy'\nactions.clearSortBy = 'clearSortBy'\n\ndefaultColumn.sortType = 'alphanumeric'\ndefaultColumn.sortDescFirst = false\n\nexport const useSortBy = hooks => {\n  hooks.getSortByToggleProps = [defaultGetSortByToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseSortBy.pluginName = 'useSortBy'\n\nconst defaultGetSortByToggleProps = (props, { instance, column }) => {\n  const { isMultiSortEvent = e => e.shiftKey } = instance\n\n  return [\n    props,\n    {\n      onClick: column.canSort\n        ? e => {\n            e.persist()\n            column.toggleSortBy(\n              undefined,\n              !instance.disableMultiSort && isMultiSortEvent(e)\n            )\n          }\n        : undefined,\n      style: {\n        cursor: column.canSort ? 'pointer' : undefined,\n      },\n      title: column.canSort ? 'Toggle SortBy' : undefined,\n    },\n  ]\n}\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      sortBy: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetSortBy) {\n    return {\n      ...state,\n      sortBy: instance.initialState.sortBy || [],\n    }\n  }\n\n  if (action.type === actions.clearSortBy) {\n    const { sortBy } = state\n    const newSortBy = sortBy.filter(d => d.id !== action.columnId)\n\n    return {\n      ...state,\n      sortBy: newSortBy,\n    }\n  }\n\n  if (action.type === actions.setSortBy) {\n    const { sortBy } = action\n    return {\n      ...state,\n      sortBy,\n    }\n  }\n\n  if (action.type === actions.toggleSortBy) {\n    const { columnId, desc, multi } = action\n\n    const {\n      allColumns,\n      disableMultiSort,\n      disableSortRemove,\n      disableMultiRemove,\n      maxMultiSortColCount = Number.MAX_SAFE_INTEGER,\n    } = instance\n\n    const { sortBy } = state\n\n    // Find the column for this columnId\n    const column = allColumns.find(d => d.id === columnId)\n    const { sortDescFirst } = column\n\n    // Find any existing sortBy for this column\n    const existingSortBy = sortBy.find(d => d.id === columnId)\n    const existingIndex = sortBy.findIndex(d => d.id === columnId)\n    const hasDescDefined = typeof desc !== 'undefined' && desc !== null\n\n    let newSortBy = []\n\n    // What should we do with this sort action?\n    let sortAction\n\n    if (!disableMultiSort && multi) {\n      if (existingSortBy) {\n        sortAction = 'toggle'\n      } else {\n        sortAction = 'add'\n      }\n    } else {\n      // Normal mode\n      if (existingIndex !== sortBy.length - 1 || sortBy.length !== 1) {\n        sortAction = 'replace'\n      } else if (existingSortBy) {\n        sortAction = 'toggle'\n      } else {\n        sortAction = 'replace'\n      }\n    }\n\n    // Handle toggle states that will remove the sortBy\n    if (\n      sortAction === 'toggle' && // Must be toggling\n      !disableSortRemove && // If disableSortRemove, disable in general\n      !hasDescDefined && // Must not be setting desc\n      (multi ? !disableMultiRemove : true) && // If multi, don't allow if disableMultiRemove\n      ((existingSortBy && // Finally, detect if it should indeed be removed\n        existingSortBy.desc &&\n        !sortDescFirst) ||\n        (!existingSortBy.desc && sortDescFirst))\n    ) {\n      sortAction = 'remove'\n    }\n\n    if (sortAction === 'replace') {\n      newSortBy = [\n        {\n          id: columnId,\n          desc: hasDescDefined ? desc : sortDescFirst,\n        },\n      ]\n    } else if (sortAction === 'add') {\n      newSortBy = [\n        ...sortBy,\n        {\n          id: columnId,\n          desc: hasDescDefined ? desc : sortDescFirst,\n        },\n      ]\n      // Take latest n columns\n      newSortBy.splice(0, newSortBy.length - maxMultiSortColCount)\n    } else if (sortAction === 'toggle') {\n      // This flips (or sets) the\n      newSortBy = sortBy.map(d => {\n        if (d.id === columnId) {\n          return {\n            ...d,\n            desc: hasDescDefined ? desc : !existingSortBy.desc,\n          }\n        }\n        return d\n      })\n    } else if (sortAction === 'remove') {\n      newSortBy = sortBy.filter(d => d.id !== columnId)\n    }\n\n    return {\n      ...state,\n      sortBy: newSortBy,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    allColumns,\n    orderByFn = defaultOrderByFn,\n    sortTypes: userSortTypes,\n    manualSortBy,\n    defaultCanSort,\n    disableSortBy,\n    flatHeaders,\n    state: { sortBy },\n    dispatch,\n    plugins,\n    getHooks,\n    autoResetSortBy = true,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useFilters', 'useGlobalFilter', 'useGroupBy', 'usePivotColumns'],\n    'useSortBy'\n  )\n\n  const setSortBy = React.useCallback(\n    sortBy => {\n      dispatch({ type: actions.setSortBy, sortBy })\n    },\n    [dispatch]\n  )\n\n  // Updates sorting based on a columnId, desc flag and multi flag\n  const toggleSortBy = React.useCallback(\n    (columnId, desc, multi) => {\n      dispatch({ type: actions.toggleSortBy, columnId, desc, multi })\n    },\n    [dispatch]\n  )\n\n  // use reference to avoid memory leak in #1608\n  const getInstance = useGetLatest(instance)\n\n  // Add the getSortByToggleProps method to columns and headers\n  flatHeaders.forEach(column => {\n    const {\n      accessor,\n      canSort: defaultColumnCanSort,\n      disableSortBy: columnDisableSortBy,\n      id,\n    } = column\n\n    const canSort = accessor\n      ? getFirstDefined(\n          columnDisableSortBy === true ? false : undefined,\n          disableSortBy === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(defaultCanSort, defaultColumnCanSort, false)\n\n    column.canSort = canSort\n\n    if (column.canSort) {\n      column.toggleSortBy = (desc, multi) =>\n        toggleSortBy(column.id, desc, multi)\n\n      column.clearSortBy = () => {\n        dispatch({ type: actions.clearSortBy, columnId: column.id })\n      }\n    }\n\n    column.getSortByToggleProps = makePropGetter(\n      getHooks().getSortByToggleProps,\n      {\n        instance: getInstance(),\n        column,\n      }\n    )\n\n    const columnSort = sortBy.find(d => d.id === id)\n    column.isSorted = !!columnSort\n    column.sortedIndex = sortBy.findIndex(d => d.id === id)\n    column.isSortedDesc = column.isSorted ? columnSort.desc : undefined\n  })\n\n  const [sortedRows, sortedFlatRows] = React.useMemo(() => {\n    if (manualSortBy || !sortBy.length) {\n      return [rows, flatRows]\n    }\n\n    const sortedFlatRows = []\n\n    // Filter out sortBys that correspond to non existing columns\n    const availableSortBy = sortBy.filter(sort =>\n      allColumns.find(col => col.id === sort.id)\n    )\n\n    const sortData = rows => {\n      // Use the orderByFn to compose multiple sortBy's together.\n      // This will also perform a stable sorting using the row index\n      // if needed.\n      const sortedData = orderByFn(\n        rows,\n        availableSortBy.map(sort => {\n          // Support custom sorting methods for each column\n          const column = allColumns.find(d => d.id === sort.id)\n\n          if (!column) {\n            throw new Error(\n              `React-Table: Could not find a column with id: ${sort.id} while sorting`\n            )\n          }\n\n          const { sortType } = column\n\n          // Look up sortBy functions in this order:\n          // column function\n          // column string lookup on user sortType\n          // column string lookup on built-in sortType\n          // default function\n          // default string lookup on user sortType\n          // default string lookup on built-in sortType\n          const sortMethod =\n            isFunction(sortType) ||\n            (userSortTypes || {})[sortType] ||\n            sortTypes[sortType]\n\n          if (!sortMethod) {\n            throw new Error(\n              `React-Table: Could not find a valid sortType of '${sortType}' for column '${sort.id}'.`\n            )\n          }\n\n          // Return the correct sortFn.\n          // This function should always return in ascending order\n          return (a, b) => sortMethod(a, b, sort.id, sort.desc)\n        }),\n        // Map the directions\n        availableSortBy.map(sort => {\n          // Detect and use the sortInverted option\n          const column = allColumns.find(d => d.id === sort.id)\n\n          if (column && column.sortInverted) {\n            return sort.desc\n          }\n\n          return !sort.desc\n        })\n      )\n\n      // If there are sub-rows, sort them\n      sortedData.forEach(row => {\n        sortedFlatRows.push(row)\n        if (!row.subRows || row.subRows.length === 0) {\n          return\n        }\n        row.subRows = sortData(row.subRows)\n      })\n\n      return sortedData\n    }\n\n    return [sortData(rows), sortedFlatRows]\n  }, [\n    manualSortBy,\n    sortBy,\n    rows,\n    flatRows,\n    allColumns,\n    orderByFn,\n    userSortTypes,\n  ])\n\n  const getAutoResetSortBy = useGetLatest(autoResetSortBy)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetSortBy()) {\n      dispatch({ type: actions.resetSortBy })\n    }\n  }, [manualSortBy ? null : data])\n\n  Object.assign(instance, {\n    preSortedRows: rows,\n    preSortedFlatRows: flatRows,\n    sortedRows,\n    sortedFlatRows,\n    rows: sortedRows,\n    flatRows: sortedFlatRows,\n    setSortBy,\n    toggleSortBy,\n  })\n}\n\nexport function defaultOrderByFn(arr, funcs, dirs) {\n  return [...arr].sort((rowA, rowB) => {\n    for (let i = 0; i < funcs.length; i += 1) {\n      const sortFn = funcs[i]\n      const desc = dirs[i] === false || dirs[i] === 'desc'\n      const sortInt = sortFn(rowA, rowB)\n      if (sortInt !== 0) {\n        return desc ? -sortInt : sortInt\n      }\n    }\n    return dirs[0] ? rowA.index - rowB.index : rowB.index - rowA.index\n  })\n}\n","import React from 'react'\n\n//\n\nimport {\n  actions,\n  ensurePluginOrder,\n  functionalUpdate,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nimport { expandRows } from '../utils'\n\nconst pluginName = 'usePagination'\n\n// Actions\nactions.resetPage = 'resetPage'\nactions.gotoPage = 'gotoPage'\nactions.setPageSize = 'setPageSize'\n\nexport const usePagination = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nusePagination.pluginName = pluginName\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      pageSize: 10,\n      pageIndex: 0,\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetPage) {\n    return {\n      ...state,\n      pageIndex: instance.initialState.pageIndex || 0,\n    }\n  }\n\n  if (action.type === actions.gotoPage) {\n    const { pageCount, page } = instance\n    const newPageIndex = functionalUpdate(action.pageIndex, state.pageIndex)\n    let canNavigate = false\n\n    if (newPageIndex > state.pageIndex) {\n      // next page\n      canNavigate =\n        pageCount === -1\n          ? page.length >= state.pageSize\n          : newPageIndex < pageCount\n    } else if (newPageIndex < state.pageIndex) {\n      // prev page\n      canNavigate = newPageIndex > -1\n    }\n\n    if (!canNavigate) {\n      return state\n    }\n\n    return {\n      ...state,\n      pageIndex: newPageIndex,\n    }\n  }\n\n  if (action.type === actions.setPageSize) {\n    const { pageSize } = action\n    const topRowIndex = state.pageSize * state.pageIndex\n    const pageIndex = Math.floor(topRowIndex / pageSize)\n\n    return {\n      ...state,\n      pageIndex,\n      pageSize,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    rows,\n    autoResetPage = true,\n    manualExpandedKey = 'expanded',\n    plugins,\n    pageCount: userPageCount,\n    paginateExpandedRows = true,\n    expandSubRows = true,\n    state: {\n      pageSize,\n      pageIndex,\n      expanded,\n      globalFilter,\n      filters,\n      groupBy,\n      sortBy,\n    },\n    dispatch,\n    data,\n    manualPagination,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useGlobalFilter', 'useFilters', 'useGroupBy', 'useSortBy', 'useExpanded'],\n    'usePagination'\n  )\n\n  const getAutoResetPage = useGetLatest(autoResetPage)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetPage()) {\n      dispatch({ type: actions.resetPage })\n    }\n  }, [\n    dispatch,\n    manualPagination ? null : data,\n    globalFilter,\n    filters,\n    groupBy,\n    sortBy,\n  ])\n\n  const pageCount = manualPagination\n    ? userPageCount\n    : Math.ceil(rows.length / pageSize)\n\n  const pageOptions = React.useMemo(\n    () =>\n      pageCount > 0\n        ? [...new Array(pageCount)].fill(null).map((d, i) => i)\n        : [],\n    [pageCount]\n  )\n\n  const page = React.useMemo(() => {\n    let page\n\n    if (manualPagination) {\n      page = rows\n    } else {\n      const pageStart = pageSize * pageIndex\n      const pageEnd = pageStart + pageSize\n\n      page = rows.slice(pageStart, pageEnd)\n    }\n\n    if (paginateExpandedRows) {\n      return page\n    }\n\n    return expandRows(page, { manualExpandedKey, expanded, expandSubRows })\n  }, [\n    expandSubRows,\n    expanded,\n    manualExpandedKey,\n    manualPagination,\n    pageIndex,\n    pageSize,\n    paginateExpandedRows,\n    rows,\n  ])\n\n  const canPreviousPage = pageIndex > 0\n  const canNextPage =\n    pageCount === -1 ? page.length >= pageSize : pageIndex < pageCount - 1\n\n  const gotoPage = React.useCallback(\n    pageIndex => {\n      dispatch({ type: actions.gotoPage, pageIndex })\n    },\n    [dispatch]\n  )\n\n  const previousPage = React.useCallback(() => {\n    return gotoPage(old => old - 1)\n  }, [gotoPage])\n\n  const nextPage = React.useCallback(() => {\n    return gotoPage(old => old + 1)\n  }, [gotoPage])\n\n  const setPageSize = React.useCallback(\n    pageSize => {\n      dispatch({ type: actions.setPageSize, pageSize })\n    },\n    [dispatch]\n  )\n\n  Object.assign(instance, {\n    pageOptions,\n    pageCount,\n    page,\n    canPreviousPage,\n    canNextPage,\n    gotoPage,\n    previousPage,\n    nextPage,\n    setPageSize,\n  })\n}\n","/* istanbul ignore file */\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nimport { flattenColumns, getFirstDefined } from '../utils'\n\n// Actions\nactions.resetPivot = 'resetPivot'\nactions.togglePivot = 'togglePivot'\n\nexport const _UNSTABLE_usePivotColumns = hooks => {\n  hooks.getPivotToggleProps = [defaultGetPivotToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstanceAfterData.push(useInstanceAfterData)\n  hooks.allColumns.push(allColumns)\n  hooks.accessValue.push(accessValue)\n  hooks.materializedColumns.push(materializedColumns)\n  hooks.materializedColumnsDeps.push(materializedColumnsDeps)\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.visibleColumnsDeps.push(visibleColumnsDeps)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\n_UNSTABLE_usePivotColumns.pluginName = 'usePivotColumns'\n\nconst defaultPivotColumns = []\n\nconst defaultGetPivotToggleProps = (props, { header }) => [\n  props,\n  {\n    onClick: header.canPivot\n      ? e => {\n          e.persist()\n          header.togglePivot()\n        }\n      : undefined,\n    style: {\n      cursor: header.canPivot ? 'pointer' : undefined,\n    },\n    title: 'Toggle Pivot',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      pivotColumns: defaultPivotColumns,\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetPivot) {\n    return {\n      ...state,\n      pivotColumns: instance.initialState.pivotColumns || defaultPivotColumns,\n    }\n  }\n\n  if (action.type === actions.togglePivot) {\n    const { columnId, value: setPivot } = action\n\n    const resolvedPivot =\n      typeof setPivot !== 'undefined'\n        ? setPivot\n        : !state.pivotColumns.includes(columnId)\n\n    if (resolvedPivot) {\n      return {\n        ...state,\n        pivotColumns: [...state.pivotColumns, columnId],\n      }\n    }\n\n    return {\n      ...state,\n      pivotColumns: state.pivotColumns.filter(d => d !== columnId),\n    }\n  }\n}\n\nfunction useInstanceAfterData(instance) {\n  instance.allColumns.forEach(column => {\n    column.isPivotSource = instance.state.pivotColumns.includes(column.id)\n  })\n}\n\nfunction allColumns(columns, { instance }) {\n  columns.forEach(column => {\n    column.isPivotSource = instance.state.pivotColumns.includes(column.id)\n    column.uniqueValues = new Set()\n  })\n  return columns\n}\n\nfunction accessValue(value, { column }) {\n  if (column.uniqueValues && typeof value !== 'undefined') {\n    column.uniqueValues.add(value)\n  }\n  return value\n}\n\nfunction materializedColumns(materialized, { instance }) {\n  const { allColumns, state } = instance\n\n  if (!state.pivotColumns.length || !state.groupBy || !state.groupBy.length) {\n    return materialized\n  }\n\n  const pivotColumns = state.pivotColumns\n    .map(id => allColumns.find(d => d.id === id))\n    .filter(Boolean)\n\n  const sourceColumns = allColumns.filter(\n    d =>\n      !d.isPivotSource &&\n      !state.groupBy.includes(d.id) &&\n      !state.pivotColumns.includes(d.id)\n  )\n\n  const buildPivotColumns = (depth = 0, parent, pivotFilters = []) => {\n    const pivotColumn = pivotColumns[depth]\n\n    if (!pivotColumn) {\n      return sourceColumns.map(sourceColumn => {\n        // TODO: We could offer support here for renesting pivoted\n        // columns inside copies of their header groups. For now,\n        // that seems like it would be (1) overkill on nesting, considering\n        // you already get nesting for every pivot level and (2)\n        // really hard. :)\n\n        return {\n          ...sourceColumn,\n          canPivot: false,\n          isPivoted: true,\n          parent,\n          depth: depth,\n          id: `${parent ? `${parent.id}.${sourceColumn.id}` : sourceColumn.id}`,\n          accessor: (originalRow, i, row) => {\n            if (pivotFilters.every(filter => filter(row))) {\n              return row.values[sourceColumn.id]\n            }\n          },\n        }\n      })\n    }\n\n    const uniqueValues = Array.from(pivotColumn.uniqueValues).sort()\n\n    return uniqueValues.map(uniqueValue => {\n      const columnGroup = {\n        ...pivotColumn,\n        Header:\n          pivotColumn.PivotHeader || typeof pivotColumn.header === 'string'\n            ? `${pivotColumn.Header}: ${uniqueValue}`\n            : uniqueValue,\n        isPivotGroup: true,\n        parent,\n        depth,\n        id: parent\n          ? `${parent.id}.${pivotColumn.id}.${uniqueValue}`\n          : `${pivotColumn.id}.${uniqueValue}`,\n        pivotValue: uniqueValue,\n      }\n\n      columnGroup.columns = buildPivotColumns(depth + 1, columnGroup, [\n        ...pivotFilters,\n        row => row.values[pivotColumn.id] === uniqueValue,\n      ])\n\n      return columnGroup\n    })\n  }\n\n  const newMaterialized = flattenColumns(buildPivotColumns())\n\n  return [...materialized, ...newMaterialized]\n}\n\nfunction materializedColumnsDeps(\n  deps,\n  {\n    instance: {\n      state: { pivotColumns, groupBy },\n    },\n  }\n) {\n  return [...deps, pivotColumns, groupBy]\n}\n\nfunction visibleColumns(visibleColumns, { instance: { state } }) {\n  visibleColumns = visibleColumns.filter(d => !d.isPivotSource)\n\n  if (state.pivotColumns.length && state.groupBy && state.groupBy.length) {\n    visibleColumns = visibleColumns.filter(\n      column => column.isGrouped || column.isPivoted\n    )\n  }\n\n  return visibleColumns\n}\n\nfunction visibleColumnsDeps(deps, { instance }) {\n  return [...deps, instance.state.pivotColumns, instance.state.groupBy]\n}\n\nfunction useInstance(instance) {\n  const {\n    columns,\n    allColumns,\n    flatHeaders,\n    // pivotFn = defaultPivotFn,\n    // manualPivot,\n    getHooks,\n    plugins,\n    dispatch,\n    autoResetPivot = true,\n    manaulPivot,\n    disablePivot,\n    defaultCanPivot,\n  } = instance\n\n  ensurePluginOrder(plugins, ['useGroupBy'], 'usePivotColumns')\n\n  const getInstance = useGetLatest(instance)\n\n  allColumns.forEach(column => {\n    const {\n      accessor,\n      defaultPivot: defaultColumnPivot,\n      disablePivot: columnDisablePivot,\n    } = column\n\n    column.canPivot = accessor\n      ? getFirstDefined(\n          column.canPivot,\n          columnDisablePivot === true ? false : undefined,\n          disablePivot === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(\n          column.canPivot,\n          defaultColumnPivot,\n          defaultCanPivot,\n          false\n        )\n\n    if (column.canPivot) {\n      column.togglePivot = () => instance.togglePivot(column.id)\n    }\n\n    column.Aggregated = column.Aggregated || column.Cell\n  })\n\n  const togglePivot = (columnId, value) => {\n    dispatch({ type: actions.togglePivot, columnId, value })\n  }\n\n  flatHeaders.forEach(header => {\n    header.getPivotToggleProps = makePropGetter(\n      getHooks().getPivotToggleProps,\n      {\n        instance: getInstance(),\n        header,\n      }\n    )\n  })\n\n  const getAutoResetPivot = useGetLatest(autoResetPivot)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetPivot()) {\n      dispatch({ type: actions.resetPivot })\n    }\n  }, [dispatch, manaulPivot ? null : columns])\n\n  Object.assign(instance, {\n    togglePivot,\n  })\n}\n\nfunction prepareRow(row) {\n  row.allCells.forEach(cell => {\n    // Grouped cells are in the pivotColumns and the pivot cell for the row\n    cell.isPivoted = cell.column.isPivoted\n  })\n}\n","import React from 'react'\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useGetLatest,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nconst pluginName = 'useRowSelect'\n\n// Actions\nactions.resetSelectedRows = 'resetSelectedRows'\nactions.toggleAllRowsSelected = 'toggleAllRowsSelected'\nactions.toggleRowSelected = 'toggleRowSelected'\nactions.toggleAllPageRowsSelected = 'toggleAllPageRowsSelected'\n\nexport const useRowSelect = hooks => {\n  hooks.getToggleRowSelectedProps = [defaultGetToggleRowSelectedProps]\n  hooks.getToggleAllRowsSelectedProps = [defaultGetToggleAllRowsSelectedProps]\n  hooks.getToggleAllPageRowsSelectedProps = [\n    defaultGetToggleAllPageRowsSelectedProps,\n  ]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseRowSelect.pluginName = pluginName\n\nconst defaultGetToggleRowSelectedProps = (props, { instance, row }) => {\n  const { manualRowSelectedKey = 'isSelected' } = instance\n  let checked = false\n\n  if (row.original && row.original[manualRowSelectedKey]) {\n    checked = true\n  } else {\n    checked = row.isSelected\n  }\n\n  return [\n    props,\n    {\n      onChange: e => {\n        row.toggleRowSelected(e.target.checked)\n      },\n      style: {\n        cursor: 'pointer',\n      },\n      checked,\n      title: 'Toggle Row Selected',\n      indeterminate: row.isSomeSelected,\n    },\n  ]\n}\n\nconst defaultGetToggleAllRowsSelectedProps = (props, { instance }) => [\n  props,\n  {\n    onChange: e => {\n      instance.toggleAllRowsSelected(e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: instance.isAllRowsSelected,\n    title: 'Toggle All Rows Selected',\n    indeterminate: Boolean(\n      !instance.isAllRowsSelected &&\n        Object.keys(instance.state.selectedRowIds).length\n    ),\n  },\n]\n\nconst defaultGetToggleAllPageRowsSelectedProps = (props, { instance }) => [\n  props,\n  {\n    onChange(e) {\n      instance.toggleAllPageRowsSelected(e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: instance.isAllPageRowsSelected,\n    title: 'Toggle All Current Page Rows Selected',\n    indeterminate: Boolean(\n      !instance.isAllPageRowsSelected &&\n        instance.page.some(({ id }) => instance.state.selectedRowIds[id])\n    ),\n  },\n]\n\n// eslint-disable-next-line max-params\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      selectedRowIds: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetSelectedRows) {\n    return {\n      ...state,\n      selectedRowIds: instance.initialState.selectedRowIds || {},\n    }\n  }\n\n  if (action.type === actions.toggleAllRowsSelected) {\n    const { value: setSelected } = action\n    const {\n      isAllRowsSelected,\n      rowsById,\n      nonGroupedRowsById = rowsById,\n    } = instance\n\n    const selectAll =\n      typeof setSelected !== 'undefined' ? setSelected : !isAllRowsSelected\n\n    // Only remove/add the rows that are visible on the screen\n    //  Leave all the other rows that are selected alone.\n    const selectedRowIds = Object.assign({}, state.selectedRowIds)\n\n    if (selectAll) {\n      Object.keys(nonGroupedRowsById).forEach(rowId => {\n        selectedRowIds[rowId] = true\n      })\n    } else {\n      Object.keys(nonGroupedRowsById).forEach(rowId => {\n        delete selectedRowIds[rowId]\n      })\n    }\n\n    return {\n      ...state,\n      selectedRowIds,\n    }\n  }\n\n  if (action.type === actions.toggleRowSelected) {\n    const { id, value: setSelected } = action\n    const { rowsById, selectSubRows = true, getSubRows } = instance\n    const isSelected = state.selectedRowIds[id]\n    const shouldExist =\n      typeof setSelected !== 'undefined' ? setSelected : !isSelected\n\n    if (isSelected === shouldExist) {\n      return state\n    }\n\n    const newSelectedRowIds = { ...state.selectedRowIds }\n\n    const handleRowById = id => {\n      const row = rowsById[id]\n\n      if (!row.isGrouped) {\n        if (shouldExist) {\n          newSelectedRowIds[id] = true\n        } else {\n          delete newSelectedRowIds[id]\n        }\n      }\n\n      if (selectSubRows && getSubRows(row)) {\n        return getSubRows(row).forEach(row => handleRowById(row.id))\n      }\n    }\n\n    handleRowById(id)\n\n    return {\n      ...state,\n      selectedRowIds: newSelectedRowIds,\n    }\n  }\n\n  if (action.type === actions.toggleAllPageRowsSelected) {\n    const { value: setSelected } = action\n    const {\n      page,\n      rowsById,\n      selectSubRows = true,\n      isAllPageRowsSelected,\n      getSubRows,\n    } = instance\n\n    const selectAll =\n      typeof setSelected !== 'undefined' ? setSelected : !isAllPageRowsSelected\n\n    const newSelectedRowIds = { ...state.selectedRowIds }\n\n    const handleRowById = id => {\n      const row = rowsById[id]\n\n      if (!row.isGrouped) {\n        if (selectAll) {\n          newSelectedRowIds[id] = true\n        } else {\n          delete newSelectedRowIds[id]\n        }\n      }\n\n      if (selectSubRows && getSubRows(row)) {\n        return getSubRows(row).forEach(row => handleRowById(row.id))\n      }\n    }\n\n    page.forEach(row => handleRowById(row.id))\n\n    return {\n      ...state,\n      selectedRowIds: newSelectedRowIds,\n    }\n  }\n  return state\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    getHooks,\n    plugins,\n    rowsById,\n    nonGroupedRowsById = rowsById,\n    autoResetSelectedRows = true,\n    state: { selectedRowIds },\n    selectSubRows = true,\n    dispatch,\n    page,\n    getSubRows,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useFilters', 'useGroupBy', 'useSortBy', 'useExpanded', 'usePagination'],\n    'useRowSelect'\n  )\n\n  const selectedFlatRows = React.useMemo(() => {\n    const selectedFlatRows = []\n\n    rows.forEach(row => {\n      const isSelected = selectSubRows\n        ? getRowIsSelected(row, selectedRowIds, getSubRows)\n        : !!selectedRowIds[row.id]\n      row.isSelected = !!isSelected\n      row.isSomeSelected = isSelected === null\n\n      if (isSelected) {\n        selectedFlatRows.push(row)\n      }\n    })\n\n    return selectedFlatRows\n  }, [rows, selectSubRows, selectedRowIds, getSubRows])\n\n  let isAllRowsSelected = Boolean(\n    Object.keys(nonGroupedRowsById).length && Object.keys(selectedRowIds).length\n  )\n\n  let isAllPageRowsSelected = isAllRowsSelected\n\n  if (isAllRowsSelected) {\n    if (Object.keys(nonGroupedRowsById).some(id => !selectedRowIds[id])) {\n      isAllRowsSelected = false\n    }\n  }\n\n  if (!isAllRowsSelected) {\n    if (page && page.length && page.some(({ id }) => !selectedRowIds[id])) {\n      isAllPageRowsSelected = false\n    }\n  }\n\n  const getAutoResetSelectedRows = useGetLatest(autoResetSelectedRows)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetSelectedRows()) {\n      dispatch({ type: actions.resetSelectedRows })\n    }\n  }, [dispatch, data])\n\n  const toggleAllRowsSelected = React.useCallback(\n    value => dispatch({ type: actions.toggleAllRowsSelected, value }),\n    [dispatch]\n  )\n\n  const toggleAllPageRowsSelected = React.useCallback(\n    value => dispatch({ type: actions.toggleAllPageRowsSelected, value }),\n    [dispatch]\n  )\n\n  const toggleRowSelected = React.useCallback(\n    (id, value) => dispatch({ type: actions.toggleRowSelected, id, value }),\n    [dispatch]\n  )\n\n  const getInstance = useGetLatest(instance)\n\n  const getToggleAllRowsSelectedProps = makePropGetter(\n    getHooks().getToggleAllRowsSelectedProps,\n    { instance: getInstance() }\n  )\n\n  const getToggleAllPageRowsSelectedProps = makePropGetter(\n    getHooks().getToggleAllPageRowsSelectedProps,\n    { instance: getInstance() }\n  )\n\n  Object.assign(instance, {\n    selectedFlatRows,\n    isAllRowsSelected,\n    isAllPageRowsSelected,\n    toggleRowSelected,\n    toggleAllRowsSelected,\n    getToggleAllRowsSelectedProps,\n    getToggleAllPageRowsSelectedProps,\n    toggleAllPageRowsSelected,\n  })\n}\n\nfunction prepareRow(row, { instance }) {\n  row.toggleRowSelected = set => instance.toggleRowSelected(row.id, set)\n\n  row.getToggleRowSelectedProps = makePropGetter(\n    instance.getHooks().getToggleRowSelectedProps,\n    { instance: instance, row }\n  )\n}\n\nfunction getRowIsSelected(row, selectedRowIds, getSubRows) {\n  if (selectedRowIds[row.id]) {\n    return true\n  }\n\n  const subRows = getSubRows(row)\n\n  if (subRows && subRows.length) {\n    let allChildrenSelected = true\n    let someSelected = false\n\n    subRows.forEach(subRow => {\n      // Bail out early if we know both of these\n      if (someSelected && !allChildrenSelected) {\n        return\n      }\n\n      if (getRowIsSelected(subRow, selectedRowIds, getSubRows)) {\n        someSelected = true\n      } else {\n        allChildrenSelected = false\n      }\n    })\n    return allChildrenSelected ? true : someSelected ? null : false\n  }\n\n  return false\n}\n","import React from 'react'\n\nimport {\n  actions,\n  functionalUpdate,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nconst defaultInitialRowStateAccessor = row => ({})\nconst defaultInitialCellStateAccessor = cell => ({})\n\n// Actions\nactions.setRowState = 'setRowState'\nactions.setCellState = 'setCellState'\nactions.resetRowState = 'resetRowState'\n\nexport const useRowState = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseRowState.pluginName = 'useRowState'\n\nfunction reducer(state, action, previousState, instance) {\n  const {\n    initialRowStateAccessor = defaultInitialRowStateAccessor,\n    initialCellStateAccessor = defaultInitialCellStateAccessor,\n    rowsById,\n  } = instance\n\n  if (action.type === actions.init) {\n    return {\n      rowState: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetRowState) {\n    return {\n      ...state,\n      rowState: instance.initialState.rowState || {},\n    }\n  }\n\n  if (action.type === actions.setRowState) {\n    const { rowId, value } = action\n\n    const oldRowState =\n      typeof state.rowState[rowId] !== 'undefined'\n        ? state.rowState[rowId]\n        : initialRowStateAccessor(rowsById[rowId])\n\n    return {\n      ...state,\n      rowState: {\n        ...state.rowState,\n        [rowId]: functionalUpdate(value, oldRowState),\n      },\n    }\n  }\n\n  if (action.type === actions.setCellState) {\n    const { rowId, columnId, value } = action\n\n    const oldRowState =\n      typeof state.rowState[rowId] !== 'undefined'\n        ? state.rowState[rowId]\n        : initialRowStateAccessor(rowsById[rowId])\n\n    const oldCellState =\n      typeof oldRowState?.cellState?.[columnId] !== 'undefined'\n        ? oldRowState.cellState[columnId]\n        : initialCellStateAccessor(\n            rowsById[rowId]?.cells?.find(cell => cell.column.id === columnId)\n          )\n\n    return {\n      ...state,\n      rowState: {\n        ...state.rowState,\n        [rowId]: {\n          ...oldRowState,\n          cellState: {\n            ...(oldRowState.cellState || {}),\n            [columnId]: functionalUpdate(value, oldCellState),\n          },\n        },\n      },\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const { autoResetRowState = true, data, dispatch } = instance\n\n  const setRowState = React.useCallback(\n    (rowId, value) =>\n      dispatch({\n        type: actions.setRowState,\n        rowId,\n        value,\n      }),\n    [dispatch]\n  )\n\n  const setCellState = React.useCallback(\n    (rowId, columnId, value) =>\n      dispatch({\n        type: actions.setCellState,\n        rowId,\n        columnId,\n        value,\n      }),\n    [dispatch]\n  )\n\n  const getAutoResetRowState = useGetLatest(autoResetRowState)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetRowState()) {\n      dispatch({ type: actions.resetRowState })\n    }\n  }, [data])\n\n  Object.assign(instance, {\n    setRowState,\n    setCellState,\n  })\n}\n\nfunction prepareRow(row, { instance }) {\n  const {\n    initialRowStateAccessor = defaultInitialRowStateAccessor,\n    initialCellStateAccessor = defaultInitialCellStateAccessor,\n    state: { rowState },\n  } = instance\n\n  if (row) {\n    row.state =\n      typeof rowState[row.id] !== 'undefined'\n        ? rowState[row.id]\n        : initialRowStateAccessor(row)\n\n    row.setState = updater => {\n      return instance.setRowState(row.id, updater)\n    }\n\n    row.cells.forEach(cell => {\n      if (!row.state.cellState) {\n        row.state.cellState = {}\n      }\n\n      cell.state =\n        typeof row.state.cellState[cell.column.id] !== 'undefined'\n          ? row.state.cellState[cell.column.id]\n          : initialCellStateAccessor(cell)\n\n      cell.setState = updater => {\n        return instance.setCellState(row.id, cell.column.id, updater)\n      }\n    })\n  }\n}\n","import React from 'react'\n\nimport { functionalUpdate, actions } from '../publicUtils'\n\n// Actions\nactions.resetColumnOrder = 'resetColumnOrder'\nactions.setColumnOrder = 'setColumnOrder'\n\nexport const useColumnOrder = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.visibleColumnsDeps.push((deps, { instance }) => {\n    return [...deps, instance.state.columnOrder]\n  })\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.useInstance.push(useInstance)\n}\n\nuseColumnOrder.pluginName = 'useColumnOrder'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      columnOrder: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetColumnOrder) {\n    return {\n      ...state,\n      columnOrder: instance.initialState.columnOrder || [],\n    }\n  }\n\n  if (action.type === actions.setColumnOrder) {\n    return {\n      ...state,\n      columnOrder: functionalUpdate(action.columnOrder, state.columnOrder),\n    }\n  }\n}\n\nfunction visibleColumns(\n  columns,\n  {\n    instance: {\n      state: { columnOrder },\n    },\n  }\n) {\n  // If there is no order, return the normal columns\n  if (!columnOrder || !columnOrder.length) {\n    return columns\n  }\n\n  const columnOrderCopy = [...columnOrder]\n\n  // If there is an order, make a copy of the columns\n  const columnsCopy = [...columns]\n\n  // And make a new ordered array of the columns\n  const columnsInOrder = []\n\n  // Loop over the columns and place them in order into the new array\n  while (columnsCopy.length && columnOrderCopy.length) {\n    const targetColumnId = columnOrderCopy.shift()\n    const foundIndex = columnsCopy.findIndex(d => d.id === targetColumnId)\n    if (foundIndex > -1) {\n      columnsInOrder.push(columnsCopy.splice(foundIndex, 1)[0])\n    }\n  }\n\n  // If there are any columns left, add them to the end\n  return [...columnsInOrder, ...columnsCopy]\n}\n\nfunction useInstance(instance) {\n  const { dispatch } = instance\n\n  instance.setColumnOrder = React.useCallback(\n    columnOrder => {\n      return dispatch({ type: actions.setColumnOrder, columnOrder })\n    },\n    [dispatch]\n  )\n}\n","import React from 'react'\n\nimport {\n  actions,\n  defaultColumn,\n  makePropGetter,\n  useGetLatest,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport { getFirstDefined, passiveEventSupported } from '../utils'\n\n// Default Column\ndefaultColumn.canResize = true\n\n// Actions\nactions.columnStartResizing = 'columnStartResizing'\nactions.columnResizing = 'columnResizing'\nactions.columnDoneResizing = 'columnDoneResizing'\nactions.resetResize = 'resetResize'\n\nexport const useResizeColumns = hooks => {\n  hooks.getResizerProps = [defaultGetResizerProps]\n  hooks.getHeaderProps.push({\n    style: {\n      position: 'relative',\n    },\n  })\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.useInstanceBeforeDimensions.push(useInstanceBeforeDimensions)\n}\n\nconst defaultGetResizerProps = (props, { instance, header }) => {\n  const { dispatch } = instance\n\n  const onResizeStart = (e, header) => {\n    let isTouchEvent = false\n    if (e.type === 'touchstart') {\n      // lets not respond to multiple touches (e.g. 2 or 3 fingers)\n      if (e.touches && e.touches.length > 1) {\n        return\n      }\n      isTouchEvent = true\n    }\n    const headersToResize = getLeafHeaders(header)\n    const headerIdWidths = headersToResize.map(d => [d.id, d.totalWidth])\n\n    const clientX = isTouchEvent ? Math.round(e.touches[0].clientX) : e.clientX\n\n    const dispatchMove = clientXPos => {\n      dispatch({ type: actions.columnResizing, clientX: clientXPos })\n    }\n    const dispatchEnd = () => dispatch({ type: actions.columnDoneResizing })\n\n    const handlersAndEvents = {\n      mouse: {\n        moveEvent: 'mousemove',\n        moveHandler: e => dispatchMove(e.clientX),\n        upEvent: 'mouseup',\n        upHandler: e => {\n          document.removeEventListener(\n            'mousemove',\n            handlersAndEvents.mouse.moveHandler\n          )\n          document.removeEventListener(\n            'mouseup',\n            handlersAndEvents.mouse.upHandler\n          )\n          dispatchEnd()\n        },\n      },\n      touch: {\n        moveEvent: 'touchmove',\n        moveHandler: e => {\n          if (e.cancelable) {\n            e.preventDefault()\n            e.stopPropagation()\n          }\n          dispatchMove(e.touches[0].clientX)\n          return false\n        },\n        upEvent: 'touchend',\n        upHandler: e => {\n          document.removeEventListener(\n            handlersAndEvents.touch.moveEvent,\n            handlersAndEvents.touch.moveHandler\n          )\n          document.removeEventListener(\n            handlersAndEvents.touch.upEvent,\n            handlersAndEvents.touch.moveHandler\n          )\n          dispatchEnd()\n        },\n      },\n    }\n\n    const events = isTouchEvent\n      ? handlersAndEvents.touch\n      : handlersAndEvents.mouse\n    const passiveIfSupported = passiveEventSupported()\n      ? { passive: false }\n      : false\n    document.addEventListener(\n      events.moveEvent,\n      events.moveHandler,\n      passiveIfSupported\n    )\n    document.addEventListener(\n      events.upEvent,\n      events.upHandler,\n      passiveIfSupported\n    )\n\n    dispatch({\n      type: actions.columnStartResizing,\n      columnId: header.id,\n      columnWidth: header.totalWidth,\n      headerIdWidths,\n      clientX,\n    })\n  }\n\n  return [\n    props,\n    {\n      onMouseDown: e => e.persist() || onResizeStart(e, header),\n      onTouchStart: e => e.persist() || onResizeStart(e, header),\n      style: {\n        cursor: 'col-resize',\n      },\n      draggable: false,\n      role: 'separator',\n    },\n  ]\n}\n\nuseResizeColumns.pluginName = 'useResizeColumns'\n\nfunction reducer(state, action) {\n  if (action.type === actions.init) {\n    return {\n      columnResizing: {\n        columnWidths: {},\n      },\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetResize) {\n    return {\n      ...state,\n      columnResizing: {\n        columnWidths: {},\n      },\n    }\n  }\n\n  if (action.type === actions.columnStartResizing) {\n    const { clientX, columnId, columnWidth, headerIdWidths } = action\n\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        startX: clientX,\n        headerIdWidths,\n        columnWidth,\n        isResizingColumn: columnId,\n      },\n    }\n  }\n\n  if (action.type === actions.columnResizing) {\n    const { clientX } = action\n    const { startX, columnWidth, headerIdWidths = [] } = state.columnResizing\n\n    const deltaX = clientX - startX\n    const percentageDeltaX = deltaX / columnWidth\n\n    const newColumnWidths = {}\n\n    headerIdWidths.forEach(([headerId, headerWidth]) => {\n      newColumnWidths[headerId] = Math.max(\n        headerWidth + headerWidth * percentageDeltaX,\n        0\n      )\n    })\n\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        columnWidths: {\n          ...state.columnResizing.columnWidths,\n          ...newColumnWidths,\n        },\n      },\n    }\n  }\n\n  if (action.type === actions.columnDoneResizing) {\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        startX: null,\n        isResizingColumn: null,\n      },\n    }\n  }\n}\n\nconst useInstanceBeforeDimensions = instance => {\n  const {\n    flatHeaders,\n    disableResizing,\n    getHooks,\n    state: { columnResizing },\n  } = instance\n\n  const getInstance = useGetLatest(instance)\n\n  flatHeaders.forEach(header => {\n    const canResize = getFirstDefined(\n      header.disableResizing === true ? false : undefined,\n      disableResizing === true ? false : undefined,\n      true\n    )\n\n    header.canResize = canResize\n    header.width =\n      columnResizing.columnWidths[header.id] ||\n      header.originalWidth ||\n      header.width\n    header.isResizing = columnResizing.isResizingColumn === header.id\n\n    if (canResize) {\n      header.getResizerProps = makePropGetter(getHooks().getResizerProps, {\n        instance: getInstance(),\n        header,\n      })\n    }\n  })\n}\n\nfunction useInstance(instance) {\n  const { plugins, dispatch, autoResetResize = true, columns } = instance\n\n  ensurePluginOrder(plugins, ['useAbsoluteLayout'], 'useResizeColumns')\n\n  const getAutoResetResize = useGetLatest(autoResetResize)\n  useMountedLayoutEffect(() => {\n    if (getAutoResetResize()) {\n      dispatch({ type: actions.resetResize })\n    }\n  }, [columns])\n\n  const resetResizing = React.useCallback(\n    () => dispatch({ type: actions.resetResize }),\n    [dispatch]\n  )\n\n  Object.assign(instance, {\n    resetResizing,\n  })\n}\n\nfunction getLeafHeaders(header) {\n  const leafHeaders = []\n  const recurseHeader = header => {\n    if (header.columns && header.columns.length) {\n      header.columns.map(recurseHeader)\n    }\n    leafHeaders.push(header)\n  }\n  recurseHeader(header)\n  return leafHeaders\n}\n","const cellStyles = {\n  position: 'absolute',\n  top: 0,\n}\n\nexport const useAbsoluteLayout = hooks => {\n  hooks.getTableBodyProps.push(getRowStyles)\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getFooterGroupProps.push(getRowStyles)\n\n  hooks.getHeaderProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${column.totalLeft}px`,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getCellProps.push((props, { cell }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${cell.column.totalLeft}px`,\n        width: `${cell.column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getFooterProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${column.totalLeft}px`,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n}\n\nuseAbsoluteLayout.pluginName = 'useAbsoluteLayout'\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      position: 'relative',\n      width: `${instance.totalColumnsWidth}px`,\n    },\n  },\n]\n","const cellStyles = {\n  display: 'inline-block',\n  boxSizing: 'border-box',\n}\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      display: 'flex',\n      width: `${instance.totalColumnsWidth}px`,\n    },\n  },\n]\n\nexport const useBlockLayout = hooks => {\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getFooterGroupProps.push(getRowStyles)\n\n  hooks.getHeaderProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getCellProps.push((props, { cell }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${cell.column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getFooterProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n}\n\nuseBlockLayout.pluginName = 'useBlockLayout'\n","export function useFlexLayout(hooks) {\n  hooks.getTableProps.push(getTableProps)\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getFooterGroupProps.push(getRowStyles)\n  hooks.getHeaderProps.push(getHeaderProps)\n  hooks.getCellProps.push(getCellProps)\n  hooks.getFooterProps.push(getFooterProps)\n}\n\nuseFlexLayout.pluginName = 'useFlexLayout'\n\nconst getTableProps = (props, { instance }) => [\n  props,\n  {\n    style: {\n      minWidth: `${instance.totalColumnsMinWidth}px`,\n    },\n  },\n]\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      display: 'flex',\n      flex: '1 0 auto',\n      minWidth: `${instance.totalColumnsMinWidth}px`,\n    },\n  },\n]\n\nconst getHeaderProps = (props, { column }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: column.totalFlexWidth\n        ? `${column.totalFlexWidth} 0 auto`\n        : undefined,\n      minWidth: `${column.totalMinWidth}px`,\n      width: `${column.totalWidth}px`,\n    },\n  },\n]\n\nconst getCellProps = (props, { cell }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: `${cell.column.totalFlexWidth} 0 auto`,\n      minWidth: `${cell.column.totalMinWidth}px`,\n      width: `${cell.column.totalWidth}px`,\n    },\n  },\n]\n\nconst getFooterProps = (props, { column }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: column.totalFlexWidth\n        ? `${column.totalFlexWidth} 0 auto`\n        : undefined,\n      minWidth: `${column.totalMinWidth}px`,\n      width: `${column.totalWidth}px`,\n    },\n  },\n]\n","export function useGridLayout(hooks) {\n  hooks.stateReducers.push(reducer)\n  hooks.getTableProps.push(getTableProps)\n  hooks.getHeaderProps.push(getHeaderProps)\n}\n\nuseGridLayout.pluginName = 'useGridLayout'\n\nconst getTableProps = (props, { instance }) => [\n  props,\n  {\n    style: {\n      display: `grid`,\n      gridTemplateColumns: instance.state.gridLayout.columnWidths.map(w => w).join(` `),\n    },\n  },\n]\n\nconst getHeaderProps = (props, { column }) => [\n  props,\n  {\n    id: `header-cell-${column.id}`,\n    style: {\n      position: `sticky` //enables a scroll wrapper to be placed around the table and have sticky headers\n    },\n  },\n]\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === `init`) {\n    return {\n      gridLayout: {\n        columnWidths: instance.columns.map(() => `auto`),\n      },\n      ...state,\n    }\n  }\n\n  if (action.type === `columnStartResizing`) {\n    const { columnId } = action\n    const columnIndex = instance.visibleColumns.findIndex(col => col.id === columnId)\n    const elWidth = getElementWidth(columnId)\n\n    if (elWidth !== undefined) {\n      return {\n        ...state,\n        gridLayout: {\n          ...state.gridLayout,\n          columnId,\n          columnIndex,\n          startingWidth: elWidth\n        },\n      }\n    } else {\n      return state\n    }\n  }\n\n  if (action.type === `columnResizing`) {\n    const {\n      columnIndex,\n      startingWidth,\n      columnWidths,\n    } = state.gridLayout\n\n    const change = state.columnResizing.startX - action.clientX\n    const newWidth = startingWidth - change\n    const columnWidthsCopy = [...columnWidths]\n    columnWidthsCopy[columnIndex] = `${newWidth}px`\n\n    return {\n      ...state,\n      gridLayout: {\n        ...state.gridLayout,\n        columnWidths: columnWidthsCopy,\n      },\n    }\n  }\n}\n\nfunction getElementWidth(columnId) {\n  const width = document.getElementById(`header-cell-${columnId}`)?.offsetWidth\n\n  if (width !== undefined) {\n    return width\n  }\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  active: PropTypes.bool,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  disabled: PropTypes.bool,\n  tag: tagPropType\n};\nvar defaultProps = {\n  tag: 'li'\n};\n\nvar PaginationItem = function PaginationItem(props) {\n  var active = props.active,\n      className = props.className,\n      cssModule = props.cssModule,\n      disabled = props.disabled,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"active\", \"className\", \"cssModule\", \"disabled\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'page-item', {\n    active: active,\n    disabled: disabled\n  }), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nPaginationItem.propTypes = propTypes;\nPaginationItem.defaultProps = defaultProps;\nexport default PaginationItem;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  'aria-label': PropTypes.string,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  next: PropTypes.bool,\n  previous: PropTypes.bool,\n  first: PropTypes.bool,\n  last: PropTypes.bool,\n  tag: tagPropType\n};\nvar defaultProps = {\n  tag: 'a'\n};\n\nvar PaginationLink = function PaginationLink(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      next = props.next,\n      previous = props.previous,\n      first = props.first,\n      last = props.last,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"next\", \"previous\", \"first\", \"last\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'page-link'), cssModule);\n  var defaultAriaLabel;\n\n  if (previous) {\n    defaultAriaLabel = 'Previous';\n  } else if (next) {\n    defaultAriaLabel = 'Next';\n  } else if (first) {\n    defaultAriaLabel = 'First';\n  } else if (last) {\n    defaultAriaLabel = 'Last';\n  }\n\n  var ariaLabel = props['aria-label'] || defaultAriaLabel;\n  var defaultCaret;\n\n  if (previous) {\n    defaultCaret = \"\\u2039\";\n  } else if (next) {\n    defaultCaret = \"\\u203A\";\n  } else if (first) {\n    defaultCaret = \"\\xAB\";\n  } else if (last) {\n    defaultCaret = \"\\xBB\";\n  }\n\n  var children = props.children;\n\n  if (children && Array.isArray(children) && children.length === 0) {\n    children = null;\n  }\n\n  if (!attributes.href && Tag === 'a') {\n    Tag = 'button';\n  }\n\n  if (previous || next || first || last) {\n    children = [/*#__PURE__*/React.createElement(\"span\", {\n      \"aria-hidden\": \"true\",\n      key: \"caret\"\n    }, children || defaultCaret), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"sr-only\",\n      key: \"sr\"\n    }, ariaLabel)];\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    \"aria-label\": ariaLabel\n  }), children);\n};\n\nPaginationLink.propTypes = propTypes;\nPaginationLink.defaultProps = defaultProps;\nexport default PaginationLink;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  listClassName: PropTypes.string,\n  cssModule: PropTypes.object,\n  size: PropTypes.string,\n  tag: tagPropType,\n  listTag: tagPropType,\n  'aria-label': PropTypes.string\n};\nvar defaultProps = {\n  tag: 'nav',\n  listTag: 'ul',\n  'aria-label': 'pagination'\n};\n\nvar Pagination = function Pagination(props) {\n  var _classNames;\n\n  var className = props.className,\n      listClassName = props.listClassName,\n      cssModule = props.cssModule,\n      size = props.size,\n      Tag = props.tag,\n      ListTag = props.listTag,\n      label = props['aria-label'],\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"listClassName\", \"cssModule\", \"size\", \"tag\", \"listTag\", \"aria-label\"]);\n\n  var classes = mapToCssModules(classNames(className), cssModule);\n  var listClasses = mapToCssModules(classNames(listClassName, 'pagination', (_classNames = {}, _classNames[\"pagination-\" + size] = !!size, _classNames)), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, {\n    className: classes,\n    \"aria-label\": label\n  }, /*#__PURE__*/React.createElement(ListTag, _extends({}, attributes, {\n    className: listClasses\n  })));\n};\n\nPagination.propTypes = propTypes;\nPagination.defaultProps = defaultProps;\nexport default Pagination;"],"sourceRoot":""}