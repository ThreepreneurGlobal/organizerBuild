{"version":3,"sources":["containers/navs/Breadcrumb.js","hooks/use-fetch.js","components/cards/FaqCard.js","components/cards/JudgeCard.js","components/application/PrizesList.js","components/cards/SponsorCard.js","components/cards/SubmissionCard.js","views/app/Challenges/details/components/NavItems.js","containers/application/InputDisplay.js","views/app/Challenges/details/components/submission.js","views/app/Challenges/details/components/feedback.js","views/app/Challenges/details/components/TabPanes.js","views/app/Challenges/details/components/ParicipantList.js","components/application/SingleLightbox.js","views/app/Challenges/details/components/HackDetails.js","views/app/Challenges/details/default-details.js"],"names":["getMenuTitle","sub","adminRoot","id","getUrl","path","split","BreadcrumbItems","match","substr","paths","filter","Boolean","length","indexOf","x","className","map","index","active","to","BreadcrumbContainer","heading","useFetch","url","name","useState","loading","setLoading","error","setError","data","setData","remove","useEffect","a","instance","method","response","success","message","fetchData","propTypes","PropTypes","string","isRequired","key","refresh","bool","FaqCard","setShowIndex","showingIndex","item","color","onClick","aria-expanded","question","isOpen","dangerouslySetInnerHTML","__html","answer","JudgeCard","isImg","console","log","profile_url","created_at","substring","src","alt","width","job_title","company","about","connect","authUser","applicationData","accessToken","prizes","getPrizesAction","getPrizes","AppError","role","idx","sponsor_prize","description","SponsorCard","logo","SubmissionCard","ins","profile_photo","pathname","img","target","full_name","contact_no","rel","video_file","NavItems","activeTab","setActiveTab","Nav","tabs","NavItem","NavLink","classNames","location","IntlMessages","InputDisplay","messageId","value","intputType","FormGroup","Label","Input","type","disabled","proptype","any","SubmissionTabPane","submission","TabPane","tabId","xxs","CardBody","FeedbackTabPane","CardSubtitle","comment","CardText","star","TabPanes","hackInfo","hackathon","sponsors","judges","Faq","feedback","TabContent","tagline","aproximate_participants","max_team_size","Row","sm","hackathon_website","contact_email","link_to_code_of_control","facebook","twitter","instagram","linkedin","theme_color_code","application_start","application_end","hackathon_start","hackathon_date","results_date","PrizesList","hackathon_submission","ParticipantList","Card","CardTitle","SingleLightbox","thumb","large","setIsOpen","mainSrc","onCloseRequest","HackDetails","href","Details","params","Breadcrumb","Button","size","hackathon_cover_img","hackathon_logo","Participant","CardHeader"],"mappings":"+JAAA,4DAOMA,EAAe,SAACC,GACpB,MAAI,WAAIA,KAAUC,IAAkB,cAAC,IAAD,CAAcC,GAAG,cAC9C,cAAC,IAAD,CAAcA,GAAE,eAAUF,MAG7BG,EAAS,SAACC,EAAMJ,GACpB,OAAOI,EAAKC,MAAML,GAAK,GAAKA,GAgBxBM,EAAkB,SAAC,GAAe,IAChCF,EAD+B,EAAZG,MACNH,KAAKI,OAAO,GAC3BC,EAAQL,EAAKC,MAAM,KAAKK,OAAOC,SAKnC,OAHIF,EAAMA,EAAMG,OAAS,GAAGC,QAAQ,MAAQ,IAC1CJ,EAAQA,EAAMC,QAAO,SAACI,GAAD,OAA2B,IAApBA,EAAED,QAAQ,SAGtC,mCACE,cAAC,IAAD,CAAYE,UAAU,gEAAtB,SACGN,EAAMO,KAAI,SAAChB,EAAKiB,GACf,OACE,cAAC,IAAD,CAA4BC,OAAQT,EAAMG,SAAWK,EAAQ,EAA7D,SACGR,EAAMG,SAAWK,EAAQ,EACxB,cAAC,IAAD,CAASE,GAAE,WAAMhB,EAAOC,EAAMJ,IAA9B,SACGD,EAAaC,KAGhBD,EAAaC,IANIiB,WAgBlBG,IAzCa,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,QAASd,EAAY,EAAZA,MACtC,OACE,qCACGc,GACC,6BACE,cAAC,IAAD,CAAcnB,GAAImB,MAGrBd,EAAQ,cAACD,EAAD,CAAiBC,MAAOA,IAAY,U,sGCnB7Ce,EAAW,SAACC,GAAwB,IAAnBC,EAAkB,uDAAX,OAAW,EACTC,oBAAS,GADA,mBAChCC,EADgC,KACvBC,EADuB,OAEbF,mBAAS,IAFI,mBAEhCG,EAFgC,KAEzBC,EAFyB,OAGPJ,oBAAS,GAHF,mBAGhCK,EAHgC,KAG1BC,EAH0B,KAGjBC,EAHiB,KAkCvC,OA7BAC,qBAAU,WACHV,EAKU,uCAAG,4BAAAW,EAAA,+EAESC,YAAS,CAC9BC,OAAQ,MACRb,QAJY,QAERc,EAFQ,QAODP,KAAKQ,QAChBP,EAAQM,EAASP,KAAKN,IAEtBK,EAASQ,EAASP,KAAKS,SAEzBZ,GAAW,GAZG,gDAcdE,EAAS,KAAIU,SACbZ,GAAW,GAfG,yDAAH,oDAmBfa,GAvBEX,EAAS,2BAyBV,IAEI,CAAEH,UAASI,OAAMF,QAAOI,WAGlBV,MAEfA,EAASmB,UAAY,CACnBlB,IAAKmB,IAAUC,OAAOC,WACtBC,IAAKH,IAAUC,OAAOC,WACtBE,QAASJ,IAAUK,O,iCC/CrB,4CA2BeC,IAvBC,SAAC,GAAiD,IAA/C/B,EAA8C,EAA9CA,MAAOgC,EAAuC,EAAvCA,aAAcC,EAAyB,EAAzBA,aAAcC,EAAW,EAAXA,KACpD,OACE,eAAC,IAAD,CAAMpC,UAAU,cAAhB,UACE,qBAAKA,UAAU,oCAAf,SACE,cAAC,IAAD,CACEqC,MAAM,OACNrC,UAAU,oEACVsC,QAAS,kBAAMJ,EAAahC,IAC5BqC,gBAAeJ,IAAiBjC,EAJlC,SAMGkC,EAAKI,aAGV,cAAC,IAAD,CAAUC,OAAQN,IAAiBjC,EAAnC,SACE,qBACEF,UAAU,mCACV0C,wBAAyB,CAAEC,OAAQP,EAAKQ,iB,iCCpBlD,0BAsEeC,IAjEG,SAAC,GAAc,IAAZ9B,EAAW,EAAXA,KACf+B,GAAQ,EACZC,QAAQC,IAAIjC,GAKZ,OAHwD,OAApDA,EAAKkC,YAAYzD,MAAM,2BACzBsD,GAAQ,GA+BR,aA3BA,CA2BC,IAAD,CAAM9C,UAAU,OAAhB,SACE,qBAAKA,UAAU,OAAf,SACE,sBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,iCAAf,UACE,oBAAIA,UAAU,aAAd,SAA4Be,EAAKN,OACjC,mBAAGT,UAAU,YAAb,SAAyB,uBAAOA,UAAU,aAAjB,SAA+Be,EAAKmC,WAAWC,UAAU,EAAG,UAGvF,sBAAKnD,UAAU,WAAf,UACE,qBAAKA,UAAU,QAAf,SAAuB,qBAAKoD,IAAKN,EAAQ/B,EAAKkC,YA1C5C,+BA0C+DI,IAAI,UAAUC,MAAM,YAErF,qBAAKtD,UAAU,cAAf,SACE,mBAAGA,UAAU,YAAb,SACE,+BACE,+BAAI,6CAAoBe,EAAKwC,aAC7B,+BAAI,2CAAkBxC,EAAKyC,WAC3B,+BAAI,yCAAgBzC,EAAK0C,4B,iCCzD3C,uFAuEeC,iBANS,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,gBAGnC,MAAO,CAAEC,YAFeF,EAAhBE,YAEcC,OADaF,EAA3BE,OACsBnD,QADKiD,EAAnBjD,QACuBE,MADJ+C,EAAV/C,SAIa,CACtCkD,gBAAiBC,MADJN,EA/DI,SAAC,GAOb,IANLvE,EAMI,EANJA,GACA4E,EAKI,EALJA,gBACAF,EAII,EAJJA,YACAC,EAGI,EAHJA,OACAnD,EAEI,EAFJA,QACAE,EACI,EADJA,MAOA,GALAK,qBAAU,WACR6C,EAAgBF,EAAa1E,KAE5B,IAEC0B,EAAO,MAAM,IAAIoD,IAASpD,GAG9B,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,UAEE,mCAAK,cAAC,IAAD,CAAc1B,GAAG,iCAIxB,cAAC,IAAD,CAAWa,UAAU,SAEpBW,EACC,qBAAKX,UAAU,oCAAf,SACE,qBAAKA,UAAU,UAAUkE,KAAK,SAA9B,SACE,sBAAMlE,UAAU,UAAhB,4BAIJ,mCACG8D,EAAO7D,KAAI,SAACmC,EAAM+B,GAAP,OAEV,aADA,CACC,IAAD,CAAgBnE,UAAU,OAA1B,SACE,eAAC,IAAD,WACE,cAAC,IAAD,UAAYoC,EAAK3B,OACO,IAAvB2B,EAAKgC,eACJ,sBAAKpE,UAAU,qCAAf,2BACiB,IACf,mBAAGA,UAAU,sCAGhBoC,EAAKiC,gBATCF,iB,iCC7CzB,qDAiCeG,IA5BK,SAAC,GAAc,IAAZvD,EAAW,EAAXA,KACjB+B,GAAQ,EAMZ,OAJgD,OAA7C/B,EAAKwD,KAAK/E,MAAM,2BAEjBsD,GAAQ,GAGR,eAAC,IAAD,CAAM9C,UAAU,uBAAhB,UACE,cAAC,IAAD,CAASI,GAAIW,EAAKwD,KAAMvE,UAAU,SAAlC,SACE,qBAAKoD,IAAKN,EAAM/B,EAAKwD,KARf,+BAQyBlB,IAAI,YAAYC,MAAM,QAAQtD,UAAU,UAEzE,qBAAKA,UAAU,qCAAf,SACE,cAAC,IAAD,CAAUA,UAAU,gGAApB,SACE,qBAAKA,UAAU,iBAAf,SACE,cAAC,IAAD,CAASI,GAAIW,EAAKwD,KAAlB,SACE,cAAC,IAAD,CAAcvE,UAAU,gBAAxB,SAAyCe,EAAKN,oB,iCCrB5D,uEA8Ce+D,IAzCQ,SAAC,GAAc,IAAD,EAAXzD,EAAW,EAAXA,KACpB+B,GAAQ,EACN2B,EAAM,WAKZ,OAJ2D,QAApD,OAAJ1D,QAAI,IAAJA,GAAA,UAAAA,EAAM2D,qBAAN,eAAqBlF,MAAM,4BAE5BsD,GAAQ,GAGR,eAAC,IAAD,CAAM9C,UAAU,uBAAhB,UACE,cAAC,IAAD,CAASI,GAAI,CAAEuE,SAAUF,EAAM1D,EAAKP,KAAOR,UAAU,SAArD,SACE,qBAAKoD,IAAKN,EAAM/B,EAAK2D,cAAcE,IAAKvB,IAAI,YAAYC,MAAM,QAAQtD,UAAU,UAElF,qBAAKA,UAAU,qCAAf,SACE,eAAC,IAAD,CAAUA,UAAU,gGAApB,UACE,sBAAKA,UAAU,iBAAf,UACE,cAAC,IAAD,CAASI,GAAI,CAAEuE,SAAUF,EAAM1D,EAAKP,KAAOqE,OAAO,SAAlD,SACE,cAAC,IAAD,CAAc7E,UAAU,gBAAxB,SAAyCe,EAAK+D,cAEhD,cAAC,IAAD,CAAU9E,UAAU,6BAApB,SACGe,EAAKgE,aAER,cAAC,IAAD,CAAU/E,UAAU,4BAApB,SACE,cAAC,IAAD,CAAMI,GAAI,CAAEuE,SAAUF,EAAM1D,EAAKP,KAAOwE,IAAI,aAAaH,OAAO,SAAS7E,UAAU,uBAAnF,6BAGF,cAAC,IAAD,CAAUA,UAAU,QAApB,SACE,cAAC,IAAD,CAAMI,GAAI,CAAEuE,SAAUF,EAAM1D,EAAKkE,YAAcD,IAAI,aAAaH,OAAO,SAAS7E,UAAU,uBAA1F,sCAMJ,cAAC,IAAD,CAAUA,UAAU,6BAApB,SACGe,EAAKmC,WAAWC,UAAU,EAAG,e,wLC+H3B+B,EA/JE,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aAC7B,OACE,eAACC,EAAA,EAAD,CAAKC,MAAI,EAACtF,UAAU,wBAApB,UACE,cAACuF,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACExF,UAAWyF,IAAW,CACpBtF,OAAsB,WAAdgF,EACR,YAAY,IAEd7C,QAAS,kBAAM8C,EAAa,WAC5BhF,GAAG,IACHsF,SAAU,GAPZ,SASE,cAACC,EAAA,EAAD,CAAcxG,GAAG,oBAkBrB,cAACoG,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACExF,UAAWyF,IAAW,CACpBtF,OAAsB,UAAdgF,EACR,YAAY,IAEd7C,QAAS,kBAAM8C,EAAa,UAC5BhF,GAAG,IACHsF,SAAU,GAPZ,SASE,cAACC,EAAA,EAAD,CAAcxG,GAAG,mBAkBrB,cAACoG,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACExF,UAAWyF,IAAW,CACpBtF,OAAsB,UAAdgF,EACR,YAAY,IAEd7C,QAAS,kBAAM8C,EAAa,UAC5BhF,GAAG,IACHsF,SAAU,GAPZ,SASE,cAACC,EAAA,EAAD,CAAcxG,GAAG,mBAGrB,cAACoG,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACExF,UAAWyF,IAAW,CACpBtF,OAAsB,WAAdgF,EACR,YAAY,IAEd7C,QAAS,kBAAM8C,EAAa,WAC5BhF,GAAG,IACHsF,SAAU,GAPZ,SASE,cAACC,EAAA,EAAD,CAAcxG,GAAG,oBAIrB,cAACoG,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACExF,UAAWyF,IAAW,CACpBtF,OAAsB,WAAdgF,EACR,YAAY,IAEd7C,QAAS,kBAAM8C,EAAa,WAC5BhF,GAAG,IACHsF,SAAU,GAPZ,SASE,cAACC,EAAA,EAAD,CAAcxG,GAAG,oBAIrB,cAACoG,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACExF,UAAWyF,IAAW,CACpBtF,OAAsB,aAAdgF,EACR,YAAY,IAEd7C,QAAS,kBAAM8C,EAAa,aAC5BhF,GAAG,IACHsF,SAAU,GAPZ,SASE,cAACC,EAAA,EAAD,CAAcxG,GAAG,sBAIrB,cAACoG,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACExF,UAAWyF,IAAW,CACpBtF,OAAsB,QAAdgF,EACR,YAAY,IAEd7C,QAAS,kBAAM8C,EAAa,QAC5BhF,GAAG,IACHsF,SAAU,GAPZ,SASE,cAACC,EAAA,EAAD,CAAcxG,GAAG,iBAIrB,cAACoG,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACExF,UAAWyF,IAAW,CACpBtF,OAAsB,eAAdgF,EACR,YAAY,IAEd7C,QAAS,kBAAM8C,EAAa,eAC5BhF,GAAG,IACHsF,SAAU,GAPZ,SASE,cAACC,EAAA,EAAD,CAAcxG,GAAG,mBAIrB,cAACoG,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACExF,UAAWyF,IAAW,CACpBtF,OAAsB,aAAdgF,EACR,YAAY,IAEd7C,QAAS,kBAAM8C,EAAa,aAC5BhF,GAAG,IACHsF,SAAU,GAPZ,SASE,cAACC,EAAA,EAAD,CAAcxG,GAAG,0B,kGCzJrByG,EAAe,SAAC,GAAqD,IAAnDC,EAAkD,EAAlDA,UAAWpF,EAAuC,EAAvCA,KAAMqF,EAAiC,EAAjCA,MAAiC,IAA1BC,kBAA0B,MAAb,OAAa,EACxE,OACE,eAACC,EAAA,EAAD,CAAWhG,UAAU,YAArB,UACE,cAACiG,EAAA,EAAD,CAAOjG,UAAU,OAAjB,SACE,cAAC2F,EAAA,EAAD,CAAcxG,GAAI0G,MAGpB,cAACK,EAAA,EAAD,CACEC,KAAMJ,EACN/F,UAAU,eACVS,KAAMA,EACNqF,MAAOA,EACPM,UAAQ,QAMhBR,EAAaS,SAAW,CACtBR,UAAWlE,IAAUC,OAAOC,WAC5BpB,KAAMkB,IAAUC,OAAOC,WACvBiE,MAAOnE,IAAU2E,IAAIzE,WACrBkE,WAAYpE,IAAUC,QAGTgE,Q,SCSTW,EAAoB,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,WAG1B,OACE,cAACC,EAAA,EAAD,CAASC,MAAM,aAAf,SACE,cAAC,IAAD,CAAOC,IAAI,KAAK3G,UAAU,OAA1B,SACE,eAAC4G,EAAA,EAAD,CAAU5G,UAAU,GAApB,UAiBE,cAACgG,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAOjG,UAAU,KAAjB,iCAGDwG,EAAWvG,KAAI,SAACmC,GACd,OACK,cAACoC,EAAA,EAAD,CAEEzD,KAAMqB,GADDA,EAAKjD,e,kBCzCf0H,EAjBS,SAAC,GAAc,IAAZzE,EAAW,EAAXA,KACzB,OACE,cAACwE,EAAA,EAAD,CAAU5G,UAAU,+FAApB,SACM,sBAAKA,UAAU,iBAAf,UACE,cAAC8G,EAAA,EAAD,CAAc9G,UAAU,gBAAxB,SAAyCoC,EAAK2E,UAE9C,eAACC,EAAA,EAAD,CAAUhH,UAAU,6BAApB,UACEoC,EAAK6E,KADP,iB,SC4VGC,EA/VE,SAAC,GAA6B,IAA3B/B,EAA0B,EAA1BA,UAAWgC,EAAe,EAAfA,SAAe,EACPzG,mBAAS,GADF,mBACrCyB,EADqC,KACvBD,EADuB,KAGpCkF,EAA+CD,EAA/CC,UAAWC,EAAoCF,EAApCE,SAAUC,EAA0BH,EAA1BG,OAAQC,EAAkBJ,EAAlBI,IAAKC,EAAaL,EAAbK,SAkB1C,OACE,eAACC,EAAA,EAAD,CAAYtC,UAAWA,EAAvB,UACE,cAACsB,EAAA,EAAD,CAASC,MAAM,SAAf,SACE,eAACE,EAAA,EAAD,WACC,cAAC,EAAD,CACGf,UAAU,4BACVpF,KAAK,iBACLqF,MAAOsB,EAAU3G,OAGnB,cAAC,EAAD,CACEoF,UAAU,+BACVpF,KAAK,oBACLqF,MAAOsB,EAAUM,UAGnB,cAAC,EAAD,CACE7B,UAAU,mBACVpF,KAAK,kBACLqF,MAAOsB,EAAU3D,MACjBsC,WAAW,aAGb,cAAC,EAAD,CACEF,UAAU,qCACVpF,KAAK,0BACLqF,MAAOsB,EAAUO,0BAGnB,cAAC,EAAD,CACE9B,UAAU,2BACVpF,KAAK,gBACLqF,MAAOsB,EAAUQ,qBAwGvB,cAACnB,EAAA,EAAD,CAASC,MAAM,QAAf,SACE,cAACmB,EAAA,EAAD,UACE,cAAC,IAAD,CAAOC,GAAG,KAAV,SACE,eAAClB,EAAA,EAAD,WACE,cAAC,EAAD,CACEf,UAAU,+BACVpF,KAAK,oBACLqF,MAAOsB,EAAUW,oBAInB,cAAC,EAAD,CACElC,UAAU,2BACVpF,KAAK,gBACLqF,MAAOsB,EAAUY,gBAGnB,cAAC,EAAD,CACEnC,UAAU,qCACVpF,KAAK,0BACLqF,MAAOsB,EAAUa,0BAGnB,cAAC,EAAD,CACEpC,UAAU,sBACVpF,KAAK,WACLqF,MAAOsB,EAAUc,WAGnB,cAAC,EAAD,CACErC,UAAU,qBACVpF,KAAK,UACLqF,MAAOsB,EAAUe,UAGnB,cAAC,EAAD,CACEtC,UAAU,uBACVpF,KAAK,YACLqF,MAAOsB,EAAUgB,YAGnB,cAAC,EAAD,CACEvC,UAAU,sBACVpF,KAAK,WACLqF,MAAOsB,EAAUiB,oBAO3B,cAAC5B,EAAA,EAAD,CAASC,MAAM,SAAf,SACE,cAACmB,EAAA,EAAD,UACE,cAAC,IAAD,CAAOC,GAAG,KAAV,SACE,cAAClB,EAAA,EAAD,UACE,cAAC,EAAD,CACEf,UAAU,yBACVpF,KAAK,mBACLqF,MAAOsB,EAAUkB,2BAO3B,cAAC7B,EAAA,EAAD,CAASC,MAAM,QAAf,SACE,cAACmB,EAAA,EAAD,UACE,cAAC,IAAD,CAAOC,GAAG,KAAV,SACE,eAAClB,EAAA,EAAD,WACE,cAAC,EAAD,CACEf,UAAU,yCACVpF,KAAK,oBACLqF,MAAOsB,EAAUmB,oBAGnB,cAAC,EAAD,CACE1C,UAAU,uCACVpF,KAAK,mBACLqF,MAAOsB,EAAUoB,kBAGnB,cAAC,EAAD,CACE3C,UAAU,uCACVpF,KAAK,mBACLqF,MAAOsB,EAAUqB,kBAGnB,cAAC,EAAD,CACE5C,UAAU,qCACVpF,KAAK,iBACLqF,MAAOsB,EAAUsB,iBAGnB,cAAC,EAAD,CACE7C,UAAU,kCACVpF,KAAK,oBACLqF,MAAOsB,EAAUuB,wBAY3B,cAAClC,EAAA,EAAD,CAASC,MAAM,SAAf,SACE,cAACmB,EAAA,EAAD,UACA,cAAC,IAAD,CAAOlB,IAAI,KAAK3G,UAAU,SAA1B,SACE,cAAC4I,EAAA,EAAD,CAAYzJ,GAAIiI,EAAUjI,WAmB9B,cAACsH,EAAA,EAAD,CAASC,MAAM,WAAf,SACE,cAACmB,EAAA,EAAD,UACE,cAAC,IAAD,CAAOC,GAAG,KAAV,SACE,cAAClB,EAAA,EAAD,UACGS,EAASpH,KAAI,SAACmC,GAAD,OACZ,cAACkC,EAAA,EAAD,CAA2BvD,KAAMqB,GAAfA,EAAKjD,eAOjC,cAACsH,EAAA,EAAD,CAASC,MAAM,SAAf,SACE,cAACmB,EAAA,EAAD,UACE,cAAC,IAAD,CAAOC,GAAG,KAAV,SACE,cAAClB,EAAA,EAAD,UACGU,EAAOrH,KAAI,SAACmC,GAAD,OACZ,cAACS,EAAA,EAAD,CAEA9B,KAAMqB,GADDA,EAAKjD,eASlB,cAACsH,EAAA,EAAD,CAASC,MAAM,MAAf,SACE,cAAC,IAAD,CAAOC,IAAI,KAAK3G,UAAU,OAA1B,SACGuH,EAAItH,KAAI,SAACmC,EAAMlC,GAAP,OACP,cAAC+B,EAAA,EAAD,CAGEG,KAAMA,EACNlC,MAAOA,EACPiC,aAAcA,EACdD,aAAcA,GANhB,kBAEkBhC,WAUxB,cAAC,EAAD,CAAmBwG,MAAM,aAAaF,WAAYW,EAAS0B,uBAE3D,cAACpC,EAAA,EAAD,CAASC,MAAM,WAAf,SACE,cAAC,IAAD,CAAOoB,GAAG,KAAV,SACE,cAAClB,EAAA,EAAD,UACCY,EAASvH,KAAI,SAACmC,GAAD,OACZ,cAAC,EAAD,CAEEA,KAAQA,EACRgF,UAAWA,GAFNhF,EAAKjD,iB,kCCrTT2J,EAlCS,SAAC,GAAqB,IAAnB/H,EAAkB,EAAlBA,KAAMvB,EAAY,EAAZA,MAC/B,OACE,qCACE,cAACuJ,EAAA,EAAD,CAAM/I,UAAU,OAAhB,SACE,cAAC4G,EAAA,EAAD,UACE,cAACoC,EAAA,EAAD,CAAWhJ,UAAU,WAArB,SACE,sBAAKA,UAAU,kCAAf,UACE,cAAC2F,EAAA,EAAD,CAAcxG,GAAG,4BAGhB4B,EAAKlB,OACJ,kDACSkB,EAAKlB,OADd,KAEE,eAAC,IAAD,CAASO,GAAE,UAAKZ,EAAMgB,IAAX,iBAA+BR,UAAU,UAApD,qBACU,mBAAGA,UAAU,6CAGvB,cAMXe,EAAKlB,OAAS,KACb,cAACkJ,EAAA,EAAD,CAAM/I,UAAU,OAAhB,SACE,cAAC4G,EAAA,EAAD,UACE,cAACoC,EAAA,EAAD,CAAWhJ,UAAU,UAArB,+C,kBCJGiJ,EAxBQ,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,MAAOlJ,EAAuB,EAAvBA,UAAWmJ,EAAY,EAAZA,MAAY,EAC1BzI,oBAAS,GADiB,mBAC/C+B,EAD+C,KACvC2G,EADuC,KAElDtG,GAAQ,EAMZ,OALa,OAAVoG,IAEDpG,GAAQ,GAEVC,QAAQC,IAAIkG,GAEV,qCACE,cAAC,IAAD,CAAS9I,GAAG,IAAIsF,SAAU,GAAIpD,QAAS,kBAAM8G,GAAU,IAAvD,SACE,qBACE/F,IAAI,YACJD,IAAKN,EAAMoG,EAAMtE,IACjB5E,UAAWA,EACXsD,MAAM,UAGTb,GACC,cAAC,IAAD,CAAU4G,QAASF,EAAOG,eAAgB,kBAAMF,GAAU,U,SCsDnDG,EAtEK,SAAC,GAAkB,IAC7BnC,EAD4B,EAAfD,SACbC,UAER,OACE,cAAC2B,EAAA,EAAD,CAAM/I,UAAU,OAAhB,SACE,eAAC4G,EAAA,EAAD,WACE,qBAAK5G,UAAU,mBAAf,SACE,oBAAIA,UAAU,OAAd,SAAsBoH,EAAU3G,SAElC,cAAC,IAAD,CAAUT,UAAU,OAApB,SAA4BoH,EAAU3D,QAEtC,mBAAGzD,UAAU,6BAAb,qBAIA,mBAAGA,UAAU,OAAb,SAAqBoH,EAAUM,UAkB/B,mBAAG1H,UAAU,6BAAb,SACE,cAAC2F,EAAA,EAAD,CAAcxG,GAAG,mBAEnB,qBAAKa,UAAU,eAAf,SACE,qBAAIA,UAAU,4BAAd,UACE,oBAAIA,UAAU,mBAAd,SACE,cAACwF,EAAA,EAAD,CAASgE,KAAMpC,EAAUc,SAAUrD,OAAO,SAA1C,SACE,mBAAG7E,UAAU,oCAGjB,oBAAIA,UAAU,mBAAd,SACE,cAACwF,EAAA,EAAD,CAASgE,KAAMpC,EAAUe,QAAStD,OAAO,SAAzC,SACE,mBAAG7E,UAAU,mCAGjB,oBAAIA,UAAU,mBAAd,SACE,cAACwF,EAAA,EAAD,CAASgE,KAAMpC,EAAUgB,UAAWvD,OAAO,SAA3C,SACE,mBAAG7E,UAAU,qCAGjB,oBAAIA,UAAU,mBAAd,SACE,cAACwF,EAAA,EAAD,CAASgE,KAAMpC,EAAUiB,SAAUxD,OAAO,SAA1C,SACE,mBAAG7E,UAAU,oCAGjB,oBAAIA,UAAU,mBAAd,SACE,cAACwF,EAAA,EAAD,CAASgE,KAAMpC,EAAUW,kBAAmBlD,OAAO,SAAnD,SACE,mBAAG7E,UAAU,oCCwBdyJ,UAvEC,SAAC,GAAe,IAAbjK,EAAY,EAAZA,MACTL,EAAOK,EAAMkK,OAAbvK,GAER,IAAKA,EAAI,MAAM,IAAI8E,IAAS,+BAHC,MAKKvD,mBAAS,UALd,mBAKtByE,EALsB,KAKXC,EALW,OAOI7E,YAAS,eAAD,OAAgBpB,GAAM,cAAvDwB,EAPqB,EAOrBA,QAASI,EAPY,EAOZA,KAAMF,EAPM,EAONA,MAEvB,GAAIF,EAAS,OAAO,qBAAKX,UAAU,YAEnC,GAAIa,EAAO,MAAM,IAAIoD,IAASpD,GAE9B,OACE,qCACE,eAACgH,EAAA,EAAD,WACE,cAAC,IAAD,CAAOlB,IAAI,IAAX,SACE,cAACgD,EAAA,EAAD,CAAYrJ,QAAQ,eAAed,MAAOA,MAE5C,cAAC,IAAD,CAAOmH,IAAI,IAAX,SACA,sBAAK3G,UAAU,wCAAf,UACA,cAAC4J,EAAA,EAAD,CAAQC,KAAK,KAAKL,KAAI,UAAKtK,IAAL,8BAAoCC,GAA1D,SACI,cAACwG,EAAA,EAAD,CAAcxG,GAAG,gCAEnB,cAACyK,EAAA,EAAD,CAAQC,KAAK,KAAKL,KAAI,UAAKtK,IAAL,+BAAqCC,EAArC,YAAtB,SACE,cAACwG,EAAA,EAAD,CAAcxG,GAAG,0CAMvB,cAAC,IAAD,CAAWa,UAAU,SAErB,eAAC6H,EAAA,EAAD,WACE,cAAC,IAAD,CAAOlB,IAAI,KAAK3G,UAAU,OAA1B,SACE,cAAC+I,EAAA,EAAD,UACE,cAAC,EAAD,CACEG,MAAOnI,EAAKqG,UAAU0C,oBACtBX,MAAOpI,EAAKqG,UAAU0C,oBACtB9J,UAAU,+BAKhB,eAAC,IAAD,CAAO2G,IAAI,KAAKmB,GAAG,KAAK9H,UAAU,gBAAlC,UACE,cAAC,EAAD,CACEkJ,MAAOnI,EAAKqG,UAAU2C,eACtBZ,MAAOpI,EAAKqG,UAAU2C,eACtB/J,UAAU,+CAEVW,GAAW,cAAC,EAAD,CAAawG,SAAUpG,KAClCJ,GACA,cAAC,EAAD,CAAiBxB,GAAIA,EAAI4B,KAAMA,EAAKiJ,YAAaxK,MAAOA,OAI5D,cAAC,IAAD,CAAOmH,IAAI,KAAKmB,GAAG,KAAK9H,UAAU,iBAAlC,SACE,cAAC+I,EAAA,EAAD,CAAM/I,UAAU,OAAhB,SACE,eAACiK,EAAA,EAAD,WACE,cAAC,EAAD,CAAU9E,UAAWA,EAAWC,aAAcA,IAC9C,cAAC,EAAD,CAAUD,UAAWA,EAAWgC,SAAUpG","file":"static/js/challenges-default-details-view.bd50bb95.chunk.js","sourcesContent":["/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport IntlMessages from '../../helpers/IntlMessages';\nimport { adminRoot } from '../../constants/defaultValues';\n\nconst getMenuTitle = (sub) => {\n  if (`/${sub}` === adminRoot) return <IntlMessages id=\"menu.home\" />;\n  return <IntlMessages id={`menu.${sub}`} />;\n};\n\nconst getUrl = (path, sub) => {\n  return path.split(sub)[0] + sub;\n};\n\nconst BreadcrumbContainer = ({ heading, match }) => {\n  return (\n    <>\n      {heading && (\n        <h1>\n          <IntlMessages id={heading} />\n        </h1>\n      )}\n      {match ? <BreadcrumbItems match={match} /> : null}\n    </>\n  );\n};\n\nconst BreadcrumbItems = ({ match }) => {\n  const path = match.path.substr(1);\n  let paths = path.split('/').filter(Boolean);\n\n  if (paths[paths.length - 1].indexOf(':') > -1) {\n    paths = paths.filter((x) => x.indexOf(':') === -1);\n  }\n  return (\n    <>\n      <Breadcrumb className=\"pt-0 breadcrumb-container d-none d-sm-block d-lg-inline-block\">\n        {paths.map((sub, index) => {\n          return (\n            <BreadcrumbItem key={index} active={paths.length === index + 1}>\n              {paths.length !== index + 1 ? (\n                <NavLink to={`/${getUrl(path, sub, index)}`}>\n                  {getMenuTitle(sub)}\n                </NavLink>\n              ) : (\n                getMenuTitle(sub)\n              )}\n            </BreadcrumbItem>\n          );\n        })}\n      </Breadcrumb>\n    </>\n  );\n};\n\nexport default BreadcrumbContainer;\n","import { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport instance from '../helpers/axiosInstance';\n\nconst useFetch = (url, name = 'data') => {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [data, setData, remove] = useState(false);\n\n  useEffect(() => {\n    if (!url) {\n      setError('Please Provide a Uri!');\n      return;\n    }\n\n    const fetchData = async () => {\n      try {\n        const response = await instance({\n          method: 'GET',\n          url,\n        });\n\n        if (response.data.success) {\n          setData(response.data[name]);\n        } else {\n          setError(response.data.message);\n        }\n        setLoading(false);\n      } catch (err) {\n        setError(err.message);\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n    // eslint-disable-next-line\n  }, []);\n\n  return { loading, data, error, remove };\n};\n\nexport default useFetch;\n\nuseFetch.propTypes = {\n  url: PropTypes.string.isRequired,\n  key: PropTypes.string.isRequired,\n  refresh: PropTypes.bool,\n};\n","/* eslint-disable react/no-danger */\nimport React from 'react';\nimport { Button, Card, Collapse } from 'reactstrap';\n\nconst FaqCard = ({ index, setShowIndex, showingIndex, item }) => {\n  return (\n    <Card className=\"d-flex mb-2\">\n      <div className=\"d-flex flex-grow-1 min-width-zero\">\n        <Button\n          color=\"link\"\n          className=\"card-body btn-empty btn-link list-item-heading text-left text-one\"\n          onClick={() => setShowIndex(index)}\n          aria-expanded={showingIndex === index}\n        >\n          {item.question}\n        </Button>\n      </div>\n      <Collapse isOpen={showingIndex === index}>\n        <div\n          className=\"card-body accordion-content pt-0\"\n          dangerouslySetInnerHTML={{ __html: item.answer }}\n        />\n      </Collapse>\n    </Card>\n  );\n};\n\nexport default FaqCard;\n","import React from 'react';\nimport { /* Button, */ Card } from 'reactstrap';\n\n// import { NavLink } from 'react-router-dom';\n\nconst JudgeCard = ({ data }) => {\n  let isImg = false;\n  console.log(data);\n  const img = \"/assets/img/profiles/l-2.jpg\"\n  if (data.profile_url.match(/\\.(jpeg|jpg|gif|png)$/) !== null) {\n    isImg = true;\n  }\n  return (\n\n    //   <Card className=\"d-flex flex-row mb-4\">\n    //     <NavLink to={data.profile_url} className=\"d-flex\">\n    //       <img src={isImg?data.profile_url:img} alt=\"Not Found\" width=\"100px\" className=\"m-4\" />\n    //     </NavLink>\n    //     <div className=\" d-flex flex-grow-1 min-width-zero\">\n    //       <CardBody className=\" pl-0 align-self-center d-flex flex-column flex-lg-row justify-content-between min-width-zero\">\n    //         <div className=\"min-width-zero\">\n    //           <NavLink to={data.profile_url}>\n    //             <CardSubtitle className=\"truncate mb-1\">Name:{data.name}</CardSubtitle>\n    //           </NavLink>\n    //           <CardText className=\"text-muted text-small mb-2\">\n    //             {data.job_title}\n    //           </CardText>\n    //           <CardText className=\"text-muted text-small mb-2\">\n    //             {data.company}\n    //           </CardText>\n    //           <CardText className=\"text-muted text-small mb-2\">\n    //             {data.about}\n    //           </CardText>\n    //           {/* <Button outline size=\"xs\" color=\"danger\">\n    //             Remove\n    //           </Button> */}\n    //         </div>\n    //       </CardBody>\n    //     </div>\n    //   </Card>\n\n    <Card className=\"mb-3\">\n      <div className=\"card\">\n        <div className=\"card-body\">\n          <div className=\"d-flex justify-content-between\">\n            <h5 className=\"card-title\">{data.name}</h5>\n            <p className=\"card-text\"><small className=\"text-muted\">{data.created_at.substring(0, 9)}</small></p>\n          </div>\n\n          <div className=\"row mb-1\">\n            <div className=\"col-2\"><img src={isImg ? data.profile_url : img} alt=\"Profile\" width=\"100px\" /></div>\n          \n            <div className=\"col-10 pt-1\">\n              <p className=\"card-text\">\n                <ul>\n                  <li><b>Job_title : </b>{data.job_title}</li>\n                  <li><b>Company : </b>{data.company}</li>\n                  <li><b>About : </b>{data.about}</li>\n                </ul>\n              </p>\n            </div>\n          </div>\n           </div>\n      </div>\n    </Card>\n\n\n  );\n};\n\nexport default JudgeCard;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Card, CardBody, CardTitle } from 'reactstrap';\nimport AppError from '../../helpers/AppError';\nimport IntlMessages from '../../helpers/IntlMessages';\nimport { getPrizes } from '../../redux/actions';\nimport { Separator } from '../common/CustomBootstrap';\n\nconst PrizesList = ({\n  id,\n  getPrizesAction,\n  accessToken,\n  prizes,\n  loading,\n  error,\n}) => {\n  useEffect(() => {\n    getPrizesAction(accessToken, id);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (error) throw new AppError(error);\n  \n\n  return (\n    <Card>\n      <CardBody>\n        <CardTitle>\n          {/* <span className=\"h1\"> */}\n          <b>  <IntlMessages id=\"challenges.added-prizes\" /></b>\n          {/* </span> */}\n        </CardTitle>\n\n        <Separator className=\"my-2\" />\n\n        {loading ? (\n          <div className=\"d-flex justify-content-center m-4\">\n            <div className=\"loading\" role=\"status\">\n              <span className=\"sr-only\">Loading...</span>\n            </div>\n          </div>\n        ) : (\n          <>\n            {prizes.map((item, idx) => (\n              // eslint-disable-next-line react/no-array-index-key\n              <Card key={idx} className=\"mb-1\">\n                <CardBody>\n                  <CardTitle>{item.name}</CardTitle>\n                  {item.sponsor_prize === 1 && (\n                    <div className=\"position-absolute card-top-buttons\">\n                      Sponsor Prize:{' '}\n                      <i className=\"simple-icon-check text-success\" />\n                    </div>\n                  )}\n                  {item.description}\n                </CardBody>\n              </Card>\n            ))}\n          </>\n        )}\n      </CardBody>\n    </Card>\n  );\n};\n\nconst mapStateToProps = ({ authUser, applicationData }) => {\n  const { accessToken } = authUser;\n  const { prizes, loading, error } = applicationData;\n  return { accessToken, prizes, loading, error };\n};\n\nexport default connect(mapStateToProps, {\n  getPrizesAction: getPrizes,\n})(PrizesList);\n","import React from 'react';\nimport { /* Button, */ Card, CardBody, CardSubtitle } from 'reactstrap';\n\nimport { NavLink } from 'react-router-dom';\n\nconst SponsorCard = ({ data }) => {\n  let isImg = false;\n  const img = \"/assets/img/profiles/l-2.jpg\"\n  if(data.logo.match(/\\.(jpeg|jpg|gif|png)$/) !== null)\n  {\n    isImg = true;\n  }\n  return (\n    <Card className=\"d-flex flex-row mb-4\">\n      <NavLink to={data.logo} className=\"d-flex\">\n        <img src={isImg?data.logo:img} alt=\"Not Found\" width=\"100px\" className=\"m-4\" />\n      </NavLink>\n      <div className=\" d-flex flex-grow-1 min-width-zero\">\n        <CardBody className=\" pl-0 align-self-center d-flex flex-column flex-lg-row justify-content-between min-width-zero\">\n          <div className=\"min-width-zero\">\n            <NavLink to={data.logo}>\n              <CardSubtitle className=\"truncate mb-1\">{data.name}</CardSubtitle>\n            </NavLink>\n            {/* <Button outline size=\"xs\" color=\"danger\">\n              Remove\n            </Button> */}\n          </div>\n        </CardBody>\n      </div>\n    </Card>\n  );\n};\n\nexport default SponsorCard;\n","import React from 'react';\nimport { /* Button, */ Card, CardBody, CardSubtitle, CardText } from 'reactstrap';\nimport { NavLink,Link } from 'react-router-dom';\nimport img from \"../../assets/img/profiles/profile.png\";\n\nconst SubmissionCard = ({ data }) => {\n  let isImg = false;\n  const ins = \"https://\";\n  if(data?.profile_photo?.match(/\\.(jpeg|jpg|gif|png)$/) !== null)\n  {\n    isImg = true;\n  }\n  return (\n    <Card className=\"d-flex flex-row mb-4\">\n      <NavLink to={{ pathname: ins + data.url }} className=\"d-flex\">\n        <img src={isImg?data.profile_photo:img} alt=\"Not Found\" width=\"100px\" className=\"m-4\" />\n      </NavLink>\n      <div className=\" d-flex flex-grow-1 min-width-zero\">\n        <CardBody className=\" pl-0 align-self-center d-flex flex-column flex-lg-row justify-content-between min-width-zero\">\n          <div className=\"min-width-zero\">\n            <NavLink to={{ pathname: ins + data.url }} target=\"_blank\">\n              <CardSubtitle className=\"truncate mb-1\">{data.full_name}</CardSubtitle>\n            </NavLink>\n            <CardText className=\"text-muted text-small mb-2\">\n              {data.contact_no}\n            </CardText>\n            <CardText className=\"theme-color-blueyale mb-2\">\n              <Link to={{ pathname: ins + data.url }} rel=\"noreferrer\" target=\"_blank\" className=\"theme-color-bluenavy\">Solution Link</Link>\n\n            </CardText>\n            <CardText className=\" mb-2\">\n              <Link to={{ pathname: ins + data.video_file }} rel=\"noreferrer\" target=\"_blank\" className=\"theme-color-bluenavy\">Solution video File</Link>\n            </CardText>\n            {/* <Button outline size=\"xs\" color=\"danger\">\n              Remove\n            </Button> */}\n          </div>\n          <CardText className=\"text-muted text-small mb-2\">\n            {data.created_at.substring(0, 9)}\n          </CardText>\n        </CardBody>\n      </div>\n    </Card>\n  );\n};\n\nexport default SubmissionCard;\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { Nav, NavItem, NavLink } from 'reactstrap';\nimport IntlMessages from '../../../../../helpers/IntlMessages';\n\nconst NavItems = ({ activeTab, setActiveTab }) => {\n  return (\n    <Nav tabs className=\"mb-2 card-header-tabs\">\n      <NavItem>\n        <NavLink\n          className={classNames({\n            active: activeTab === 'basics',\n            'nav-link': true,\n          })}\n          onClick={() => setActiveTab('basics')}\n          to=\"#\"\n          location={{}}\n        >\n          <IntlMessages id=\"menu.basics\" />\n        </NavLink>\n      </NavItem>\n\n      {/* <NavItem>\n        <NavLink\n          className={classNames({\n            active: activeTab === 'application',\n            'nav-link': true,\n          })}\n          onClick={() => setActiveTab('application')}\n          to=\"#\"\n          location={{}}\n        >\n          <IntlMessages id=\"menu.application\" />\n        </NavLink>\n      </NavItem> */}\n\n      <NavItem>\n        <NavLink\n          className={classNames({\n            active: activeTab === 'links',\n            'nav-link': true,\n          })}\n          onClick={() => setActiveTab('links')}\n          to=\"#\"\n          location={{}}\n        >\n          <IntlMessages id=\"menu.links\" />\n        </NavLink>\n      </NavItem>\n\n      {/* <NavItem>\n        <NavLink\n          className={classNames({\n            active: activeTab === 'brands',\n            'nav-link': true,\n          })}\n          onClick={() => setActiveTab('brands')}\n          to=\"#\"\n          location={{}}\n        >\n          <IntlMessages id=\"menu.brands\" />\n        </NavLink>\n      </NavItem> */}\n\n      <NavItem>\n        <NavLink\n          className={classNames({\n            active: activeTab === 'dates',\n            'nav-link': true,\n          })}\n          onClick={() => setActiveTab('dates')}\n          to=\"#\"\n          location={{}}\n        >\n          <IntlMessages id=\"menu.dates\" />\n        </NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink\n          className={classNames({\n            active: activeTab === 'prizes',\n            'nav-link': true,\n          })}\n          onClick={() => setActiveTab('prizes')}\n          to=\"#\"\n          location={{}}\n        >\n          <IntlMessages id=\"menu.prizes\" />\n        </NavLink>\n      </NavItem>\n\n      <NavItem>\n        <NavLink\n          className={classNames({\n            active: activeTab === 'judges',\n            'nav-link': true,\n          })}\n          onClick={() => setActiveTab('judges')}\n          to=\"#\"\n          location={{}}\n        >\n          <IntlMessages id=\"menu.judges\" />\n        </NavLink>\n      </NavItem>\n\n      <NavItem>\n        <NavLink\n          className={classNames({\n            active: activeTab === 'sponsors',\n            'nav-link': true,\n          })}\n          onClick={() => setActiveTab('sponsors')}\n          to=\"#\"\n          location={{}}\n        >\n          <IntlMessages id=\"menu.sponsors\" />\n        </NavLink>\n      </NavItem>\n\n      <NavItem>\n        <NavLink\n          className={classNames({\n            active: activeTab === 'faq',\n            'nav-link': true,\n          })}\n          onClick={() => setActiveTab('faq')}\n          to=\"#\"\n          location={{}}\n        >\n          <IntlMessages id=\"menu.faq\" />\n        </NavLink>\n      </NavItem>\n\n      <NavItem>\n        <NavLink\n          className={classNames({\n            active: activeTab === 'submission',\n            'nav-link': true,\n          })}\n          onClick={() => setActiveTab('submission')}\n          to=\"#\"\n          location={{}}\n        >\n          <IntlMessages id=\"Submission\" />\n        </NavLink>\n      </NavItem>\n\n      <NavItem>\n        <NavLink\n          className={classNames({\n            active: activeTab === 'feedback',\n            'nav-link': true,\n          })}\n          onClick={() => setActiveTab('feedback')}\n          to=\"#\"\n          location={{}}\n        >\n          <IntlMessages id=\"menu.feedback\" />\n        </NavLink>\n      </NavItem>\n    </Nav>\n  );\n};\n\nexport default NavItems;\n","import React from 'react';\nimport { FormGroup, Input, Label } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport IntlMessages from '../../helpers/IntlMessages';\n\nconst InputDisplay = ({ messageId, name, value, intputType = 'text' }) => {\n  return (\n    <FormGroup className=\"mb-2 mt-4\">\n      <Label className=\"lead\">\n        <IntlMessages id={messageId} />\n      </Label>\n\n      <Input\n        type={intputType}\n        className=\"form-control\"\n        name={name}\n        value={value}\n        disabled\n      />\n    </FormGroup>\n  );\n};\n\nInputDisplay.proptype = {\n  messageId: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.any.isRequired,\n  intputType: PropTypes.string,\n};\n\nexport default InputDisplay;\n","import classNames from 'classnames';\nimport React from 'react';\n// import { useHistory, useParams } from 'react-router-dom';\nimport {\n // Button,\n  CardBody,\n  FormGroup,\n  Label,\n  NavItem,\n  NavLink,\n  TabPane,\n} from 'reactstrap';\nimport {\n  Colxx,\n//  Separator,\n} from '../../../../../components/common/CustomBootstrap';\n// import { adminRoot } from '../../../../../constants/defaultValues';\nimport IntlMessages from '../../../../../helpers/IntlMessages';\nimport SubmissionCard from '../../../../../components/cards/SubmissionCard';\n\nconst SubmissionNavItem = ({ activeTab, setActiveTab }) => {\n  return (\n    <NavItem>\n      <NavLink\n        className={classNames({\n          active: activeTab === 'submission',\n          'nav-link': true,\n        })}\n        onClick={() => setActiveTab('submission')}\n        to=\"#\"\n        location={{}}\n      >\n        <IntlMessages id=\"Submission\" />\n      </NavLink>\n    </NavItem>\n  );\n};\n\n\nconst SubmissionTabPane = ({submission}) => {\n// const history = useHistory();\n//  const { id } = useParams();\n  return (\n    <TabPane tabId=\"submission\">\n      <Colxx xxs=\"12\" className=\"mt-4\">\n        <CardBody className=\"\">\n          {/* <FormGroup className=\"mb-4 d-flex justify-content-between\">\n            <Label className=\"lead\">\n              <IntlMessages id=\"Submission\" />\n            </Label>\n\n            <Button\n              onClick={() =>\n                history.push(`${adminRoot}/challenges/${id}/submission`)\n              }\n            >\n              Submit New\n            </Button>\n          </FormGroup> */}\n\n          {/* <Separator className=\"my-4\" /> */}\n\n          <FormGroup>\n            <Label className=\"h5\">Your Submissions </Label>\n          </FormGroup>\n\n          {submission.map((item) =>{\n             return (\n                  <SubmissionCard\n                    key={item.id} \n                    data={item} \n                  />\n                );\n          })}\n        </CardBody>\n      </Colxx>\n    </TabPane>\n  );\n};\n\nexport { SubmissionTabPane, SubmissionNavItem };\n","import React from 'react';\nimport {\n  CardBody,\n  CardSubtitle, CardText,\n  // FormGroup,\n // Label,\n} from 'reactstrap';\n// import { Colxx } from '../../../../../components/common/CustomBootstrap';\n// // import IntlMessages from '../../../../../helpers/IntlMessages';\n// import InputDisplay from '../../../../../containers/application/InputDisplay';\n\nconst FeedbackTabPane = ({ item }) => {\n  return (\n    <CardBody className=\"pl-0 align-self-center d-flex flex-column flex-lg-row justify-content-between min-width-zero\">\n          <div className=\"min-width-zero\">\n            <CardSubtitle className=\"truncate mb-1\">{item.comment}</CardSubtitle>\n            \n            <CardText className=\"text-muted text-small mb-2\">\n             {item.star} star\n            </CardText>\n          </div>\n        </CardBody>\n  );\n};\n\n// const ConnectFeedBackTabPane = connect(mapStateToProps, {})(FeedbackTabPane);\n\n// export { FeedbackNavItem, ConnectFeedBackTabPane as FeedbackTabPane };\nexport default FeedbackTabPane;","import React, { useState } from 'react';\n\nimport {  CardBody, Row, TabContent, TabPane } from 'reactstrap';\nimport FaqCard from '../../../../../components/cards/FaqCard';\nimport JudgeCard from '../../../../../components/cards/JudgeCard';\nimport SponsorCard from '../../../../../components/cards/SponsorCard';\nimport { Colxx } from '../../../../../components/common/CustomBootstrap';\n// import { hackthonApplication } from '../../../../../constants/defaultValues';\nimport InputDisplay from '../../../../../containers/application/InputDisplay';\n// import IntlMessages from '../../../../../helpers/IntlMessages';\nimport {SubmissionTabPane} from \"./submission\";\nimport FeedbackTabPane from \"./feedback\";\nimport PrizesList from '../../../../../components/application/PrizesList';\n\nconst TabPanes = ({ activeTab, hackInfo }) => {\n  const [showingIndex, setShowIndex] = useState(0);\n\n  const { hackathon, sponsors, judges, Faq, feedback } = hackInfo;\n\n  // const applicationAboutData = hackthonApplication.about.filter(({ value }) =>\n  //   application.about.includes(value)\n  // );\n  // const applicationContactData = hackthonApplication.contact.filter(\n  //   ({ value }) => application.contact.includes(value)\n  // );\n  // const applicationEducationData = hackthonApplication.education.filter(\n  //   ({ value }) => application.education.includes(value)\n  // );\n  // const applicationExpericeData = hackthonApplication.experience.filter(\n  //   ({ value }) => application.experience.includes(value)\n  // );\n  // const applicationOnlineProfileData = hackthonApplication.online_profiles.filter(\n  //   ({ value }) => application.online_profiles.includes(value)\n  // );\n\n  return (\n    <TabContent activeTab={activeTab}>\n      <TabPane tabId=\"basics\">\n        <CardBody>\n         <InputDisplay\n            messageId=\"challenges.hackathon-name\"\n            name=\"hackathon-name\"\n            value={hackathon.name}\n          />\n\n          <InputDisplay\n            messageId=\"challenges.hackathon-tagline\"\n            name=\"hackathon-tagline\"\n            value={hackathon.tagline}\n          />\n\n          <InputDisplay\n            messageId=\"challenges.about\"\n            name=\"hackathon-about\"\n            value={hackathon.about}\n            intputType=\"textarea\"\n          />\n\n          <InputDisplay\n            messageId=\"challenges.aproximate-participants\"\n            name=\"aproximate-participants\"\n            value={hackathon.aproximate_participants}\n          />\n\n          <InputDisplay\n            messageId=\"challenges.max-team-size\"\n            name=\"max-team-size\"\n            value={hackathon.max_team_size}\n          />\n        </CardBody>\n      </TabPane>\n\n      {/* <TabPane tabId=\"application\">\n        <Row>\n          <Colxx sm=\"12\">\n            <CardBody>\n              <div className=\"mb-4\">\n                <div className=\"lead h4\">\n                  <IntlMessages id=\"challenges.about-title\" />\n                </div>\n\n                {applicationAboutData.map((item) => (\n                  <Badge\n                    key={item.key}\n                    color=\"outline-primary\"\n                    pill\n                    className=\"m-2\"\n                  >\n                    <IntlMessages id={item.messageId} />\n                  </Badge>\n                ))}\n              </div>\n\n              <div className=\"mb-4\">\n                <div className=\"lead h4\">\n                  <IntlMessages id=\"challenges.education-title\" />\n                </div>\n\n                {applicationEducationData.map((item) => (\n                  <Badge\n                    key={item.key}\n                    color=\"outline-primary\"\n                    pill\n                    className=\"m-2\"\n                  >\n                    <IntlMessages id={item.messageId} />\n                  </Badge>\n                ))}\n              </div>\n\n              <div className=\"mb-4\">\n                <div className=\"lead h4\">\n                  <IntlMessages id=\"challenges.experience-title\" />\n                </div>\n\n                {applicationExpericeData.map((item) => (\n                  <Badge\n                    key={item.key}\n                    color=\"outline-primary\"\n                    pill\n                    className=\"m-2\"\n                  >\n                    <IntlMessages id={item.messageId} />\n                  </Badge>\n                ))}\n              </div>\n\n              <div className=\"mb-4\">\n                <div className=\"lead h4\">\n                  <IntlMessages id=\"challenges.online-profiles-title\" />\n                </div>\n\n                {applicationOnlineProfileData.map((item) => (\n                  <Badge\n                    key={item.key}\n                    color=\"outline-primary\"\n                    pill\n                    className=\"m-2\"\n                  >\n                    <IntlMessages id={item.messageId} />\n                  </Badge>\n                ))}\n              </div>\n\n              <div className=\"mb-4\">\n                <div className=\"lead h4\">\n                  <IntlMessages id=\"challenges.contact-title\" />\n                </div>\n\n                {applicationContactData.map((item) => (\n                  <Badge\n                    key={item.key}\n                    color=\"outline-primary\"\n                    pill\n                    className=\"m-2\"\n                  >\n                    <IntlMessages id={item.messageId} />\n                  </Badge>\n                ))}\n              </div>\n\n              <InputDisplay\n                messageId=\"challenges.custom-questions\"\n                name=\"theme-color-code\"\n                value=\"This is a Custom Question\"\n              />\n            </CardBody>\n          </Colxx>\n        </Row>\n      </TabPane> */}\n\n      <TabPane tabId=\"links\">\n        <Row>\n          <Colxx sm=\"12\">\n            <CardBody>\n              <InputDisplay\n                messageId=\"challenges.hackathon-website\"\n                name=\"hackathon-website\"\n                value={hackathon.hackathon_website}\n              />\n\n\n              <InputDisplay\n                messageId=\"challenges.contact-email\"\n                name=\"contact-email\"\n                value={hackathon.contact_email}\n              />\n\n              <InputDisplay\n                messageId=\"challenges.link-to-code-of-control\"\n                name=\"link-to-code-of-control\"\n                value={hackathon.link_to_code_of_control}\n              />\n\n              <InputDisplay\n                messageId=\"challenges.facebook\"\n                name=\"facebook\"\n                value={hackathon.facebook}\n              />\n\n              <InputDisplay\n                messageId=\"challenges.twitter\"\n                name=\"twitter\"\n                value={hackathon.twitter}\n              />\n\n              <InputDisplay\n                messageId=\"challenges.instagram\"\n                name=\"instagram\"\n                value={hackathon.instagram}\n              />\n\n              <InputDisplay\n                messageId=\"challenges.linkedin\"\n                name=\"linkedin\"\n                value={hackathon.linkedin}\n              />\n            </CardBody>\n          </Colxx>\n        </Row>\n      </TabPane>\n\n      <TabPane tabId=\"brands\">\n        <Row>\n          <Colxx sm=\"12\">\n            <CardBody>\n              <InputDisplay\n                messageId=\"challenges.theme-title\"\n                name=\"theme-color-code\"\n                value={hackathon.theme_color_code}\n              />\n            </CardBody>\n          </Colxx>\n        </Row>\n      </TabPane>\n\n      <TabPane tabId=\"dates\">\n        <Row>\n          <Colxx sm=\"12\">\n            <CardBody>\n              <InputDisplay\n                messageId=\"challenges.hackthon-application-begins\"\n                name=\"application-start\"\n                value={hackathon.application_start}\n              />\n\n              <InputDisplay\n                messageId=\"challenges.hackthon-application-ends\"\n                name=\"application-ends\"\n                value={hackathon.application_end}\n              />\n\n              <InputDisplay\n                messageId=\"challenges.hackthon-hackathon-begins\"\n                name=\"hackathon-starts\"\n                value={hackathon.hackathon_start}\n              />\n\n              <InputDisplay\n                messageId=\"challenges.hackthon-hackathon-ends\"\n                name=\"hackathon-ends\"\n                value={hackathon.hackathon_date}\n              />\n\n              <InputDisplay\n                messageId=\"challenges.announcement-results\"\n                name=\"accouncement-date\"\n                value={hackathon.results_date}\n              />\n\n              {/* <InputDisplay\n                messageId=\"challenges.timezone\"\n                name=\"timezone\"\n                value={hackathon.timezone}\n              /> */}\n            </CardBody>\n          </Colxx>\n        </Row>\n      </TabPane>\n      <TabPane tabId=\"prizes\">\n        <Row>\n        <Colxx xxs=\"12\" className=\"prizel\">\n          <PrizesList id={hackathon.id} />\n        </Colxx>\n          {/* <Colxx sm=\"12\">\n            <CardBody>\n              {prizes.map((item) => (\n                <Badge\n                  key={item.id}\n                  color=\"outline-primary\"\n                  pill\n                  className=\"m-2\"\n                >\n                  <IntlMessages id={item.name} />\n                </Badge>\n              ))}\n            </CardBody>\n          </Colxx> */}\n        </Row>\n      </TabPane>\n\n      <TabPane tabId=\"sponsors\">\n        <Row>\n          <Colxx sm=\"12\">\n            <CardBody>\n              {sponsors.map((item) => (\n                <SponsorCard key={item.id} data={item} />\n              ))}\n            </CardBody>\n          </Colxx>\n        </Row>\n      </TabPane>\n\n      <TabPane tabId=\"judges\">\n        <Row>\n          <Colxx sm=\"12\">\n            <CardBody>\n              {judges.map((item) => (\n              <JudgeCard\n              key={item.id} \n              data={item} \n            />\n              ))}\n            </CardBody>\n          </Colxx>\n        </Row>\n      </TabPane>\n\n      <TabPane tabId=\"faq\">\n        <Colxx xxs=\"12\" className=\"mt-4\">\n          {Faq.map((item, index) => (\n            <FaqCard\n              // eslint-disable-next-line react/no-array-index-key\n              key={`faqItem_${index}`}\n              item={item}\n              index={index}\n              showingIndex={showingIndex}\n              setShowIndex={setShowIndex}\n            />\n          ))}\n        </Colxx>\n      </TabPane>\n\n      <SubmissionTabPane tabId=\"submission\" submission={hackInfo.hackathon_submission}/>\n\n      <TabPane tabId=\"feedback\">\n        <Colxx sm=\"12\">\n          <CardBody>\n          {feedback.map((item) => (\n            <FeedbackTabPane \n              key={item.id}\n              item = {item}\n              hackathon={hackathon} \n            />\n          ))}\n          </CardBody>\n        </Colxx>\n      </TabPane>\n\n    </TabContent>\n\n\n  );\n};\n\nexport default TabPanes;\n","import React from 'react';\nimport { Card, CardBody, CardTitle } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\n// import ParticipantCard from '../../../../../components/cards/ParticipantCard';\n\nimport IntlMessages from '../../../../../helpers/IntlMessages';\n\nconst ParticipantList = ({ data, match }) => {\n  return (\n    <>\n      <Card className=\"mb-4\">\n        <CardBody>\n          <CardTitle className=\"h1 mb-0 \">\n            <div className=\"d-flex justify-content-between \">\n              <IntlMessages id=\"challenges.participants\" />\n              {/* <pre>{JSON.stringify(data, null, 2)}</pre> */}\n\n              {data.length ? (\n                <>\n                  {`  (${data.length})`}\n                  <NavLink to={`${match.url}/participants`} className=\"p-0 m-0\">\n                    See all <i className=\"simple-icon-arrow-right-circle m-2\" />\n                  </NavLink>\n                </>\n              ) : null}\n            </div>\n          </CardTitle>\n        </CardBody>\n      </Card>\n\n      {data.length ? null : (\n        <Card className=\"mb-4\">\n          <CardBody>\n            <CardTitle className=\"h1 mb-0\">Currently No Participants</CardTitle>\n          </CardBody>\n        </Card>\n      )}\n    </>\n  );\n};\n\nexport default ParticipantList;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Lightbox from 'react-image-lightbox';\nimport img from \"../../assets/img/profiles/profile.png\";\n\nconst SingleLightbox = ({ thumb, className, large }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  let isImg = false;\n  if(thumb !== null)\n  {\n    isImg = true;\n  }\n  console.log(thumb);\n  return (\n    <>\n      <NavLink to=\"#\" location={{}} onClick={() => setIsOpen(true)}>\n        <img \n          alt=\"Not Found\"\n          src={isImg?thumb:img}\n          className={className} \n          width=\"500\" \n        />\n      </NavLink>\n      {isOpen && (\n        <Lightbox mainSrc={large} onCloseRequest={() => setIsOpen(false)} />\n      )}\n    </>\n  );\n};\nexport default SingleLightbox;\n","import React from 'react';\n\nimport { Card, CardBody, NavLink } from 'reactstrap';\n\nimport Markdown from 'markdown-to-jsx';\n\nimport IntlMessages from '../../../../../helpers/IntlMessages';\n\nconst HackDetails = ({ hackInfo }) => {\n  const { hackathon } = hackInfo;\n\n  return (\n    <Card className=\"mb-4\">\n      <CardBody>\n        <div className=\"text-center pt-4\">\n          <h1 className=\"pt-2\">{hackathon.name}</h1>\n        </div>\n        <Markdown className=\"mb-3\">{hackathon.about}</Markdown>\n        {/* <p className=\"mb-3\">{hackathon.about}</p> */}\n        <p className=\"text-muted text-small mb-2\">\n          {/* <IntlMessages id=\"pages.location\" /> */}\n          Tagline\n        </p>\n        <p className=\"mb-3\">{hackathon.tagline}</p>\n        {/* <p className=\"text-muted text-small mb-2\">\n          <IntlMessages id=\"pages.responsibilities\" />\n        </p>\n        <p className=\"mb-3\">\n          <Badge color=\"outline-secondary\" className=\"mb-1 mr-1\" pill>\n            FRONTEND\n          </Badge>\n          <Badge color=\"outline-secondary\" className=\"mb-1 mr-1\" pill>\n            JAVASCRIPT\n          </Badge>\n          <Badge color=\"outline-secondary\" className=\"mb-1 mr-1\" pill>\n            SECURITY\n          </Badge>\n          <Badge color=\"outline-secondary\" className=\"mb-1 mr-1\" pill>\n            DESIGN\n          </Badge>\n        </p> */}\n        <p className=\"text-muted text-small mb-2\">\n          <IntlMessages id=\"menu.contact\" />\n        </p>\n        <div className=\"social-icons\">\n          <ul className=\"list-unstyled list-inline\">\n            <li className=\"list-inline-item\">\n              <NavLink href={hackathon.facebook} target=\"_blank\">\n                <i className=\"simple-icon-social-facebook\" />\n              </NavLink>\n            </li>\n            <li className=\"list-inline-item\">\n              <NavLink href={hackathon.twitter} target=\"_blank\">\n                <i className=\"simple-icon-social-twitter\" />\n              </NavLink>\n            </li>\n            <li className=\"list-inline-item\">\n              <NavLink href={hackathon.instagram} target=\"_blank\">\n                <i className=\"simple-icon-social-instagram\" />\n              </NavLink>\n            </li>\n            <li className=\"list-inline-item\">\n              <NavLink href={hackathon.linkedin} target=\"_blank\">\n                <i className=\"simple-icon-social-linkedin\" />\n              </NavLink>\n            </li>\n            <li className=\"list-inline-item\">\n              <NavLink href={hackathon.hackathon_website} target=\"_blank\">\n                <i className=\"simple-icon-link\" />\n              </NavLink>\n            </li>\n          </ul>\n        </div>\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default HackDetails;\n","/* eslint-disable no-unused-vars */\nimport React, { useState } from 'react';\nimport { Button, Card, CardHeader, Row } from 'reactstrap';\n\nimport {\n  Colxx,\n  Separator,\n} from '../../../../components/common/CustomBootstrap';\n\nimport Breadcrumb from '../../../../containers/navs/Breadcrumb';\nimport AppError from '../../../../helpers/AppError';\nimport IntlMessages from '../../../../helpers/IntlMessages';\nimport NavItems from './components/NavItems';\nimport TabPanes from './components/TabPanes';\n\nimport { adminRoot } from '../../../../constants/defaultValues';\nimport useFetch from '../../../../hooks/use-fetch';\nimport ParticipantList from './components/ParicipantList';\nimport SingleLightbox from '../../../../components/application/SingleLightbox';\nimport HackDetails from './components/HackDetails';\n\nconst Details = ({ match }) => {\n  const { id } = match.params;\n\n  if (!id) throw new AppError('Please Provide Hackathon ID');\n\n  const [activeTab, setActiveTab] = useState('basics');\n\n  const { loading, data, error } = useFetch(`/getdetails/${id}`, 'getdetails');\n\n  if (loading) return <div className=\"loading\" />;\n\n  if (error) throw new AppError(error);\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"9\">\n          <Breadcrumb heading=\"menu.details\" match={match} />\n        </Colxx>\n        <Colxx xxs=\"3\">\n        <div className=\"mx-auto d-flex justify-content-around\">\n        <Button size=\"sm\" href={`${adminRoot}/challenges/basics/${id}`}>\n            <IntlMessages id=\"challenges.edit-hackathon\" />\n          </Button>\n          <Button size=\"sm\" href={`${adminRoot}/challenges/details/${id}/results`}>\n            <IntlMessages id=\"challenges.result-hackathon\" />\n          </Button>\n        </div>\n        </Colxx>\n      </Row>\n\n      <Separator className=\"mb-5\" />\n\n      <Row>\n        <Colxx xxs=\"12\" className=\"mb-5\">\n          <Card>\n            <SingleLightbox\n              thumb={data.hackathon.hackathon_cover_img}\n              large={data.hackathon.hackathon_cover_img}\n              className=\"social-header card-img\"\n            />\n          </Card>\n        </Colxx>\n\n        <Colxx xxs=\"12\" sm=\"12\" className=\"mb-4 col-left\">\n          <SingleLightbox\n            thumb={data.hackathon.hackathon_logo}\n            large={data.hackathon.hackathon_logo}\n            className=\"img-thumbnail card-img social-profile-img\"\n          />\n          {!loading && <HackDetails hackInfo={data} />}\n          {!loading && (\n            <ParticipantList id={id} data={data.Participant} match={match} />\n          )}\n        </Colxx>\n\n        <Colxx xxs=\"12\" sm=\"12\" className=\"mb-4 col-right\">\n          <Card className=\"mb-4\">\n            <CardHeader>\n              <NavItems activeTab={activeTab} setActiveTab={setActiveTab} />\n              <TabPanes activeTab={activeTab} hackInfo={data} />\n\n              {/* <pre>{JSON.stringify(data, null, 2)}</pre> */}\n            </CardHeader>\n          </Card>\n        </Colxx>\n      </Row>\n    </>\n  );\n};\n\nexport default Details;\n"],"sourceRoot":""}