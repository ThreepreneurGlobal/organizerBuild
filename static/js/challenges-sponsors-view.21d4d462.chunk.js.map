{"version":3,"sources":["containers/navs/Breadcrumb.js","hooks/use-request.js","components/cards/SponsorCard.js","components/application/AddSponsorModal.js","components/application/SponsorsList.js","views/app/Challenges/sponsors-view.js"],"names":["getMenuTitle","sub","adminRoot","id","getUrl","path","split","BreadcrumbItems","match","substr","paths","filter","Boolean","length","indexOf","x","className","map","index","active","to","BreadcrumbContainer","heading","useRequest","url","method","data","headers","nextSuccess","nextError","useState","responseData","setData","loading","setLoading","error","setError","a","instance","response","success","log","SponsorCard","isImg","logo","src","alt","width","name","connect","authUser","applicationData","accessToken","sponsors","getSponsorsAction","getSponsors","setOpenAddModal","formData","FormData","hackathon_id","values","setValues","Authorization","NotificationManager","wait","password","doRequest","ModalHeader","IntlMessages","ModalBody","FormGroup","Label","Input","type","value","onChange","event","key","target","handleChange","InputGroup","CustomInput","accept","files","delete","append","ModalFooter","Button","color","onClick","useEffect","AppError","Card","CardBody","role","item","Sponsors","params","history","useHistory","openAddModal","Row","xxs","Breadcrumb","md","label","Modal","isOpen","toggle","push"],"mappings":"+JAAA,4DAOMA,EAAe,SAACC,GACpB,MAAI,WAAIA,KAAUC,IAAkB,cAAC,IAAD,CAAcC,GAAG,cAC9C,cAAC,IAAD,CAAcA,GAAE,eAAUF,MAG7BG,EAAS,SAACC,EAAMJ,GACpB,OAAOI,EAAKC,MAAML,GAAK,GAAKA,GAgBxBM,EAAkB,SAAC,GAAe,IAChCF,EAD+B,EAAZG,MACNH,KAAKI,OAAO,GAC3BC,EAAQL,EAAKC,MAAM,KAAKK,OAAOC,SAKnC,OAHIF,EAAMA,EAAMG,OAAS,GAAGC,QAAQ,MAAQ,IAC1CJ,EAAQA,EAAMC,QAAO,SAACI,GAAD,OAA2B,IAApBA,EAAED,QAAQ,SAGtC,mCACE,cAAC,IAAD,CAAYE,UAAU,gEAAtB,SACGN,EAAMO,KAAI,SAAChB,EAAKiB,GACf,OACE,cAAC,IAAD,CAA4BC,OAAQT,EAAMG,SAAWK,EAAQ,EAA7D,SACGR,EAAMG,SAAWK,EAAQ,EACxB,cAAC,IAAD,CAASE,GAAE,WAAMhB,EAAOC,EAAMJ,IAA9B,SACGD,EAAaC,KAGhBD,EAAaC,IANIiB,WAgBlBG,IAzCa,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,QAASd,EAAY,EAAZA,MACtC,OACE,qCACGc,GACC,6BACE,cAAC,IAAD,CAAcnB,GAAImB,MAGrBd,EAAQ,cAACD,EAAD,CAAiBC,MAAOA,IAAY,U,4FCmBpCe,IAvCI,SAAC,GAA4D,IAA1DC,EAAyD,EAAzDA,IAAKC,EAAoD,EAApDA,OAAQC,EAA4C,EAA5CA,KAAMC,EAAsC,EAAtCA,QAASC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,UAAgB,EAC7CC,mBAAS,IADoC,mBACtEC,EADsE,KACxDC,EADwD,OAE/CF,oBAAS,GAFsC,mBAEtEG,EAFsE,KAE7DC,EAF6D,OAGnDJ,mBAAS,IAH0C,mBAGtEK,EAHsE,KAG/DC,EAH+D,KAoC7E,MAAO,CA/BQ,uCAAG,4BAAAC,EAAA,sEAEdD,EAAS,MACTF,GAAW,GAHG,SAISI,YAAS,CAC9Bd,MACAC,SACAE,UACAD,SARY,QAIRa,EAJQ,QAWDb,KAAKc,SACZZ,GACFA,IAEFM,GAAW,GACXF,EAAQO,EAASb,KAAKA,QAElBG,GACFA,EAAUU,EAASb,KAAKS,OAE1BD,GAAW,GACXE,EAASG,EAASb,KAAKS,QAtBX,gDAyBdM,YAAI,EAAD,IACHP,GAAW,GACXE,EAAS,EAAD,IA3BM,yDAAH,qDA+BIH,EAASE,EAAOJ,K,iCCxCrC,qDAiCeW,IA5BK,SAAC,GAAc,IAAZhB,EAAW,EAAXA,KACjBiB,GAAQ,EAMZ,OAJgD,OAA7CjB,EAAKkB,KAAKpC,MAAM,2BAEjBmC,GAAQ,GAGR,eAAC,IAAD,CAAM3B,UAAU,uBAAhB,UACE,cAAC,IAAD,CAASI,GAAIM,EAAKkB,KAAM5B,UAAU,SAAlC,SACE,qBAAK6B,IAAKF,EAAMjB,EAAKkB,KARf,+BAQyBE,IAAI,YAAYC,MAAM,QAAQ/B,UAAU,UAEzE,qBAAKA,UAAU,qCAAf,SACE,cAAC,IAAD,CAAUA,UAAU,gGAApB,SACE,qBAAKA,UAAU,iBAAf,SACE,cAAC,IAAD,CAASI,GAAIM,EAAKkB,KAAlB,SACE,cAAC,IAAD,CAAc5B,UAAU,gBAAxB,SAAyCU,EAAKsB,oB,kQCyI7CC,eANS,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,gBAGnC,MAAO,CAAEC,YAFeF,EAAhBE,YAEcC,SADeF,EAA7BE,SACwBpB,QADKkB,EAAnBlB,QACuBE,MADJgB,EAAVhB,SAIW,CACtCmB,kBAAmBC,MADNN,EAzIS,SAAC,GAKlB,IAJLO,EAII,EAJJA,gBACArD,EAGI,EAHJA,GACAiD,EAEI,EAFJA,YACAE,EACI,EADJA,kBAEMG,EAAW,IAAIC,SADjB,EAEwB5B,mBAAS,CACnC6B,aAAcxD,EACd6C,KAAM,GACNJ,KAAM,OALJ,mBAEGgB,EAFH,KAEWC,EAFX,OAsByBtC,YAAW,CACtCC,IAAK,eACLC,OAAQ,OACRE,QAAS,CACP,eAAgB,sBAChBmC,cAAc,UAAD,OAAYV,IAE3B1B,KAAM+B,EACN7B,YAAa,WACXmC,IAAoBvB,QAClB,6BACA,6BACA,IACA,KACA,KACA,IAEFc,EAAkBF,EAAajD,GAC/B6D,YAAK,MAAM,WACTH,EAAU,2BAAKD,GAAN,IAAcK,SAAU,UACjCT,GAAgB,OAGpB3B,UAAW,SAACM,GACV4B,IAAoB5B,MAClBA,EACA,2BACA,IACA,KACA,KACA,OApDF,mBAsBG+B,EAtBH,KAsBcjC,EAtBd,KAgEJ,OACE,qCACE,cAACkC,EAAA,EAAD,UACE,oBAAInD,UAAU,OAAd,SACE,cAACoD,EAAA,EAAD,CAAcjE,GAAG,uDAIrB,eAACkE,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,cAACH,EAAA,EAAD,CAAcjE,GAAG,+BAEnB,cAACqE,EAAA,EAAD,CACEC,KAAK,OACLC,MAAOd,EAAOZ,KACd2B,SAAU,SAACC,GAAD,OAjEC,SAACA,EAAOC,GAAwB,IAAnBH,EAAkB,wDAClDb,EAAU,2BACLD,GADI,kBAENiB,EAAMH,EAAQE,EAAQA,EAAME,OAAOJ,SA8DTK,CAAaH,EAAO,cAI7C,eAACN,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,cAACH,EAAA,EAAD,CAAcjE,GAAG,4CAEnB,cAAC6E,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACER,KAAK,OACLtE,GAAG,OACH6C,KAAK,aACLkC,OAAO,mCACPP,SAtFa,SAACC,GACxBf,EAAU,2BAAKD,GAAN,kBAAegB,EAAME,OAAO3E,GAAKyE,EAAME,OAAOK,MAAM,MAC7D1B,EAAS2B,OAAOR,EAAME,OAAO3E,IAC7BsD,EAAS4B,OAAT,UAAmBT,EAAME,OAAO3E,IAAMyD,EAAOgB,EAAME,OAAO3E,gBAyFxD,eAACmF,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CACEpF,GAAG,qBACHqF,MAAM,UACNxE,UAAS,wCACPiB,EAAU,eAAiB,IAE7BwD,QAAS,kBAjDfhC,EAAS4B,OAAO,eAAgBlF,GAChCsD,EAAS4B,OAAO,OAAQzB,EAAOZ,MAC/BS,EAAS4B,OAAO,OAAOzB,EAAOhB,WAC9BsB,KAwCI,UAQE,uBAAMlD,UAAU,yBAAhB,UACE,sBAAMA,UAAU,YAChB,sBAAMA,UAAU,YAChB,sBAAMA,UAAU,eAElB,sBAAMA,UAAU,QAAhB,SACE,cAACoD,EAAA,EAAD,CAAcjE,GAAG,0CAGrB,cAACoF,EAAA,EAAD,CAAQC,MAAM,SAASC,QAAS,kBAAMjC,GAAgB,IAAtD,SACE,cAACY,EAAA,EAAD,CAAcjE,GAAG,mD,0CCxFZ8C,eANS,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,gBAGnC,MAAO,CAAEC,YAFeF,EAAhBE,YAEcC,SADeF,EAA7BE,SACwBpB,QADKkB,EAAnBlB,QACuBE,MADJgB,EAAVhB,SAIW,CACtCmB,kBAAmBC,MADNN,EA/CM,SAAC,GAOf,IANL9C,EAMI,EANJA,GACAiD,EAKI,EALJA,YACAC,EAII,EAJJA,SACApB,EAGI,EAHJA,QACAE,EAEI,EAFJA,MACAmB,EACI,EADJA,kBAMA,GAJAoC,qBAAU,WACRpC,EAAkBF,EAAajD,KAC9B,IAECgC,EAAO,MAAM,IAAIwD,IAASxD,GAE9B,OACE,qCACE,cAACyD,EAAA,EAAD,CAAM5E,UAAU,OAAhB,SACE,cAAC6E,EAAA,EAAD,UACE,oBAAI7E,UAAU,KAAd,SACE,cAACoD,EAAA,EAAD,CAAcjE,GAAG,oCAKtB8B,EACC,qBAAKjB,UAAU,oCAAf,SACE,qBAAKA,UAAU,UAAU8E,KAAK,SAA9B,SACE,sBAAM9E,UAAU,UAAhB,4BAIJ,mCACGqC,EAASpC,KAAI,SAAC8E,GAAD,OACZ,cAACrD,EAAA,EAAD,CAA2BhB,KAAMqE,GAAfA,EAAK5F,eCsDpB6F,UA5EE,SAAC,GAAe,IAAbxF,EAAY,EAAZA,MACVL,EAAOK,EAAMyF,OAAb9F,GAER,IAAKA,EAAI,MAAM,IAAIwF,IAAS,iCAE5B,IAAMO,EAAUC,cALc,EAOUrE,oBAAS,GAPnB,mBAOvBsE,EAPuB,KAOT5C,EAPS,KAS9B,OACE,qCACE,cAAC6C,EAAA,EAAD,UACE,eAAC,IAAD,CAAOC,IAAI,KAAX,UACE,cAACC,EAAA,EAAD,CAAYjF,QAAQ,gBAAgBd,MAAOA,IAC3C,cAAC,IAAD,CAAWQ,UAAU,cAIzB,eAACqF,EAAA,EAAD,CAAKrF,UAAU,yBAAf,UACE,cAAC,IAAD,CAAOsF,IAAI,KAAKE,GAAG,IAAnB,SACE,cAAC,EAAD,CAAcrG,GAAIA,MAGpB,cAAC,IAAD,CAAOmG,IAAI,KAAKE,GAAG,IAAnB,SACE,cAACZ,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACQ,EAAA,EAAD,CAAKrF,UAAU,6BAAf,SACE,cAACuE,EAAA,EAAD,CAAQE,QAAS,kBAAMjC,GAAgB,IAAvC,SACE,cAACY,EAAA,EAAD,CAAcjE,GAAG,sCAIrB,cAACkG,EAAA,EAAD,CAAKrF,UAAU,6BAAf,SACE,cAACiE,EAAA,EAAD,CACER,KAAK,WACLgC,MAAO,cAACrC,EAAA,EAAD,CAAcjE,GAAG,wCAI5B,cAACuG,EAAA,EAAD,CACEC,OAAQP,EACRQ,OAAQ,kBAAMpD,GAAiB4C,IAFjC,SAIE,cAAC,EAAD,CAAiB5C,gBAAiBA,EAAiBrD,GAAIA,gBAOjE,cAACkG,EAAA,EAAD,UACE,cAAC,IAAD,UACE,cAAC/B,EAAA,EAAD,CAAWtD,UAAU,cAArB,SAUE,cAACuE,EAAA,EAAD,CACEC,MAAM,UACNxE,UAAU,MACVyE,QAAS,kBAAMS,EAAQW,KAAR,UAAgB3G,IAAhB,mCAAoDC,KAHrE,SAKE,cAACiE,EAAA,EAAD,CAAcjE,GAAG","file":"static/js/challenges-sponsors-view.21d4d462.chunk.js","sourcesContent":["/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport IntlMessages from '../../helpers/IntlMessages';\nimport { adminRoot } from '../../constants/defaultValues';\n\nconst getMenuTitle = (sub) => {\n  if (`/${sub}` === adminRoot) return <IntlMessages id=\"menu.home\" />;\n  return <IntlMessages id={`menu.${sub}`} />;\n};\n\nconst getUrl = (path, sub) => {\n  return path.split(sub)[0] + sub;\n};\n\nconst BreadcrumbContainer = ({ heading, match }) => {\n  return (\n    <>\n      {heading && (\n        <h1>\n          <IntlMessages id={heading} />\n        </h1>\n      )}\n      {match ? <BreadcrumbItems match={match} /> : null}\n    </>\n  );\n};\n\nconst BreadcrumbItems = ({ match }) => {\n  const path = match.path.substr(1);\n  let paths = path.split('/').filter(Boolean);\n\n  if (paths[paths.length - 1].indexOf(':') > -1) {\n    paths = paths.filter((x) => x.indexOf(':') === -1);\n  }\n  return (\n    <>\n      <Breadcrumb className=\"pt-0 breadcrumb-container d-none d-sm-block d-lg-inline-block\">\n        {paths.map((sub, index) => {\n          return (\n            <BreadcrumbItem key={index} active={paths.length === index + 1}>\n              {paths.length !== index + 1 ? (\n                <NavLink to={`/${getUrl(path, sub, index)}`}>\n                  {getMenuTitle(sub)}\n                </NavLink>\n              ) : (\n                getMenuTitle(sub)\n              )}\n            </BreadcrumbItem>\n          );\n        })}\n      </Breadcrumb>\n    </>\n  );\n};\n\nexport default BreadcrumbContainer;\n","import { useState } from 'react';\nimport instance from '../helpers/axiosInstance';\nimport { log } from '../helpers/Utils';\n\nconst useRequest = ({ url, method, data, headers, nextSuccess, nextError }) => {\n  const [responseData, setData] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const doRequest = async () => {\n    try {\n      setError(null);\n      setLoading(true);\n      const response = await instance({\n        url,\n        method,\n        headers,\n        data,\n      });\n\n      if (response.data.success) {\n        if (nextSuccess) {\n          nextSuccess();\n        }\n        setLoading(false);\n        setData(response.data.data);\n      } else {\n        if (nextError) {\n          nextError(response.data.error);\n        }\n        setLoading(false);\n        setError(response.data.error);\n      }\n    } catch (err) {\n      log(err);\n      setLoading(false);\n      setError(err);\n    }\n  };\n\n  return [doRequest, loading, error, responseData];\n};\n\nexport default useRequest;\n","import React from 'react';\nimport { /* Button, */ Card, CardBody, CardSubtitle } from 'reactstrap';\n\nimport { NavLink } from 'react-router-dom';\n\nconst SponsorCard = ({ data }) => {\n  let isImg = false;\n  const img = \"/assets/img/profiles/l-2.jpg\"\n  if(data.logo.match(/\\.(jpeg|jpg|gif|png)$/) !== null)\n  {\n    isImg = true;\n  }\n  return (\n    <Card className=\"d-flex flex-row mb-4\">\n      <NavLink to={data.logo} className=\"d-flex\">\n        <img src={isImg?data.logo:img} alt=\"Not Found\" width=\"100px\" className=\"m-4\" />\n      </NavLink>\n      <div className=\" d-flex flex-grow-1 min-width-zero\">\n        <CardBody className=\" pl-0 align-self-center d-flex flex-column flex-lg-row justify-content-between min-width-zero\">\n          <div className=\"min-width-zero\">\n            <NavLink to={data.logo}>\n              <CardSubtitle className=\"truncate mb-1\">{data.name}</CardSubtitle>\n            </NavLink>\n            {/* <Button outline size=\"xs\" color=\"danger\">\n              Remove\n            </Button> */}\n          </div>\n        </CardBody>\n      </div>\n    </Card>\n  );\n};\n\nexport default SponsorCard;\n","/* eslint-disable camelcase */\n/* eslint-disable prefer-promise-reject-errors */\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Button,\n  CustomInput,\n  FormGroup,\n  Input,\n  InputGroup,\n  Label,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n} from 'reactstrap';\nimport IntlMessages from '../../helpers/IntlMessages';\nimport { wait } from '../../helpers/Utils';\nimport useRequest from '../../hooks/use-request';\nimport { getSponsors } from '../../redux/actions';\nimport { NotificationManager } from '../common/react-notifications';\n\nconst AddSponsorModel = ({\n  setOpenAddModal,\n  id,\n  accessToken,\n  getSponsorsAction,\n}) => {\n  const formData = new FormData();\n  const [values, setValues] = useState({\n    hackathon_id: id,\n    name: '',\n    logo: null,\n  });\n  \n  const handleFileChange = (event) => {\n    setValues({ ...values, [event.target.id]: event.target.files[0] });\n    formData.delete(event.target.id);\n    formData.append(`${event.target.id}`, values[event.target.id]);\n\n  };\n\n  const handleChange = (event, key, value = false) => {\n    setValues({\n      ...values,\n      [key]: value ? event : event.target.value,\n    });\n  };\n\n  const [doRequest, loading] = useRequest({\n    url: '/addSponsors',\n    method: 'POST',\n    headers: {\n      'Content-Type': 'multipart/form-data',\n      Authorization: `Bearer ${accessToken}`,                \n    },\n    data: formData,\n    nextSuccess: () => {\n      NotificationManager.success(\n        'Sponsor added successfully',\n        'Application Update Success',\n        3000,\n        null,\n        null,\n        ''\n      );\n      getSponsorsAction(accessToken, id);\n      wait(1200, () => {\n        setValues({ ...values, password: 'null' });\n        setOpenAddModal(false);\n      });\n    },\n    nextError: (error) => {\n      NotificationManager.error(\n        error,\n        'Application Update Error',\n        3000,\n        null,\n        null,\n        ''\n      );\n    },\n  });\n\n  const handleSubmit = () => {\n    formData.append('hackathon_id', id);\n    formData.append('name', values.name);\n    formData.append('logo',values.logo);\n    doRequest();\n  };\n\n  return (\n    <>\n      <ModalHeader>\n        <h2 className=\"lead\">\n          <IntlMessages id=\"challenges.modal.application-add-sponsor-title\" />\n        </h2>\n      </ModalHeader>\n\n      <ModalBody>\n        <FormGroup>\n          <Label>\n            <IntlMessages id=\"challenges.modal.sponsor\" />\n          </Label>\n          <Input\n            type=\"text\"\n            value={values.name}\n            onChange={(event) => handleChange(event, 'name')}\n          />\n        </FormGroup>\n\n        <FormGroup>\n          <Label>\n            <IntlMessages id=\"challenges.modal.sponsor-upload-image\" />\n          </Label>\n          <InputGroup>\n            <CustomInput \n              type=\"file\"\n              id=\"logo\" \n              name=\"customFile\"\n              accept=\"image/jpeg, image/jpg, image/png\"\n              onChange={handleFileChange}\n            />\n          </InputGroup>\n        </FormGroup>\n      </ModalBody>\n\n      <ModalFooter>\n        <Button\n          id=\"add-sponsor-button\"\n          color=\"primary\"\n          className={`btn-shadow btn-multiple-state ${\n            loading ? 'show-spinner' : ''\n          }`}\n          onClick={() => handleSubmit(values)}\n        >\n          <span className=\"spinner d-inline-block\">\n            <span className=\"bounce1\" />\n            <span className=\"bounce2\" />\n            <span className=\"bounce3\" />\n          </span>\n          <span className=\"label\">\n            <IntlMessages id=\"challenges.modal.application-add\" />\n          </span>\n        </Button>\n        <Button color=\"danger\" onClick={() => setOpenAddModal(false)}>\n          <IntlMessages id=\"challenges.modal.application-cancel\" />\n        </Button>\n      </ModalFooter>\n    </>\n  );\n};\n\nconst mapStateToProps = ({ authUser, applicationData }) => {\n  const { accessToken } = authUser;\n  const { sponsors, loading, error } = applicationData;\n  return { accessToken, sponsors, loading, error };\n};\n\nexport default connect(mapStateToProps, {\n  getSponsorsAction: getSponsors,\n})(AddSponsorModel);\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Card, CardBody } from 'reactstrap';\nimport AppError from '../../helpers/AppError';\nimport IntlMessages from '../../helpers/IntlMessages';\nimport { getSponsors } from '../../redux/actions';\nimport SponsorCard from '../cards/SponsorCard';\n\n\nconst SponsorsList = ({\n  id,\n  accessToken,\n  sponsors,\n  loading,\n  error,\n  getSponsorsAction,\n}) => {\n  useEffect(() => {\n    getSponsorsAction(accessToken, id);\n  }, []);\n\n  if (error) throw new AppError(error);\n\n  return (\n    <>\n      <Card className=\"mb-4\">\n        <CardBody>\n          <h3 className=\"h3\">\n            <IntlMessages id=\"challenges.added-sponsors\" />\n          </h3>\n        </CardBody>\n      </Card>\n\n      {loading ? (\n        <div className=\"d-flex justify-content-center m-4\">\n          <div className=\"loading\" role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n          </div>\n        </div>\n      ) : (\n        <>\n          {sponsors.map((item) => (\n            <SponsorCard key={item.id} data={item} />\n          ))}\n        </>\n      )}\n    </>\n  );\n};\n\nconst mapStateToProps = ({ authUser, applicationData }) => {\n  const { accessToken } = authUser;\n  const { sponsors, loading, error } = applicationData;\n  return { accessToken, sponsors, loading, error };\n};\n\nexport default connect(mapStateToProps, {\n  getSponsorsAction: getSponsors,\n})(SponsorsList);\n","import React, { useState } from 'react';\nimport {\n  Button,\n  Card,\n  CardBody,\n  CustomInput,\n  FormGroup,\n  Modal,\n  Row,\n} from 'reactstrap';\nimport { useHistory } from 'react-router-dom';\n\nimport AddSponsorModel from '../../../components/application/AddSponsorModal';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport { adminRoot } from '../../../constants/defaultValues';\n\nimport Breadcrumb from '../../../containers/navs/Breadcrumb';\nimport AppError from '../../../helpers/AppError';\nimport IntlMessages from '../../../helpers/IntlMessages';\nimport SponsorsList from '../../../components/application/SponsorsList';\n\nconst Sponsors = ({ match }) => {\n  const { id } = match.params;\n\n  if (!id) throw new AppError('Please provide a Hackathon ID');\n\n  const history = useHistory();\n\n  const [openAddModal, setOpenAddModal] = useState(false);\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n          <Breadcrumb heading=\"menu.sponsors\" match={match} />\n          <Separator className=\"mb-5\" />\n        </Colxx>\n      </Row>\n\n      <Row className=\"justify-content-center\">\n        <Colxx xxs=\"12\" md=\"6\">\n          <SponsorsList id={id} />\n        </Colxx>\n\n        <Colxx xxs=\"12\" md=\"6\">\n          <Card>\n            <CardBody>\n              <Row className=\"justify-content-center m-2\">\n                <Button onClick={() => setOpenAddModal(true)}>\n                  <IntlMessages id=\"challenges.add-sponsor-button\" />\n                </Button>\n              </Row>\n\n              <Row className=\"justify-content-center m-2\">\n                <CustomInput\n                  type=\"checkbox\"\n                  label={<IntlMessages id=\"challenges.add-sponsor-checkbox\" />}\n                />\n              </Row>\n\n              <Modal\n                isOpen={openAddModal}\n                toggle={() => setOpenAddModal(!openAddModal)}\n              >\n                <AddSponsorModel setOpenAddModal={setOpenAddModal} id={id} />\n              </Modal>\n            </CardBody>\n          </Card>\n        </Colxx>\n      </Row>\n\n      <Row>\n        <Colxx>\n          <FormGroup className=\"text-center\">\n            {/* <Button\n              color=\"primary\"\n              className=\"m-3\"\n              onClick={() =>\n                history.push(`${adminRoot}/challenges/judges/${id}`)\n              }\n            >\n              <IntlMessages id=\"forms.previous\" />\n            </Button> */}\n            <Button\n              color=\"primary\"\n              className=\"m-3\"\n              onClick={() => history.push(`${adminRoot}/challenges/application/${id}`)}\n            >\n              <IntlMessages id=\"forms.next\" />\n            </Button>\n          </FormGroup>\n        </Colxx>\n      </Row>\n    </>\n  );\n};\n\nexport default Sponsors;\n"],"sourceRoot":""}