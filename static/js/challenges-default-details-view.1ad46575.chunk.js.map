{"version":3,"sources":["containers/navs/Breadcrumb.js","containers/application/InputDisplay.js","hooks/use-fetch.js","components/cards/FaqCard.js","views/app/challenges/details/components/NavItems.js","views/app/challenges/details/components/TabPanes.js","views/app/challenges/details/components/ParicipantList.js","components/application/SingleLightbox.js","views/app/challenges/details/components/HackDetails.js","views/app/challenges/details/default-details.js"],"names":["getMenuTitle","sub","adminRoot","id","getUrl","path","split","BreadcrumbItems","match","substr","paths","filter","Boolean","length","indexOf","x","className","map","index","active","to","BreadcrumbContainer","heading","InputDisplay","messageId","name","value","intputType","type","disabled","proptype","PropTypes","string","isRequired","any","useFetch","url","useState","loading","setLoading","error","setError","data","setData","remove","useEffect","a","instance","method","response","success","message","fetchData","propTypes","key","refresh","bool","FaqCard","setShowIndex","showingIndex","item","color","onClick","aria-expanded","question","isOpen","dangerouslySetInnerHTML","__html","answer","NavItems","activeTab","setActiveTab","Nav","tabs","NavItem","NavLink","classNames","location","IntlMessages","TabPanes","hackInfo","hackathon","sponsors","prizes","judges","Faq","applicationData","JSON","parse","application","applicationAboutData","hackthonApplication","about","includes","applicationContactData","contact","applicationEducationData","education","applicationExpericeData","experience","applicationOnlineProfileData","online_profiles","TabContent","TabPane","tabId","CardBody","tagline","aproximate_participants","max_team_size","Row","sm","Badge","pill","hackathon_website","portfolio_url","contact_email","link_to_code_of_control","facebook","twitter","instagram","linkedin","theme_color_code","application_start","application_end","hackathon_start","hackathon_date","results_date","timezone","xxs","ParticipantList","Card","CardTitle","SingleLightbox","thumb","large","setIsOpen","src","alt","mainSrc","onCloseRequest","HackDetails","href","target","Details","params","AppError","Breadcrumb","Button","size","Participant","CardHeader"],"mappings":"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","file":"static/js/challenges-default-details-view.1ad46575.chunk.js","sourcesContent":["/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport IntlMessages from '../../helpers/IntlMessages';\nimport { adminRoot } from '../../constants/defaultValues';\n\nconst getMenuTitle = (sub) => {\n  if (`/${sub}` === adminRoot) return <IntlMessages id=\"menu.home\" />;\n  return <IntlMessages id={`menu.${sub}`} />;\n};\n\nconst getUrl = (path, sub) => {\n  return path.split(sub)[0] + sub;\n};\n\nconst BreadcrumbContainer = ({ heading, match }) => {\n  return (\n    <>\n      {heading && (\n        <h1>\n          <IntlMessages id={heading} />\n        </h1>\n      )}\n      <BreadcrumbItems match={match} />\n    </>\n  );\n};\n\nconst BreadcrumbItems = ({ match }) => {\n  const path = match.path.substr(1);\n  let paths = path.split('/').filter(Boolean);\n\n  if (paths[paths.length - 1].indexOf(':') > -1) {\n    paths = paths.filter((x) => x.indexOf(':') === -1);\n  }\n  return (\n    <>\n      <Breadcrumb className=\"pt-0 breadcrumb-container d-none d-sm-block d-lg-inline-block\">\n        {paths.map((sub, index) => {\n          return (\n            <BreadcrumbItem key={index} active={paths.length === index + 1}>\n              {paths.length !== index + 1 ? (\n                <NavLink to={`/${getUrl(path, sub, index)}`}>\n                  {getMenuTitle(sub)}\n                </NavLink>\n              ) : (\n                getMenuTitle(sub)\n              )}\n            </BreadcrumbItem>\n          );\n        })}\n      </Breadcrumb>\n    </>\n  );\n};\n\nexport default BreadcrumbContainer;\n","import React from 'react';\nimport { FormGroup, Input, Label } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport IntlMessages from '../../helpers/IntlMessages';\n\nconst InputDisplay = ({ messageId, name, value, intputType = 'text' }) => {\n  return (\n    <FormGroup className=\"mb-2 mt-4\">\n      <Label className=\"lead\">\n        <IntlMessages id={messageId} />\n      </Label>\n\n      <Input\n        type={intputType}\n        className=\"form-control\"\n        name={name}\n        value={value}\n        disabled\n      />\n    </FormGroup>\n  );\n};\n\nInputDisplay.proptype = {\n  messageId: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.any.isRequired,\n  intputType: PropTypes.string,\n};\n\nexport default InputDisplay;\n","import { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport instance from '../helpers/axiosInstance';\n\nconst useFetch = (url, name = 'data') => {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [data, setData, remove] = useState(false);\n\n  useEffect(() => {\n    if (!url) {\n      setError('Please Provide a Uri!');\n      return;\n    }\n\n    const fetchData = async () => {\n      try {\n        const response = await instance({\n          method: 'GET',\n          url,\n        });\n\n        if (response.data.success) {\n          setData(response.data[name]);\n        } else {\n          setError(response.data.message);\n        }\n        setLoading(false);\n      } catch (err) {\n        setError(err.message);\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n    // eslint-disable-next-line\n  }, []);\n\n  return { loading, data, error, remove };\n};\n\nexport default useFetch;\n\nuseFetch.propTypes = {\n  url: PropTypes.string.isRequired,\n  key: PropTypes.string.isRequired,\n  refresh: PropTypes.bool,\n};\n","/* eslint-disable react/no-danger */\r\nimport React from 'react';\r\nimport { Button, Card, Collapse } from 'reactstrap';\r\n\r\nconst FaqCard = ({ index, setShowIndex, showingIndex, item }) => {\r\n  return (\r\n    <Card className=\"d-flex mb-2\">\r\n      <div className=\"d-flex flex-grow-1 min-width-zero\">\r\n        <Button\r\n          color=\"link\"\r\n          className=\"card-body btn-empty btn-link list-item-heading text-left text-one\"\r\n          onClick={() => setShowIndex(index)}\r\n          aria-expanded={showingIndex === index}\r\n        >\r\n          {item.question}\r\n        </Button>\r\n      </div>\r\n      <Collapse isOpen={showingIndex === index}>\r\n        <div\r\n          className=\"card-body accordion-content pt-0\"\r\n          dangerouslySetInnerHTML={{ __html: item.answer }}\r\n        />\r\n      </Collapse>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default FaqCard;\r\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { Nav, NavItem, NavLink } from 'reactstrap';\nimport IntlMessages from '../../../../../helpers/IntlMessages';\n\nconst NavItems = ({ activeTab, setActiveTab }) => {\n  return (\n    <Nav tabs className=\"card-header-tabs\">\n      <NavItem>\n        <NavLink\n          className={classNames({\n            active: activeTab === 'basics',\n            'nav-link': true,\n          })}\n          onClick={() => setActiveTab('basics')}\n          to=\"#\"\n          location={{}}\n        >\n          <IntlMessages id=\"menu.basics\" />\n        </NavLink>\n      </NavItem>\n\n      <NavItem>\n        <NavLink\n          className={classNames({\n            active: activeTab === 'application',\n            'nav-link': true,\n          })}\n          onClick={() => setActiveTab('application')}\n          to=\"#\"\n          location={{}}\n        >\n          <IntlMessages id=\"menu.application\" />\n        </NavLink>\n      </NavItem>\n\n      <NavItem>\n        <NavLink\n          className={classNames({\n            active: activeTab === 'links',\n            'nav-link': true,\n          })}\n          onClick={() => setActiveTab('links')}\n          to=\"#\"\n          location={{}}\n        >\n          <IntlMessages id=\"menu.links\" />\n        </NavLink>\n      </NavItem>\n\n      {/* <NavItem>\n        <NavLink\n          className={classNames({\n            active: activeTab === 'brands',\n            'nav-link': true,\n          })}\n          onClick={() => setActiveTab('brands')}\n          to=\"#\"\n          location={{}}\n        >\n          <IntlMessages id=\"menu.brands\" />\n        </NavLink>\n      </NavItem> */}\n\n      <NavItem>\n        <NavLink\n          className={classNames({\n            active: activeTab === 'dates',\n            'nav-link': true,\n          })}\n          onClick={() => setActiveTab('dates')}\n          to=\"#\"\n          location={{}}\n        >\n          <IntlMessages id=\"menu.dates\" />\n        </NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink\n          className={classNames({\n            active: activeTab === 'prizes',\n            'nav-link': true,\n          })}\n          onClick={() => setActiveTab('prizes')}\n          to=\"#\"\n          location={{}}\n        >\n          <IntlMessages id=\"menu.prizes\" />\n        </NavLink>\n      </NavItem>\n\n      <NavItem>\n        <NavLink\n          className={classNames({\n            active: activeTab === 'judges',\n            'nav-link': true,\n          })}\n          onClick={() => setActiveTab('judges')}\n          to=\"#\"\n          location={{}}\n        >\n          <IntlMessages id=\"menu.judges\" />\n        </NavLink>\n      </NavItem>\n\n      <NavItem>\n        <NavLink\n          className={classNames({\n            active: activeTab === 'sponsors',\n            'nav-link': true,\n          })}\n          onClick={() => setActiveTab('sponsors')}\n          to=\"#\"\n          location={{}}\n        >\n          <IntlMessages id=\"menu.sponsors\" />\n        </NavLink>\n      </NavItem>\n\n      <NavItem>\n        <NavLink\n          className={classNames({\n            active: activeTab === 'faq',\n            'nav-link': true,\n          })}\n          onClick={() => setActiveTab('faq')}\n          to=\"#\"\n          location={{}}\n        >\n          <IntlMessages id=\"menu.faq\" />\n        </NavLink>\n      </NavItem>\n    </Nav>\n  );\n};\n\nexport default NavItems;\n","/* eslint-disable no-unused-vars */\nimport React, { useState } from 'react';\n\nimport { Badge, CardBody, Row, TabContent, TabPane } from 'reactstrap';\nimport FaqCard from '../../../../../components/cards/FaqCard';\nimport { Colxx } from '../../../../../components/common/CustomBootstrap';\nimport { hackthonApplication } from '../../../../../constants/defaultValues';\nimport InputDisplay from '../../../../../containers/application/InputDisplay';\nimport IntlMessages from '../../../../../helpers/IntlMessages';\n\nconst TabPanes = ({ activeTab, hackInfo }) => {\n  const [showingIndex, setShowIndex] = useState(0);\n\n  const { hackathon, sponsors, prizes, judges, Faq } = hackInfo;\n\n  const applicationData = JSON.parse(hackathon.application);\n\n  const applicationAboutData = hackthonApplication.about.filter(({ value }) =>\n    applicationData.about.includes(value)\n  );\n  const applicationContactData = hackthonApplication.contact.filter(\n    ({ value }) => JSON.parse(hackathon.application).contact.includes(value)\n  );\n  const applicationEducationData = hackthonApplication.education.filter(\n    ({ value }) => JSON.parse(hackathon.application).education.includes(value)\n  );\n  const applicationExpericeData = hackthonApplication.experience.filter(\n    ({ value }) => JSON.parse(hackathon.application).experience.includes(value)\n  );\n  const applicationOnlineProfileData = hackthonApplication.online_profiles.filter(\n    ({ value }) =>\n      JSON.parse(hackathon.application).online_profiles.includes(value)\n  );\n\n  return (\n    <TabContent activeTab={activeTab}>\n      <TabPane tabId=\"basics\">\n        <CardBody>\n          <InputDisplay\n            messageId=\"challenges.hackathon-name\"\n            name=\"hackathon-name\"\n            value={hackathon.name}\n          />\n\n          <InputDisplay\n            messageId=\"challenges.hackathon-tagline\"\n            name=\"hackathon-tagline\"\n            value={hackathon.tagline}\n          />\n\n          <InputDisplay\n            messageId=\"challenges.about\"\n            name=\"hackathon-about\"\n            value={hackathon.about}\n            intputType=\"textarea\"\n          />\n\n          <InputDisplay\n            messageId=\"challenges.aproximate-participants\"\n            name=\"aproximate-participants\"\n            value={hackathon.aproximate_participants}\n          />\n\n          <InputDisplay\n            messageId=\"challenges.max-team-size\"\n            name=\"max-team-size\"\n            value={hackathon.max_team_size}\n          />\n        </CardBody>\n      </TabPane>\n\n      <TabPane tabId=\"application\">\n        <Row>\n          <Colxx sm=\"12\">\n            <CardBody>\n              <div className=\"mb-4\">\n                <div className=\"lead h4\">\n                  <IntlMessages id=\"challenges.about-title\" />\n                </div>\n\n                {applicationAboutData.map((item) => (\n                  <Badge\n                    key={item.key}\n                    color=\"outline-primary\"\n                    pill\n                    className=\"m-2\"\n                  >\n                    <IntlMessages id={item.messageId} />\n                  </Badge>\n                ))}\n              </div>\n\n              <div className=\"mb-4\">\n                <div className=\"lead h4\">\n                  <IntlMessages id=\"challenges.education-title\" />\n                </div>\n\n                {applicationEducationData.map((item) => (\n                  <Badge\n                    key={item.key}\n                    color=\"outline-primary\"\n                    pill\n                    className=\"m-2\"\n                  >\n                    <IntlMessages id={item.messageId} />\n                  </Badge>\n                ))}\n              </div>\n\n              <div className=\"mb-4\">\n                <div className=\"lead h4\">\n                  <IntlMessages id=\"challenges.experience-title\" />\n                </div>\n\n                {applicationExpericeData.map((item) => (\n                  <Badge\n                    key={item.key}\n                    color=\"outline-primary\"\n                    pill\n                    className=\"m-2\"\n                  >\n                    <IntlMessages id={item.messageId} />\n                  </Badge>\n                ))}\n              </div>\n\n              <div className=\"mb-4\">\n                <div className=\"lead h4\">\n                  <IntlMessages id=\"challenges.online-profiles-title\" />\n                </div>\n\n                {applicationOnlineProfileData.map((item) => (\n                  <Badge\n                    key={item.key}\n                    color=\"outline-primary\"\n                    pill\n                    className=\"m-2\"\n                  >\n                    <IntlMessages id={item.messageId} />\n                  </Badge>\n                ))}\n              </div>\n\n              <div className=\"mb-4\">\n                <div className=\"lead h4\">\n                  <IntlMessages id=\"challenges.contact-title\" />\n                </div>\n\n                {applicationContactData.map((item) => (\n                  <Badge\n                    key={item.key}\n                    color=\"outline-primary\"\n                    pill\n                    className=\"m-2\"\n                  >\n                    <IntlMessages id={item.messageId} />\n                  </Badge>\n                ))}\n              </div>\n\n              <InputDisplay\n                messageId=\"challenges.custom-questions\"\n                name=\"theme-color-code\"\n                value=\"This is a Custom Question\"\n              />\n            </CardBody>\n          </Colxx>\n        </Row>\n      </TabPane>\n\n      <TabPane tabId=\"links\">\n        <Row>\n          <Colxx sm=\"12\">\n            <CardBody>\n              <InputDisplay\n                messageId=\"challenges.hackathon-website\"\n                name=\"hackathon-website\"\n                value={hackathon.hackathon_website}\n              />\n\n              <InputDisplay\n                messageId=\"challenges.portfolio-url\"\n                name=\"portfolio-url\"\n                value={hackathon.portfolio_url}\n              />\n\n              <InputDisplay\n                messageId=\"challenges.contact-email\"\n                name=\"contact-email\"\n                value={hackathon.contact_email}\n              />\n\n              <InputDisplay\n                messageId=\"challenges.link-to-code-of-control\"\n                name=\"link-to-code-of-control\"\n                value={hackathon.link_to_code_of_control}\n              />\n\n              <InputDisplay\n                messageId=\"challenges.facebook\"\n                name=\"facebook\"\n                value={hackathon.facebook}\n              />\n\n              <InputDisplay\n                messageId=\"challenges.twitter\"\n                name=\"twitter\"\n                value={hackathon.twitter}\n              />\n\n              <InputDisplay\n                messageId=\"challenges.instagram\"\n                name=\"instagram\"\n                value={hackathon.instagram}\n              />\n\n              <InputDisplay\n                messageId=\"challenges.linkedin\"\n                name=\"linkedin\"\n                value={hackathon.linkedin}\n              />\n            </CardBody>\n          </Colxx>\n        </Row>\n      </TabPane>\n\n      <TabPane tabId=\"brands\">\n        <Row>\n          <Colxx sm=\"12\">\n            <CardBody>\n              <InputDisplay\n                messageId=\"challenges.theme-title\"\n                name=\"theme-color-code\"\n                value={hackathon.theme_color_code}\n              />\n            </CardBody>\n          </Colxx>\n        </Row>\n      </TabPane>\n\n      <TabPane tabId=\"dates\">\n        <Row>\n          <Colxx sm=\"12\">\n            <CardBody>\n              <InputDisplay\n                messageId=\"challenges.hackthon-application-begins\"\n                name=\"application-start\"\n                value={hackathon.application_start}\n              />\n\n              <InputDisplay\n                messageId=\"challenges.hackthon-application-ends\"\n                name=\"application-ends\"\n                value={hackathon.application_end}\n              />\n\n              <InputDisplay\n                messageId=\"challenges.hackthon-hackathon-begins\"\n                name=\"hackathon-starts\"\n                value={hackathon.hackathon_start}\n              />\n\n              <InputDisplay\n                messageId=\"challenges.hackthon-hackathon-ends\"\n                name=\"hackathon-ends\"\n                value={hackathon.hackathon_date}\n              />\n\n              <InputDisplay\n                messageId=\"challenges.announcement-results\"\n                name=\"accouncement-date\"\n                value={hackathon.results_date}\n              />\n\n              <InputDisplay\n                messageId=\"challenges.timezone\"\n                name=\"timezone\"\n                value={hackathon.timezone}\n              />\n            </CardBody>\n          </Colxx>\n        </Row>\n      </TabPane>\n      <TabPane tabId=\"prizes\">\n        <Row>\n          <Colxx sm=\"12\">\n            <CardBody>\n              {prizes.map((item) => (\n                <Badge\n                  key={item.id}\n                  color=\"outline-primary\"\n                  pill\n                  className=\"m-2\"\n                >\n                  <IntlMessages id={item.name} />\n                </Badge>\n              ))}\n            </CardBody>\n          </Colxx>\n        </Row>\n      </TabPane>\n\n      <TabPane tabId=\"sponsors\">\n        <Row>\n          <Colxx sm=\"12\">\n            <CardBody>\n              {sponsors.map((item) => (\n                <Badge\n                  key={item.id}\n                  color=\"outline-primary\"\n                  pill\n                  className=\"m-2\"\n                >\n                  <IntlMessages id={item.name} />\n                </Badge>\n              ))}\n            </CardBody>\n          </Colxx>\n        </Row>\n      </TabPane>\n\n      <TabPane tabId=\"judges\">\n        <Row>\n          <Colxx sm=\"12\">\n            <CardBody>\n              {judges.map((item) => (\n                <Badge\n                  key={item.id}\n                  color=\"outline-primary\"\n                  pill\n                  className=\"m-2\"\n                >\n                  <IntlMessages id={item.name} />\n                </Badge>\n              ))}\n            </CardBody>\n          </Colxx>\n        </Row>\n      </TabPane>\n\n      <TabPane tabId=\"faq\">\n        <Colxx xxs=\"12\" className=\"mt-4\">\n          {Faq.map((item, index) => (\n            <FaqCard\n              // eslint-disable-next-line react/no-array-index-key\n              key={`faqItem_${index}`}\n              item={item}\n              index={index}\n              showingIndex={showingIndex}\n              setShowIndex={setShowIndex}\n            />\n          ))}\n        </Colxx>\n      </TabPane>\n    </TabContent>\n  );\n};\n\nexport default TabPanes;\n","import React from 'react';\nimport { Card, CardBody, CardTitle } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\n// import ParticipantCard from '../../../../../components/cards/ParticipantCard';\n\nimport IntlMessages from '../../../../../helpers/IntlMessages';\n\nconst ParticipantList = ({ data, match }) => {\n  return (\n    <>\n      <Card className=\"mb-4\">\n        <CardBody>\n          <CardTitle className=\"h1 mb-0 \">\n            <div className=\"d-flex justify-content-between \">\n              <IntlMessages id=\"challenges.participants\" />\n\n              {data.length ? (\n                <NavLink to={`${match.url}/participants`} className=\"p-0 m-0\">\n                  See all <i className=\"simple-icon-arrow-right-circle m-2\" />\n                </NavLink>\n              ) : null}\n            </div>\n          </CardTitle>\n        </CardBody>\n      </Card>\n\n      {data.length ? null : (\n        <Card className=\"mb-4\">\n          <CardBody>\n            <CardTitle className=\"h1 mb-0\">Currently No Participants</CardTitle>\n          </CardBody>\n        </Card>\n      )}\n    </>\n  );\n};\n\nexport default ParticipantList;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Lightbox from 'react-image-lightbox';\n\nconst SingleLightbox = ({ thumb, className, large }) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  return (\n    <>\n      <NavLink to=\"#\" location={{}} onClick={() => setIsOpen(true)}>\n        <img src={thumb} alt=\"thumbnail\" className={className} />\n      </NavLink>\n\n      {isOpen && (\n        <Lightbox mainSrc={large} onCloseRequest={() => setIsOpen(false)} />\n      )}\n    </>\n  );\n};\nexport default SingleLightbox;\n","import React from 'react';\n\nimport { Card, CardBody, NavLink } from 'reactstrap';\nimport IntlMessages from '../../../../../helpers/IntlMessages';\n\nconst HackDetails = ({ hackInfo }) => {\n  const { hackathon } = hackInfo;\n\n  return (\n    <Card className=\"mb-4\">\n      <CardBody>\n        <div className=\"text-center pt-4\">\n          <p className=\"list-item-heading pt-2\">{hackathon.name}</p>\n        </div>\n        <p className=\"mb-3\">{hackathon.about}</p>\n        <p className=\"text-muted text-small mb-2\">\n          {/* <IntlMessages id=\"pages.location\" /> */}\n          Tagline\n        </p>\n        <p className=\"mb-3\">{hackathon.tagline}</p>\n        {/* <p className=\"text-muted text-small mb-2\">\n          <IntlMessages id=\"pages.responsibilities\" />\n        </p>\n        <p className=\"mb-3\">\n          <Badge color=\"outline-secondary\" className=\"mb-1 mr-1\" pill>\n            FRONTEND\n          </Badge>\n          <Badge color=\"outline-secondary\" className=\"mb-1 mr-1\" pill>\n            JAVASCRIPT\n          </Badge>\n          <Badge color=\"outline-secondary\" className=\"mb-1 mr-1\" pill>\n            SECURITY\n          </Badge>\n          <Badge color=\"outline-secondary\" className=\"mb-1 mr-1\" pill>\n            DESIGN\n          </Badge>\n        </p> */}\n        <p className=\"text-muted text-small mb-2\">\n          <IntlMessages id=\"menu.contact\" />\n        </p>\n        <div className=\"social-icons\">\n          <ul className=\"list-unstyled list-inline\">\n            <li className=\"list-inline-item\">\n              <NavLink href={hackathon.facebook} target=\"_blank\">\n                <i className=\"simple-icon-social-facebook\" />\n              </NavLink>\n            </li>\n            <li className=\"list-inline-item\">\n              <NavLink href={hackathon.twitter} target=\"_blank\">\n                <i className=\"simple-icon-social-twitter\" />\n              </NavLink>\n            </li>\n            <li className=\"list-inline-item\">\n              <NavLink href={hackathon.instagram} target=\"_blank\">\n                <i className=\"simple-icon-social-instagram\" />\n              </NavLink>\n            </li>\n            <li className=\"list-inline-item\">\n              <NavLink href={hackathon.linkedin} target=\"_blank\">\n                <i className=\"simple-icon-social-linkedin\" />\n              </NavLink>\n            </li>\n            <li className=\"list-inline-item\">\n              <NavLink href={hackathon.hackathon_website} target=\"_blank\">\n                <i className=\"simple-icon-link\" />\n              </NavLink>\n            </li>\n          </ul>\n        </div>\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default HackDetails;\n","import React, { useState } from 'react';\r\nimport { Button, Card, CardHeader, Row } from 'reactstrap';\r\n\r\nimport {\r\n  Colxx,\r\n  Separator,\r\n} from '../../../../components/common/CustomBootstrap';\r\n\r\nimport Breadcrumb from '../../../../containers/navs/Breadcrumb';\r\nimport AppError from '../../../../helpers/AppError';\r\nimport IntlMessages from '../../../../helpers/IntlMessages';\r\nimport NavItems from './components/NavItems';\r\nimport TabPanes from './components/TabPanes';\r\n\r\nimport { adminRoot } from '../../../../constants/defaultValues';\r\nimport useFetch from '../../../../hooks/use-fetch';\r\nimport ParticipantList from './components/ParicipantList';\r\nimport SingleLightbox from '../../../../components/application/SingleLightbox';\r\nimport HackDetails from './components/HackDetails';\r\n\r\nconst Details = ({ match }) => {\r\n  const { id } = match.params;\r\n\r\n  if (!id) throw new AppError('Please Provide Hackathon ID');\r\n\r\n  const [activeTab, setActiveTab] = useState('basics');\r\n\r\n  const { loading, data, error } = useFetch(`/getdetails/${id}`, 'getdetails');\r\n\r\n  if (loading) return <div className=\"loading\" />;\r\n\r\n  if (error) throw new AppError(error);\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Colxx xxs=\"10\">\r\n          <Breadcrumb heading=\"menu.details\" match={match} />\r\n        </Colxx>\r\n        <Colxx xxs=\"2\">\r\n          <Button size=\"sm\" href={`${adminRoot}/challenges/basics/${id}`}>\r\n            <IntlMessages id=\"challenges.edit-hackathon\" />\r\n          </Button>\r\n        </Colxx>\r\n      </Row>\r\n\r\n      <Separator className=\"mb-5\" />\r\n\r\n      <Row>\r\n        <Colxx xxs=\"12\" className=\"mb-5\">\r\n          <Card>\r\n            <SingleLightbox\r\n              thumb=\"/assets/img/social/header.jpg\"\r\n              large=\"/assets/img/social/header.jpg\"\r\n              // thumb={data.hackathon.hackathon_cover_img}\r\n              // large={data.hackathon.hackathon_cover_img}\r\n              className=\"social-header card-img\"\r\n            />\r\n          </Card>\r\n        </Colxx>\r\n\r\n        <Colxx xxs=\"12\" sm=\"5\" className=\"mb-4 col-left\">\r\n          <SingleLightbox\r\n            thumb=\"/assets/img/profiles/l-10.jpg\"\r\n            large=\"/assets/img/profiles/10.jpg\"\r\n            // thumb={data.hackathon.hackathon_logo}\r\n            // large={data.hackathon.hackathon_logo}\r\n            className=\"img-thumbnail card-img social-profile-img\"\r\n          />\r\n          {!loading && <HackDetails hackInfo={data} />}\r\n          {!loading && (\r\n            <ParticipantList data={data.Participant} id={id} match={match} />\r\n          )}\r\n        </Colxx>\r\n\r\n        <Colxx xxs=\"12\" sm=\"7\" className=\"mb-4 col-right\">\r\n          <Card className=\"mb-4\">\r\n            <CardHeader>\r\n              <NavItems activeTab={activeTab} setActiveTab={setActiveTab} />\r\n\r\n              <TabPanes activeTab={activeTab} hackInfo={data} />\r\n            </CardHeader>\r\n          </Card>\r\n        </Colxx>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Details;\r\n"],"sourceRoot":""}