{"version":3,"sources":["containers/navs/Breadcrumb.js","components/StateButton.js","views/app/Challenges/brands-view.js"],"names":["getMenuTitle","sub","adminRoot","id","getUrl","path","split","BreadcrumbItems","match","substr","paths","filter","Boolean","length","indexOf","x","className","map","index","active","to","BreadcrumbContainer","heading","StateButton","color","size","children","onClick","next","successNext","useState","status","setStatus","message","setMessage","messageShow","setMessageShow","classnames","then","res","catch","err","finally","setTimeout","disabled","placement","isOpen","target","imgbrowsed1","imgbrowsed2","Brands","uploaded","uploaded2","params","AppError","history","useHistory","data1","setData1","useEffect","fetch","json","data","console","log","getdetails","hackathon","theme","hackathon_logo","hackathon_cover_img","values","setValues","theme_color_code","colorHexCode","setColorHexCode","formData","FormData","append","handleUpload","event","a","delete","instance","url","method","headers","timeout","document","getElementById","innerHTML","window","location","reload","handleUpload2","handleSubmit","NotificationManager","error","Promise","success","failed","response","wait","push","updateProfile","xxs","md","value","width","onChange","hex","key","handleChange","src","alt","height","imgt","type","name","accept","files","addonType","outline"],"mappings":"+JAAA,4DAOMA,EAAe,SAACC,GACpB,MAAI,WAAIA,KAAUC,IAAkB,cAAC,IAAD,CAAcC,GAAG,cAC9C,cAAC,IAAD,CAAcA,GAAE,eAAUF,MAG7BG,EAAS,SAACC,EAAMJ,GACpB,OAAOI,EAAKC,MAAML,GAAK,GAAKA,GAgBxBM,EAAkB,SAAC,GAAe,IAChCF,EAD+B,EAAZG,MACNH,KAAKI,OAAO,GAC3BC,EAAQL,EAAKC,MAAM,KAAKK,OAAOC,SAKnC,OAHIF,EAAMA,EAAMG,OAAS,GAAGC,QAAQ,MAAQ,IAC1CJ,EAAQA,EAAMC,QAAO,SAACI,GAAD,OAA2B,IAApBA,EAAED,QAAQ,SAGtC,mCACE,cAAC,IAAD,CAAYE,UAAU,gEAAtB,SACGN,EAAMO,KAAI,SAAChB,EAAKiB,GACf,OACE,cAAC,IAAD,CAA4BC,OAAQT,EAAMG,SAAWK,EAAQ,EAA7D,SACGR,EAAMG,SAAWK,EAAQ,EACxB,cAAC,IAAD,CAASE,GAAE,WAAMhB,EAAOC,EAAMJ,IAA9B,SACGD,EAAaC,KAGhBD,EAAaC,IANIiB,WAgBlBG,IAzCa,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,QAASd,EAAY,EAAZA,MACtC,OACE,qCACGc,GACC,6BACE,cAAC,IAAD,CAAcnB,GAAImB,MAGrBd,EAAQ,cAACD,EAAD,CAAiBC,MAAOA,IAAY,U,0GCuDpCe,IA3EK,SAAC,GASd,IARLpB,EAQI,EARJA,GACAa,EAOI,EAPJA,UACAQ,EAMI,EANJA,MACAC,EAKI,EALJA,KACAC,EAII,EAJJA,SACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,KACAC,EACI,EADJA,YACI,EACwBC,mBAAS,WADjC,mBACGC,EADH,KACWC,EADX,OAE0BF,mBAAS,IAFnC,mBAEGG,EAFH,KAEYC,EAFZ,OAGkCJ,oBAAS,GAH3C,mBAGGK,EAHH,KAGgBC,EAHhB,KAgCJ,OACE,+BACE,eAAC,IAAD,CACEjC,GAAIA,EACJa,UAAS,8BAAyBA,EAAzB,aAAuCqB,IAAW,CACzD,eAA2B,eAAXN,EAChB,eAA2B,YAAXA,EAChB,YAAwB,SAAXA,KAEfN,KAAMA,EACND,MAAOA,EACPG,QAtCgB,WACpBK,EAAU,cAEVL,IACGW,MAAK,SAACC,GACLL,EAAWK,GACXP,EAAU,WACNH,GACFA,OAGHW,OAAM,SAACC,GACNP,EAAWO,GACXT,EAAU,WAEXU,SAAQ,WACPN,GAAe,GACfO,YAAW,WACTX,EAAU,WACVI,GAAe,GACXR,GACFA,MAED,SAgBHgB,SAAqB,YAAXb,EAVZ,UAYE,cAAC,IAAD,CAASc,UAAU,MAAMC,OAAQX,EAAaY,OAAQ5C,EAAtD,SACE,cAAC,IAAD,UAAc8B,MAEhB,uBAAMjB,UAAU,yBAAhB,UACE,sBAAMA,UAAU,YAChB,sBAAMA,UAAU,YAChB,sBAAMA,UAAU,eAElB,sBAAMA,UAAU,eAAhB,SACE,mBAAGA,UAAU,wBAEf,sBAAMA,UAAU,YAAhB,SACE,mBAAGA,UAAU,8BAEf,sBAAMA,UAAU,QAAhB,SAAyBU,W,2SC3C7BsB,GAAc,EACdC,GAAc,EA4SHC,UA3SA,SAAC,GAAe,IAAb1C,EAAY,EAAZA,MACZ2C,GAAW,EACXC,GAAY,EACRjD,EAAOK,EAAM6C,OAAblD,GAER,IAAKA,EAAI,MAAM,IAAImD,IAAS,iCAC5B,IAAMC,EAAUC,cANY,EAOF1B,mBAAS,IAPP,mBAOrB2B,EAPqB,KAOdC,EAPc,KAQ5BC,qBAAU,WACRC,MAAM,wDAAD,OAAyDzD,IAC3DmC,MAAK,SAAAC,GACJ,OAAOA,EAAIsB,UAEZvB,MAAK,SAAAwB,GACJC,QAAQC,IAAIF,EAAKG,WAAWC,WAC5BR,EAASI,EAAKG,WAAWC,gBAG5B,IACHH,QAAQC,IAAIP,GAnBgB,MAoBA3B,mBAAS,CACnC3B,KACAgE,MAAO,KACPC,eAAgB,KAChBC,oBAAqB,OAxBK,mBAoBrBC,EApBqB,KAoBbC,EApBa,KA0BtBC,EAAmBF,EAAOH,MA1BJ,EA4BYrC,mBAAS,WA5BrB,mBA4BrB2C,EA5BqB,KA4BPC,EA5BO,KA6BtBC,EAAW,IAAIC,SACrBD,EAASE,OAAO,KAAM1E,GAEtB,IAiBM2E,EAAY,uCAAG,WAAOC,GAAP,SAAAC,EAAA,6DACnBL,EAASM,OAAOF,EAAMhC,OAAO5C,IAE7BwE,EAASE,OAAT,UAAmBE,EAAMhC,OAAO5C,IAAMmE,EAAOS,EAAMhC,OAAO5C,KAHvC,SAKb+E,YAAS,CACbC,IAAK,mBACLC,OAAQ,OACRC,QAAS,CACP,eAAgB,uBAElBvB,KAAMa,EACNW,QAAS,MAZQ,OAcnBnC,GAAW,EACPH,IACFuC,SAASC,eAAe,SAASC,UAAY,gCAE/CC,OAAOC,SAASC,QAAO,GAlBJ,2CAAH,sDAoBZC,EAAa,uCAAG,WAAOd,GAAP,SAAAC,EAAA,6DACpBL,EAASM,OAAOF,EAAMhC,OAAO5C,IAE7BwE,EAASE,OAAT,UAAmBE,EAAMhC,OAAO5C,IAAMmE,EAAOS,EAAMhC,OAAO5C,KAHtC,SAId+E,YAAS,CACbC,IAAK,mBACLC,OAAQ,OACRC,QAAS,CACP,eAAgB,uBAElBvB,KAAMa,EACNW,QAAS,MAXS,OAapBlC,GAAY,EACZW,QAAQC,IAAIZ,EAAWH,GACnBA,IACFsC,SAASC,eAAe,UAAUC,UAAY,gCAEhDC,OAAOC,SAASC,QAAO,GAlBH,2CAAH,sDAqBbE,EAAY,uCAAG,sBAAAd,EAAA,yDAEQ,OAAzBvB,EAAMW,gBACwB,OAA9BX,EAAMY,oBAHW,gBAKjB0B,IAAoBC,MAClB,oCACA,4BACA,IACA,KACA,KACA,IAXe,6BAcnBjC,QAAQC,IAAIM,GAdO,kBAeZ,IAAI2B,SAAQ,SAACC,EAASC,IACR,uCAAG,4BAAAnB,EAAA,+EAEKE,YAAS,CAC9BE,OAAQ,OACRD,IAAK,mBACLE,QAAS,CACP,eAAgB,uBAElBvB,KAAMa,EACNW,QAAS,MATO,cAEZc,EAFY,gBAYZlB,YAAS,CACbE,OAAQ,OACRD,IAAK,mBACLrB,KAAM,CAAE3D,KAAIqE,oBACZc,QAAS,MAhBO,OAoBDc,EAATtC,KACCoC,QACPA,EAAQ,mCAERG,YAAK,MAAM,WACT9C,EAAQ+C,KAAR,UAAgBpG,IAAhB,6BAA8CC,OAzBhC,kDAmClBgG,EAAO,+BAnCW,0DAAH,qDAsCnBI,OAtDiB,gCAyDZ,MAzDY,2CAAH,qDA4DlB,OACE,qCACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAOC,IAAI,KAAX,UACE,cAAC,IAAD,CAAYlF,QAAQ,cAAcd,MAAOA,IACzC,cAAC,IAAD,CAAWQ,UAAU,cAGzB,cAAC,IAAD,CAAKA,UAAU,yBAAf,SACE,eAAC,IAAD,CAAOwF,IAAI,KAAKC,GAAG,KAAKzF,UAAU,OAAlC,UACE,cAAC,IAAD,CAAMA,UAAU,OAAhB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,qBAAKA,UAAU,UAAf,SACE,cAAC,IAAD,CAAcb,GAAG,+BAIrB,cAAC,IAAD,CAAWa,UAAU,OAArB,SACE,cAAC,IAAD,CAAO0F,MAAOjC,EAAc7B,UAAQ,MAGtC,cAAC,IAAD,CAAW5B,UAAU,WAArB,SACE,cAAC,IAAD,CACE2F,MAAM,OACNnF,MAAOiD,EACPmC,SAAU,SAAC7B,GACTL,EAAgBK,EAAM8B,KAjJnB,SAAC9B,EAAO+B,GAAwB,IAAnBJ,EAAkB,wDAClDnC,EAAU,2BACLD,GADI,IAEPH,MAAOuC,EAAQ3B,EAAQA,EAAMhC,OAAO2D,SA+ItBK,CAAahC,EAAM8B,IAAK,oBAAoB,aAOtD,cAAC,IAAD,CAAM7F,UAAU,OAAhB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,qBAAKA,UAAU,UAAf,SACE,cAAC,IAAD,CAAcb,GAAG,uCAIrB,sBAAKa,UAAU,kBAAf,UAGImC,GAAY,qBAAKnC,UAAU,OAAOb,GAAG,WAAW6G,IAAK7D,EAAU8D,IAAI,kBAAkBN,MAAM,KAAKO,OAAO,QACvGzD,EAAMW,gBAAkB,qBAAKpD,UAAU,OAAOb,GAAG,WAAW6G,IAAKvD,EAAMW,eAAgB6C,IAAI,kBAAkBN,MAAM,KAAKO,OAAO,QAC/H,qBAAKlG,UAAU,OAAOb,GAAG,WAAW6G,IAAKG,IAAMF,IAAI,kBAAkBN,MAAM,KAAKO,OAAO,OAGzF,eAAC,IAAD,WACE,cAAC,IAAD,CACEE,KAAK,OACLjH,GAAG,iBACHkH,KAAK,aACLC,OAAO,mCACPV,SAxKO,SAAC7B,GACxBR,EAAU,2BAAKD,GAAN,kBAAeS,EAAMhC,OAAO5C,GAAK4E,EAAMhC,OAAOwE,MAAM,MAC7DvE,GAAc,EACde,QAAQC,IAAIhB,MAuKE,cAAC,IAAD,CAAiBwE,UAAU,SAA3B,SACE,cAAC,IAAD,CACEC,SAAO,EACPjG,MAAM,YACNG,QAASmD,EACT3E,GAAG,iBAJL,SAME,cAAC,IAAD,CAAcA,GAAG,oCAIvB,mBAAGA,GAAG,QAAN,uBAKN,cAAC,IAAD,CAAMa,UAAU,OAAhB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,qBAAKA,UAAU,UAAf,SACE,cAAC,IAAD,CAAcb,GAAG,8CAKrB,sBAAKa,UAAU,kBAAf,UACE,8BAEEoC,GAAa,qBAAKpC,UAAU,OAAOb,GAAG,WAAW6G,IAAK5D,EAAW6D,IAAI,kBAAkBN,MAAM,KAAKO,OAAO,QACzGzD,EAAMY,qBAAuB,qBAAKrD,UAAU,OAAOb,GAAG,WAAW6G,IAAKvD,EAAMY,oBAAqB4C,IAAI,kBAAkBN,MAAM,KAAKO,OAAO,QACzI,qBAAKlG,UAAU,OAAOb,GAAG,WAAW6G,IAAKG,IAAMF,IAAI,kBAAkBN,MAAM,KAAKO,OAAO,SAIzF,eAAC,IAAD,WACE,cAAC,IAAD,CACEE,KAAK,OACLjH,GAAG,sBACHkH,KAAK,aACLC,OAAO,mCACPV,SA7MQ,SAAC7B,GACzBR,EAAU,2BAAKD,GAAN,kBAAeS,EAAMhC,OAAO5C,GAAK4E,EAAMhC,OAAOwE,MAAM,MAC7DtE,GAAc,KA6MA,cAAC,IAAD,CAAiBuE,UAAU,SAA3B,SACE,cAAC,IAAD,CACEC,SAAO,EACPjG,MAAM,YACNrB,GAAG,sBACHwB,QAASkE,EAJX,SAME,cAAC,IAAD,CAAc1F,GAAG,oCAIvB,mBAAGA,GAAG,SAAN,uBAKN,cAAC,IAAD,CAAWa,UAAU,mBAArB,SACE,cAAC,IAAD,CACEb,GAAG,cACHqB,MAAM,UACN4F,KAAK,SACLzF,QAAS,kBAAMmE,EAAaxB,IAJ9B,SAME,cAAC,IAAD,CAAcnE,GAAG","file":"static/js/challenges-brands-view.06370ea1.chunk.js","sourcesContent":["/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport IntlMessages from '../../helpers/IntlMessages';\nimport { adminRoot } from '../../constants/defaultValues';\n\nconst getMenuTitle = (sub) => {\n  if (`/${sub}` === adminRoot) return <IntlMessages id=\"menu.home\" />;\n  return <IntlMessages id={`menu.${sub}`} />;\n};\n\nconst getUrl = (path, sub) => {\n  return path.split(sub)[0] + sub;\n};\n\nconst BreadcrumbContainer = ({ heading, match }) => {\n  return (\n    <>\n      {heading && (\n        <h1>\n          <IntlMessages id={heading} />\n        </h1>\n      )}\n      {match ? <BreadcrumbItems match={match} /> : null}\n    </>\n  );\n};\n\nconst BreadcrumbItems = ({ match }) => {\n  const path = match.path.substr(1);\n  let paths = path.split('/').filter(Boolean);\n\n  if (paths[paths.length - 1].indexOf(':') > -1) {\n    paths = paths.filter((x) => x.indexOf(':') === -1);\n  }\n  return (\n    <>\n      <Breadcrumb className=\"pt-0 breadcrumb-container d-none d-sm-block d-lg-inline-block\">\n        {paths.map((sub, index) => {\n          return (\n            <BreadcrumbItem key={index} active={paths.length === index + 1}>\n              {paths.length !== index + 1 ? (\n                <NavLink to={`/${getUrl(path, sub, index)}`}>\n                  {getMenuTitle(sub)}\n                </NavLink>\n              ) : (\n                getMenuTitle(sub)\n              )}\n            </BreadcrumbItem>\n          );\n        })}\n      </Breadcrumb>\n    </>\n  );\n};\n\nexport default BreadcrumbContainer;\n","import React, { useState } from 'react';\nimport { Button, Popover, PopoverBody } from 'reactstrap';\nimport classnames from 'classnames';\n\nconst StateButton = ({\n  id,\n  className,\n  color,\n  size,\n  children,\n  onClick,\n  next,\n  successNext,\n}) => {\n  const [status, setStatus] = useState('default');\n  const [message, setMessage] = useState('');\n  const [messageShow, setMessageShow] = useState(false);\n\n  const handleOnClick = () => {\n    setStatus('processing');\n\n    onClick()\n      .then((res) => {\n        setMessage(res);\n        setStatus('success');\n        if (successNext) {\n          successNext();\n        }\n      })\n      .catch((err) => {\n        setMessage(err);\n        setStatus('fail');\n      })\n      .finally(() => {\n        setMessageShow(true);\n        setTimeout(() => {\n          setStatus('default');\n          setMessageShow(false);\n          if (next) {\n            next();\n          }\n        }, 3000);\n      });\n  };\n\n  return (\n    <span>\n      <Button\n        id={id}\n        className={`btn-multiple-state  ${className}  ${classnames({\n          'show-spinner': status === 'processing',\n          'show-success': status === 'success',\n          'show-fail': status === 'fail',\n        })}`}\n        size={size}\n        color={color}\n        onClick={handleOnClick}\n        disabled={status !== 'default'}\n      >\n        <Popover placement=\"top\" isOpen={messageShow} target={id}>\n          <PopoverBody>{message}</PopoverBody>\n        </Popover>\n        <span className=\"spinner d-inline-block\">\n          <span className=\"bounce1\" />\n          <span className=\"bounce2\" />\n          <span className=\"bounce3\" />\n        </span>\n        <span className=\"icon success\">\n          <i className=\"simple-icon-check\" />\n        </span>\n        <span className=\"icon fail\">\n          <i className=\"simple-icon-exclamation\" />\n        </span>\n        <span className=\"label\">{children}</span>\n      </Button>\n    </span>\n  );\n};\n\nexport default StateButton;\n","/* eslint-disable camelcase */\n/* eslint-disable prefer-promise-reject-errors */\nimport React, { useState, useEffect } from 'react';\nimport { CirclePicker } from 'react-color';\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardTitle,\n  CustomInput,\n  FormGroup,\n  Input,\n  InputGroup,\n  InputGroupAddon,\n  Row,\n} from 'reactstrap';\nimport { useHistory } from 'react-router-dom';\n\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport { adminRoot } from '../../../constants/defaultValues';\nimport { NotificationManager } from '../../../components/common/react-notifications';\n\nimport Breadcrumb from '../../../containers/navs/Breadcrumb';\nimport AppError from '../../../helpers/AppError';\nimport { wait } from '../../../helpers/Utils';\nimport IntlMessages from '../../../helpers/IntlMessages';\nimport instance from '../../../helpers/axiosInstance';\nimport StateButton from '../../../components/StateButton';\nimport imgt from \"../../../assets/img/profiles/profile.png\";\n\nlet imgbrowsed1 = false;\nlet imgbrowsed2 = false;\nconst Brands = ({ match }) => {\n  let uploaded = false;\n  let uploaded2 = false;\n  const { id } = match.params;\n\n  if (!id) throw new AppError('Please provide a Hackathon ID');\n  const history = useHistory();\n  const [data1, setData1] = useState([]);\n  useEffect(() => {\n    fetch(`http://api.smart-natives.de/index.php/api/getdetails/${id}`)\n      .then(res => {\n        return res.json();\n      })\n      .then(data => {\n        console.log(data.getdetails.hackathon);\n        setData1(data.getdetails.hackathon)\n      });\n    // eslint-disable-next-line\n  }, []);\n  console.log(data1)\n  const [values, setValues] = useState({\n    id,\n    theme: null,\n    hackathon_logo: null,\n    hackathon_cover_img: null,\n  });\n  const theme_color_code = values.theme;\n\n  const [colorHexCode, setColorHexCode] = useState('#000000');\n  const formData = new FormData();\n  formData.append('id', id);\n\n  const handleChange = (event, key, value = false) => {\n    setValues({\n      ...values,\n      theme: value ? event : event.target.value,\n    });\n  };\n\n  const handleFileChange = (event) => {\n    setValues({ ...values, [event.target.id]: event.target.files[0] });\n    imgbrowsed1 = true;\n    console.log(imgbrowsed1);\n  };\n  const handleFileChange2 = (event) => {\n    setValues({ ...values, [event.target.id]: event.target.files[0] });\n    imgbrowsed2 = true;\n  };\n\n  const handleUpload = async (event) => {\n    formData.delete(event.target.id);\n\n    formData.append(`${event.target.id}`, values[event.target.id]);\n\n    await instance({\n      url: '/updateHackathon',\n      method: 'POST',\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n      data: formData,\n      timeout: 100000,\n    });\n    uploaded = true;\n    if (imgbrowsed1) {\n      document.getElementById(\"check\").innerHTML = \"Image uploaded successfully.\";\n    }\n    window.location.reload(false);\n  };\n  const handleUpload2 = async (event) => {\n    formData.delete(event.target.id);\n\n    formData.append(`${event.target.id}`, values[event.target.id]);\n    await instance({\n      url: '/updateHackathon',\n      method: 'POST',\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n      data: formData,\n      timeout: 100000\n    });\n    uploaded2 = true;\n    console.log(uploaded2, imgbrowsed2);\n    if (imgbrowsed2) {\n      document.getElementById(\"check2\").innerHTML = \"Image uploaded successfully.\";\n    }\n    window.location.reload(false);\n  };\n\n  const handleSubmit = async () => {\n    if (\n      data1.hackathon_logo === null &&\n      data1.hackathon_cover_img === null\n    ) {\n      NotificationManager.error(\n        'Please enter all the information!',\n        'Hackathon Operation Error',\n        3000,\n        null,\n        null,\n        ''\n      );\n    }else{\n    console.log(values);\n    return new Promise((success, failed) => {\n      const updateProfile = async () => {\n        try {\n          const response = await instance({\n            method: 'POST',\n            url: '/updateHackathon',\n            headers: {\n              'Content-Type': 'multipart/form-data',\n            },\n            data: formData,\n            timeout: 200000,\n          });\n\n          await instance({\n            method: 'POST',\n            url: '/updateHackathon',\n            data: { id, theme_color_code },\n            timeout: 200000,\n          });\n\n\n          const { data } = response;\n          if (data.success) {\n            success('Hackathon updated successfully!');\n\n            wait(1200, () => {\n              history.push(`${adminRoot}/challenges/dates/${id}`);\n            });\n          } else {\n            success('Hackathon updated successfully!');\n\n            wait(1200, () => {\n              history.push(`${adminRoot}/challenges/dates/${id}`);\n            });\n          }\n        } catch (error) {\n          failed('Failed to update hackathon!');\n        }\n      };\n      updateProfile();\n    });\n  }\n    return null;\n  };\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n          <Breadcrumb heading=\"menu.brands\" match={match} />\n          <Separator className=\"mb-5\" />\n        </Colxx>\n      </Row>\n      <Row className=\"justify-content-center\">\n        <Colxx xxs=\"12\" md=\"10\" className=\"mb-4\">\n          <Card className=\"mb-4\">\n            <CardBody>\n              <CardTitle>\n                <div className=\"lead h4\">\n                  <IntlMessages id=\"challenges.theme-title\" />\n                </div>\n              </CardTitle>\n\n              <FormGroup className=\"mb-6\">\n                <Input value={colorHexCode} disabled />\n              </FormGroup>\n\n              <FormGroup className=\"mb-6 p-2\">\n                <CirclePicker\n                  width=\"100%\"\n                  color={colorHexCode}\n                  onChange={(event) => {\n                    setColorHexCode(event.hex);\n                    handleChange(event.hex, 'theme_color_code', true);\n                  }}\n                />\n              </FormGroup>\n            </CardBody>\n          </Card>\n\n          <Card className=\"mb-4\">\n            <CardBody>\n              <CardTitle>\n                <div className=\"lead h4\">\n                  <IntlMessages id=\"challenges.hackthon-logo-title\" />\n                </div>\n              </CardTitle>\n\n              <div className=\"form-group mb-6\">\n\n                {\n                  uploaded && <img className=\"mb-2\" id=\"checkImg\" src={uploaded} alt=\"BigCo Inc. logo\" width=\"70\" height=\"60\" /> ||\n                  data1.hackathon_logo && <img className=\"mb-2\" id=\"checkImg\" src={data1.hackathon_logo} alt=\"BigCo Inc. logo\" width=\"70\" height=\"60\" /> ||\n                  <img className=\"mb-2\" id=\"checkImg\" src={imgt} alt=\"BigCo Inc. logo\" width=\"70\" height=\"60\" />\n                  }\n\n                <InputGroup>\n                  <CustomInput\n                    type=\"file\"\n                    id=\"hackathon_logo\"\n                    name=\"customFile\"\n                    accept=\"image/jpeg, image/jpg, image/png\"\n                    onChange={handleFileChange}\n                  />\n                  <InputGroupAddon addonType=\"append\">\n                    <Button\n                      outline\n                      color=\"secondary\"\n                      onClick={handleUpload}\n                      id=\"hackathon_logo\"\n                    >\n                      <IntlMessages id=\"challenges.upload-button\" />\n                    </Button>\n                  </InputGroupAddon>\n                </InputGroup>\n                <p id=\"check\"> </p>\n              </div>\n            </CardBody>\n          </Card>\n\n          <Card className=\"mb-4\">\n            <CardBody>\n              <CardTitle>\n                <div className=\"lead h4\">\n                  <IntlMessages id=\"challenges.hackthon-cover-image-title\" />\n                </div>\n              </CardTitle>\n\n\n              <div className=\"form-group mb-6\">\n                <div>\n                {\n                  uploaded2 && <img className=\"mb-2\" id=\"checkImg\" src={uploaded2} alt=\"BigCo Inc. logo\" width=\"70\" height=\"60\" /> ||\n                  data1.hackathon_cover_img && <img className=\"mb-2\" id=\"checkImg\" src={data1.hackathon_cover_img} alt=\"BigCo Inc. logo\" width=\"70\" height=\"60\" /> ||\n                  <img className=\"mb-2\" id=\"checkImg\" src={imgt} alt=\"BigCo Inc. logo\" width=\"70\" height=\"60\" />\n                  }\n                  {/* <img className=\"mb-2\" id=\"check2Img\" src={(uploaded2) ? values.hackathon_cover_img : data1.hackathon_cover_img} alt=\"BigCo Inc. logo\" width=\"70\" height=\"60\" /> */}\n               </div>\n                <InputGroup>\n                  <CustomInput\n                    type=\"file\"\n                    id=\"hackathon_cover_img\"\n                    name=\"customFile\"\n                    accept=\"image/jpeg, image/jpg, image/png\"\n                    onChange={handleFileChange2}\n                  />\n                  <InputGroupAddon addonType=\"append\">\n                    <Button\n                      outline\n                      color=\"secondary\"\n                      id=\"hackathon_cover_img\"\n                      onClick={handleUpload2}\n                    >\n                      <IntlMessages id=\"challenges.upload-button\" />\n                    </Button>\n                  </InputGroupAddon>\n                </InputGroup>\n                <p id=\"check2\"> </p>\n              </div>\n            </CardBody>\n          </Card>\n\n          <FormGroup className=\"text-center mb-4\">\n            <StateButton\n              id=\"submitLinks\"\n              color=\"primary\"\n              type=\"submit\"\n              onClick={() => handleSubmit(values)}\n            >\n              <IntlMessages id=\"forms.update\" />\n            </StateButton>\n          </FormGroup>\n        </Colxx>\n      </Row>\n\n      {/* <Row>\n        <Colxx>\n          <FormGroup className=\"text-center\">\n            <Button\n              color=\"primary\"\n              className=\"m-3\"\n              onClick={() =>\n                history.push(`${adminRoot}/challenges/links/${id}`)\n              }\n            >\n              <IntlMessages id=\"forms.previous\" />\n            </Button>\n          </FormGroup>\n        </Colxx>\n      </Row> */}\n    </>\n  );\n};\n\nexport default Brands;\n"],"sourceRoot":""}