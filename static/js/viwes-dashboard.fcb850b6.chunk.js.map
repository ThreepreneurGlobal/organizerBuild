{"version":3,"sources":["containers/navs/Breadcrumb.js","containers/application/HackathonCard.js","views/app/blank-page.js","views/app/dashboard/components/context-menu.js","views/app/dashboard/index.js"],"names":["getMenuTitle","sub","adminRoot","id","getUrl","path","split","BreadcrumbItems","match","substr","paths","filter","Boolean","length","indexOf","x","className","map","index","active","to","BreadcrumbContainer","heading","getStatusColor","status","getStatusText","submit_status","getTypeText","HackCard","data","showEdit","name","tagline","hackathon_start","application_end","hackathon_website","hackathon_type_id","otherArray","console","log","history","useHistory","href","target","rel","sdg_goals","item","src","alt","style","height","$mega_trends","color","pill","outline","onClick","push","BlankPage","xxs","DashboardContextMenu","onContextMenuClick","borderRadius","action","defaultPage","organizerHackathons","Row","connect","authUser","hackathonData","accessToken","loading","error","getAllHackathonsAction","getAllHackathons","getCurrentUser","useEffect","countDrafts","forEach","Breadcrumb","undefined","md","e"],"mappings":"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","file":"static/js/viwes-dashboard.fcb850b6.chunk.js","sourcesContent":["/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport IntlMessages from '../../helpers/IntlMessages';\nimport { adminRoot } from '../../constants/defaultValues';\n\nconst getMenuTitle = (sub) => {\n  if (`/${sub}` === adminRoot) return <IntlMessages id=\"menu.home\" />;\n  return <IntlMessages id={`menu.${sub}`} />;\n};\n\nconst getUrl = (path, sub) => {\n  return path.split(sub)[0] + sub;\n};\n\nconst BreadcrumbContainer = ({ heading, match }) => {\n  return (\n    <>\n      {heading && (\n        <h1>\n          <IntlMessages id={heading} />\n        </h1>\n      )}\n      {match ? <BreadcrumbItems match={match} /> : null}\n    </>\n  );\n};\n\nconst BreadcrumbItems = ({ match }) => {\n  const path = match.path.substr(1);\n  let paths = path.split('/').filter(Boolean);\n\n  if (paths[paths.length - 1].indexOf(':') > -1) {\n    paths = paths.filter((x) => x.indexOf(':') === -1);\n  }\n  return (\n    <>\n      <Breadcrumb className=\"pt-0 breadcrumb-container d-none d-sm-block d-lg-inline-block\">\n        {paths.map((sub, index) => {\n          return (\n            <BreadcrumbItem key={index} active={paths.length === index + 1}>\n              {paths.length !== index + 1 ? (\n                <NavLink to={`/${getUrl(path, sub, index)}`}>\n                  {getMenuTitle(sub)}\n                </NavLink>\n              ) : (\n                getMenuTitle(sub)\n              )}\n            </BreadcrumbItem>\n          );\n        })}\n      </Breadcrumb>\n    </>\n  );\n};\n\nexport default BreadcrumbContainer;\n","/* eslint-disable camelcase */\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {\n  Badge,\n  Button,\n  Card,\n  CardBody,\n  CardSubtitle,\n  CardText,\n  CardTitle,\n  Row,\n} from 'reactstrap';\nimport { Separator } from '../../components/common/CustomBootstrap';\nimport { adminRoot } from '../../constants/defaultValues';\nimport IntlMessages from '../../helpers/IntlMessages';\n\nconst getStatusColor = (status) => {\n  if (status === 1) return 'outline-success';\n  if (status === 0 || status === 3) return 'outline-warning';\n  if (status === 2) return 'outline-danger';\n  return '';\n};\n\nconst getStatusText = (submit_status,status) => {\n  if (submit_status === 0) return 'Draft';\n  if (submit_status === 1 && status === 0) return 'Under Review';\n  if (status === 1) return 'Approved';\n  if (status === 2) return 'Rejected';\n  if (status === 3) return 'On-Hold';\n  return '';\n};\n\nconst getTypeText = (status) => {\n  if (status === 0) return 'Online';\n  if (status === 1) return 'Blender';\n  if (status === 2) return 'Offiline';\n  return '';\n};\n\nconst HackCard = ({ data, showEdit = true }) => {\n  const {\n    id,\n    name,\n    tagline,\n    submit_status,\n    hackathon_start,\n    application_end,\n    hackathon_website,\n    hackathon_type_id,\n    otherArray,\n    status\n  } = data;\n  \n  console.log(hackathon_website);\n  const history = useHistory();\n\n  return (\n    <Card>\n      <CardBody>\n        <CardTitle>\n          <p className=\"h2 lead\">\n            <a\n              href={hackathon_website}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              className=\"new-tab\"\n            >\n              {name}\n            </a>\n          </p>\n          <CardSubtitle className=\"text-small\">{tagline}</CardSubtitle>\n        </CardTitle>\n\n        <Row className=\"justify-content-center\">\n          {otherArray.sdg_goals.map((item) => (\n            <img\n              key={item.id}\n              src={`/assets/img/sdg/${item.id}.png`}\n              alt={item.name}\n              className=\"list-thumbnail align-self-center m-1 small hackcard-icon\"\n            />\n          ))}\n\n          <div className=\"vertical\" style={{ height: '45px' }} />\n\n          {otherArray.$mega_trends.map((item) => (\n            <img\n              key={item.id}\n              src={`/assets/img/mega-trends/${item.id}.png`}\n              alt={item.name}\n              className=\"list-thumbnail align-self-center m-1 small hackcard-icon\"\n            />\n          ))}\n        </Row>\n\n        <Separator className=\"my-4\" />\n\n        <CardTitle>\n          <IntlMessages id=\"hackcard.application\" />\n          <CardText>{application_end}</CardText>\n        </CardTitle>\n\n        <CardTitle>\n          <IntlMessages id=\"hackcard.hackthon\" />\n          <CardText>{hackathon_start}</CardText>\n        </CardTitle>\n\n        <Separator className=\"mb-4\" />\n\n        <Badge\n          color={getStatusColor(status)}\n          pill\n          outline\n          className=\"mb-3 mr-3\"\n        >\n          {getStatusText(submit_status,status)}\n        </Badge>\n\n        <Badge color=\"outline-primary\" pill className=\"mb-3\">\n          {getTypeText(hackathon_type_id)}\n        </Badge>\n\n        {/* <CardSubtitle className=\"text-small\">\n          <NavLink href={hackathon_website} target=\"_blank\" rel=\"noreferrer\">\n            <IntlMessages id=\"hackcard.view-more\" />\n          </NavLink>\n        </CardSubtitle> */}\n\n        <Row className=\"justify-content-center\">\n          {showEdit && (\n            <Button\n              className=\"m-1\"\n              outline\n              onClick={() => {\n                history.push(`${adminRoot}/challenges/basics/${id}`);\n              }}\n            >\n              <IntlMessages id=\"hackcard.edit-button\" />\n            </Button>\n          )}\n          <Button\n            className=\"m-1\"\n            color=\"primary\"\n            onClick={() => {\n              history.push(`${adminRoot}/challenges/details/${id}`);\n            }}\n          >\n            <IntlMessages id=\"hackcard.view-details-button\" />\n          </Button>\n        </Row>\n\n        {/* <pre>{JSON.stringify(data, null, 2)}</pre> */}\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default HackCard;\n","import React from 'react';\nimport { Row } from 'reactstrap';\nimport IntlMessages from '../../helpers/IntlMessages';\nimport { Colxx, Separator } from '../../components/common/CustomBootstrap';\nimport Breadcrumb from '../../containers/navs/Breadcrumb';\n\nconst BlankPage = ({ match }) => {\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n          <Breadcrumb heading=\"menu.blank-page\" match={match} />\n          <Separator className=\"mb-5\" />\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx xxs=\"12\" className=\"mb-4\">\n          <p>\n            <IntlMessages id=\"menu.blank-page\" />\n          </p>\n        </Colxx>\n      </Row>\n    </>\n  );\n};\n\nexport default BlankPage;\n","import React from 'react';\nimport { ContextMenu, MenuItem } from 'react-contextmenu';\n\nconst DashboardContextMenu = ({ onContextMenuClick }) => {\n  return (\n    <ContextMenu id=\"same_unique_identifier\" style={{ borderRadius: '16px' }}>\n      <MenuItem onClick={onContextMenuClick} data={{ action: 'refresh' }}>\n        <i className=\"simple-icon-refresh\" /> <span> Refresh</span>\n      </MenuItem>\n    </ContextMenu>\n  );\n};\n\nexport default DashboardContextMenu;\n","import React, { useEffect } from 'react';\nimport { /* Card, CardBody, */ Row } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { ContextMenuTrigger } from 'react-contextmenu';\n\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport Breadcrumb from '../../../containers/navs/Breadcrumb';\n// import Bar from '../../../components/charts/Bar';\n\n// import DashboardDataCarousel from './DashboardDataCarousel';\n\n// import { lineChartData } from '../../../data/charts';\nimport { getCurrentUser, log } from '../../../helpers/Utils';\n\nimport HackCard from '../../../containers/application/HackathonCard';\nimport { getAllHackathons } from '../../../redux/actions';\nimport DashboardContextMenu from './components/context-menu';\n\nconst defaultPage = (organizerHackathons) => {\n  if (organizerHackathons.length === 0) {\n    return (\n      <Row>\n        <Colxx xxs=\"12\">\n          <h2>\n            <b> Your hackathons</b>\n          </h2>\n          <br />\n          <div className=\"alert alert-primary text-center mb-5 mx-5\">\n            You have\n            <br />\n            <span className=\"display-1\">\n              <b>0</b>\n            </span>\n            <br />\n            hackathons created!\n          </div>\n        </Colxx>\n      </Row>\n      //   <Row>\n      //   <Colxx xxs=\"12\">\n      //     <h1>You Have not Added any Hackathon Yet! Create a Hackathon First!</h1>\n      //   </Colxx>\n      // </Row>\n    );\n  }\n  return null;\n};\n\nconst Dashboard = ({\n  match,\n  accessToken,\n  organizerHackathons,\n  getAllHackathonsAction,\n  loading,\n  error,\n}) => {\n  const { id } = getCurrentUser();\n  useEffect(() => {\n    getAllHackathonsAction(accessToken, id);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (loading) return <div className=\"loading\" />;\n\n  if (error) log(error);\n\n  const onContextMenuClick = (e, item) => {\n    log('onContextMenuClick - action : ', item.action);\n\n    switch (item.action) {\n      case 'refresh':\n        getAllHackathonsAction(accessToken, id);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  let countDrafts = 0;\n  organizerHackathons.forEach((item) => {\n    if (item.status === 0) {\n      countDrafts += 1;\n    }\n  });\n\n  console.log(countDrafts);\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n          <Breadcrumb heading=\"menu.dashboard\" match={match} />\n          <Separator className=\"mb-5\" />\n        </Colxx>\n      </Row>\n\n      <ContextMenuTrigger id=\"same_unique_identifier\">\n        {/* <Row>\n          <Colxx xxs=\"12\" md=\"8\">\n            <DashboardDataCarousel data={organizerHackathons} />\n          </Colxx>\n\n           <Colxx xxs=\"12\" md=\"8\" className=\"mb-4\">\n            <Card>\n              <CardBody>\n                <div className=\"chart-container\">\n                  <Bar data={lineChartData} shadow />\n                </div>\n              </CardBody>\n            </Card>\n          </Colxx> \n        </Row> */}\n\n        {defaultPage(organizerHackathons)}\n\n        <Row>\n          {organizerHackathons.map((item) => {\n            if (item.name !== undefined && item.status !== 0) {\n              return (\n                <Colxx xxs=\"12\" md=\"4\" key={item.id} className=\"mb-4\">\n                  <HackCard data={item} showEdit={item.submit_status === 0} />\n                </Colxx>\n              );\n            }\n            return null;\n          })}\n        </Row>\n\n        {countDrafts > 0 && (\n          <Row>\n            <Colxx xxs=\"12\">\n              <h1>Drafts</h1>\n              <Separator className=\"mb-5\" />\n            </Colxx>\n          </Row>\n        )}\n\n        <Row>\n          {organizerHackathons.map((item) => {\n            if (item.name !== undefined && item.status === 0) {\n              return (\n                <Colxx xxs=\"12\" md=\"4\" key={item.id} className=\"mb-4\">\n                  <HackCard data={item} showEdit={item.submit_status === 0} />\n                </Colxx>\n              );\n            }\n            return null;\n          })}\n        </Row>\n        \n      </ContextMenuTrigger>\n      <DashboardContextMenu onContextMenuClick={onContextMenuClick} />\n    </>\n  );\n};\n\nconst mapStateToProps = ({ authUser, hackathonData }) => {\n  const { accessToken } = authUser;\n  const { organizerHackathons, loading, error } = hackathonData;\n  return { accessToken, organizerHackathons, loading, error };\n};\n\nexport default connect(mapStateToProps, {\n  getAllHackathonsAction: getAllHackathons,\n})(Dashboard);\n"],"sourceRoot":""}