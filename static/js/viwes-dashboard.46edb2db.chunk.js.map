{"version":3,"sources":["containers/navs/Breadcrumb.js","views/app/blank-page.js","helpers/ThemeColors.js","components/charts/util.js","components/charts/config.js","components/charts/Bar.js","components/cards/IconCard.js","data/iconCards.js","components/carousel/GlideComponent.js","containers/dashboards/IconCardsCarousel.js","data/charts.js","views/app/dashboard.js"],"names":["getMenuTitle","sub","adminRoot","id","getUrl","path","split","BreadcrumbItems","match","substr","paths","filter","Boolean","length","indexOf","x","className","map","index","active","to","BreadcrumbContainer","heading","BlankPage","xxs","ThemeColors","rootStyle","getComputedStyle","document","body","themeColor1","getPropertyValue","trim","themeColor2","themeColor3","themeColor4","themeColor5","themeColor6","themeColor1_10","themeColor2_10","themeColor3_10","themeColor4_10","themeColor5_10","themeColor6_10","primaryColor","foregroundColor","separatorColor","chartTooltip","backgroundColor","titleFontColor","borderColor","borderWidth","bodyFontColor","bodySpacing","xPadding","yPadding","cornerRadius","barChartOptions","legend","position","labels","padding","usePointStyle","fontSize","responsive","maintainAspectRatio","scales","yAxes","gridLines","display","lineWidth","color","drawBorder","ticks","beginAtZero","stepSize","min","max","xAxes","tooltips","Bar","data","shadow","chartContainer","useRef","useState","setChartInstance","useEffect","current","Chart","defaults","global","datasets","barWithShadow","bar","controllers","extend","draw","ease","prototype","call","this","ctx","chart","save","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","apply","arguments","restore","context","getContext","newChartInstance","type","options","ref","IconCard","icon","title","value","Card","CardBody","IntlMessages","React","memo","resizeTimeOut","mountTimeOut","GlideComponent","props","carousel","glideCarousel","onResize","clearTimeout","setTimeout","update","Glide","settings","direction","getDirection","mount","on","event","createEvent","initEvent","window","dispatchEvent","destroy","node","data-glide-el","children","hideNav","data-glide-dir","total","Children","count","dots","i","push","renderDots","defaultProps","IconCardsCarousel","gap","perView","breakpoints","320","576","1600","1800","item","colors","BarChartData","label","Dashboard","Row","Breadcrumb"],"mappings":"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","file":"static/js/viwes-dashboard.46edb2db.chunk.js","sourcesContent":["/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport IntlMessages from '../../helpers/IntlMessages';\nimport { adminRoot } from '../../constants/defaultValues';\n\nconst getMenuTitle = (sub) => {\n  if (`/${sub}` === adminRoot) return <IntlMessages id=\"menu.home\" />;\n  return <IntlMessages id={`menu.${sub}`} />;\n};\n\nconst getUrl = (path, sub) => {\n  return path.split(sub)[0] + sub;\n};\n\nconst BreadcrumbContainer = ({ heading, match }) => {\n  return (\n    <>\n      {heading && (\n        <h1>\n          <IntlMessages id={heading} />\n        </h1>\n      )}\n      <BreadcrumbItems match={match} />\n    </>\n  );\n};\n\nconst BreadcrumbItems = ({ match }) => {\n  const path = match.path.substr(1);\n  let paths = path.split('/').filter(Boolean);\n\n  if (paths[paths.length - 1].indexOf(':') > -1) {\n    paths = paths.filter((x) => x.indexOf(':') === -1);\n  }\n  return (\n    <>\n      <Breadcrumb className=\"pt-0 breadcrumb-container d-none d-sm-block d-lg-inline-block\">\n        {paths.map((sub, index) => {\n          return (\n            <BreadcrumbItem key={index} active={paths.length === index + 1}>\n              {paths.length !== index + 1 ? (\n                <NavLink to={`/${getUrl(path, sub, index)}`}>\n                  {getMenuTitle(sub)}\n                </NavLink>\n              ) : (\n                getMenuTitle(sub)\n              )}\n            </BreadcrumbItem>\n          );\n        })}\n      </Breadcrumb>\n    </>\n  );\n};\n\nexport default BreadcrumbContainer;\n","import React from 'react';\nimport { Row } from 'reactstrap';\nimport IntlMessages from '../../helpers/IntlMessages';\nimport { Colxx, Separator } from '../../components/common/CustomBootstrap';\nimport Breadcrumb from '../../containers/navs/Breadcrumb';\n\nconst BlankPage = ({ match }) => {\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n          <Breadcrumb heading=\"menu.blank-page\" match={match} />\n          <Separator className=\"mb-5\" />\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx xxs=\"12\" className=\"mb-4\">\n          <p>\n            <IntlMessages id=\"menu.blank-page\" />\n          </p>\n        </Colxx>\n      </Row>\n    </>\n  );\n};\n\nexport default BlankPage;\n","/* eslint-disable import/prefer-default-export */\nexport const ThemeColors = () => {\n  const rootStyle = getComputedStyle(document.body);\n  return {\n    themeColor1: rootStyle.getPropertyValue('--theme-color-1').trim(),\n    themeColor2: rootStyle.getPropertyValue('--theme-color-2').trim(),\n    themeColor3: rootStyle.getPropertyValue('--theme-color-3').trim(),\n    themeColor4: rootStyle.getPropertyValue('--theme-color-4').trim(),\n    themeColor5: rootStyle.getPropertyValue('--theme-color-5').trim(),\n    themeColor6: rootStyle.getPropertyValue('--theme-color-6').trim(),\n    themeColor1_10: rootStyle.getPropertyValue('--theme-color-1-10').trim(),\n    themeColor2_10: rootStyle.getPropertyValue('--theme-color-2-10').trim(),\n    themeColor3_10: rootStyle.getPropertyValue('--theme-color-3-10').trim(),\n    themeColor4_10: rootStyle.getPropertyValue('--theme-color-3-10').trim(),\n    themeColor5_10: rootStyle.getPropertyValue('--theme-color-3-10').trim(),\n    themeColor6_10: rootStyle.getPropertyValue('--theme-color-3-10').trim(),\n    primaryColor: rootStyle.getPropertyValue('--primary-color').trim(),\n    foregroundColor: rootStyle.getPropertyValue('--foreground-color').trim(),\n    separatorColor: rootStyle.getPropertyValue('--separator-color').trim(),\n  };\n};\n","import { ThemeColors } from '../../helpers/ThemeColors';\n\nexport const chartTooltip = {\n  backgroundColor: ThemeColors().foregroundColor,\n  titleFontColor: ThemeColors().primaryColor,\n  borderColor: ThemeColors().separatorColor,\n  borderWidth: 0.5,\n  bodyFontColor: ThemeColors().primaryColor,\n  bodySpacing: 10,\n  xPadding: 15,\n  yPadding: 15,\n  cornerRadius: 0.15,\n};\n\nexport const centerTextPlugin = {\n  afterDatasetsUpdate() {},\n  beforeDraw(chart) {\n    const width = chart.chartArea.right;\n    const height = chart.chartArea.bottom;\n    const { ctx } = chart.chart;\n    ctx.restore();\n\n    let activeLabel = chart.data.labels[0];\n    let activeValue = chart.data.datasets[0].data[0];\n    let dataset = chart.data.datasets[0];\n    // eslint-disable-next-line no-underscore-dangle\n    let meta = dataset._meta[Object.keys(dataset._meta)[0]];\n    let { total } = meta;\n\n    let activePercentage = parseFloat(((activeValue / total) * 100).toFixed(1));\n    activePercentage = chart.legend.legendItems[0].hidden\n      ? 0\n      : activePercentage;\n\n    if (chart.pointAvailable) {\n      activeLabel = chart.data.labels[chart.pointIndex];\n      activeValue =\n        chart.data.datasets[chart.pointDataIndex].data[chart.pointIndex];\n\n      dataset = chart.data.datasets[chart.pointDataIndex];\n      // eslint-disable-next-line no-underscore-dangle\n      meta = dataset._meta[Object.keys(dataset._meta)[0]];\n      total = meta.total;\n      activePercentage = parseFloat(((activeValue / total) * 100).toFixed(1));\n      activePercentage = chart.legend.legendItems[chart.pointIndex].hidden\n        ? 0\n        : activePercentage;\n    }\n\n    ctx.font = '36px Nunito, sans-serif';\n    ctx.fillStyle = ThemeColors().primaryColor;\n    ctx.textBaseline = 'middle';\n\n    const text = `${activePercentage}%`;\n    const textX = Math.round((width - ctx.measureText(text).width) / 2);\n    const textY = height / 2;\n    ctx.fillText(text, textX, textY);\n\n    ctx.font = '14px Nunito, sans-serif';\n    ctx.textBaseline = 'middle';\n\n    const text2 = activeLabel;\n    const textX2 = Math.round((width - ctx.measureText(text2).width) / 2);\n    const textY2 = height / 2 - 30;\n    ctx.fillText(text2, textX2, textY2);\n\n    ctx.save();\n  },\n  // eslint-disable-next-line no-unused-vars\n  beforeEvent(chart, event, options) {\n    const firstPoint = chart.getElementAtEvent(event)[0];\n\n    if (firstPoint) {\n      // eslint-disable-next-line no-underscore-dangle,no-param-reassign\n      chart.pointIndex = firstPoint._index;\n      // eslint-disable-next-line no-underscore-dangle,no-param-reassign\n      chart.pointDataIndex = firstPoint._datasetIndex;\n      // eslint-disable-next-line no-param-reassign\n      chart.pointAvailable = true;\n    }\n  },\n};\n","import { chartTooltip } from './util';\n\nexport const lineChartOptions = {\n  legend: {\n    display: false,\n  },\n  responsive: true,\n  maintainAspectRatio: false,\n  tooltips: chartTooltip,\n  plugins: {\n    datalabels: {\n      display: false,\n    },\n  },\n  scales: {\n    yAxes: [\n      {\n        gridLines: {\n          display: true,\n          lineWidth: 1,\n          color: 'rgba(0,0,0,0.1)',\n          drawBorder: false,\n        },\n        ticks: {\n          beginAtZero: true,\n          stepSize: 5,\n          min: 50,\n          max: 70,\n          padding: 20,\n        },\n      },\n    ],\n    xAxes: [\n      {\n        gridLines: {\n          display: false,\n        },\n      },\n    ],\n  },\n};\nexport const polarAreaChartOptions = {\n  legend: {\n    position: 'bottom',\n    labels: {\n      padding: 30,\n      usePointStyle: true,\n      fontSize: 12,\n    },\n  },\n  responsive: true,\n  maintainAspectRatio: false,\n  scale: {\n    ticks: {\n      display: false,\n    },\n  },\n  plugins: {\n    datalabels: {\n      display: false,\n    },\n  },\n  tooltips: chartTooltip,\n};\n\nexport const areaChartOptions = {\n  legend: {\n    display: false,\n  },\n  responsive: true,\n  maintainAspectRatio: false,\n  tooltips: chartTooltip,\n  scales: {\n    yAxes: [\n      {\n        gridLines: {\n          display: true,\n          lineWidth: 1,\n          color: 'rgba(0,0,0,0.1)',\n          drawBorder: false,\n        },\n        ticks: {\n          beginAtZero: true,\n          stepSize: 5,\n          min: 50,\n          max: 70,\n          padding: 20,\n        },\n      },\n    ],\n    xAxes: [\n      {\n        gridLines: {\n          display: false,\n        },\n      },\n    ],\n  },\n};\n\nexport const scatterChartOptions = {\n  legend: {\n    position: 'bottom',\n    labels: {\n      padding: 30,\n      usePointStyle: true,\n      fontSize: 12,\n    },\n  },\n  responsive: true,\n  maintainAspectRatio: false,\n  scales: {\n    yAxes: [\n      {\n        gridLines: {\n          display: true,\n          lineWidth: 1,\n          color: 'rgba(0,0,0,0.1)',\n          drawBorder: false,\n        },\n        ticks: {\n          beginAtZero: true,\n          stepSize: 20,\n          min: -80,\n          max: 80,\n          padding: 20,\n        },\n      },\n    ],\n    xAxes: [\n      {\n        gridLines: {\n          display: true,\n          lineWidth: 1,\n          color: 'rgba(0,0,0,0.1)',\n        },\n      },\n    ],\n  },\n  tooltips: chartTooltip,\n\n  // legend: {\n  //   position: 'bottom',\n  //   labels: {\n  //     padding: 30,\n  //     usePointStyle: true,\n  //     fontSize: 12,\n  //   },\n  // },\n  // responsive: true,\n  // maintainAspectRatio: false,\n  // scales: {\n  //   yAxes: [\n  //     {\n  //       gridLines: {\n  //         display: true,\n  //         lineWidth: 1,\n  //         color: 'rgba(0,0,0,0.1)',\n  //         drawBorder: false,\n  //       },\n  //       ticks: {\n  //         beginAtZero: true,\n  //         stepSize: 20,\n  //         min: -80,\n  //         max: 80,\n  //         padding: 20,\n  //       },\n  //     },\n  //   ],\n  //   xAxes: [\n  //     {\n  //       gridLines: {\n  //         display: true,\n  //         lineWidth: 1,\n  //         color: 'rgba(0,0,0,0.1)',\n  //       },\n  //     },\n  //   ],\n  // },\n};\n\nexport const barChartOptions = {\n  legend: {\n    position: 'bottom',\n    labels: {\n      padding: 30,\n      usePointStyle: true,\n      fontSize: 12,\n    },\n  },\n  responsive: true,\n  maintainAspectRatio: false,\n  scales: {\n    yAxes: [\n      {\n        gridLines: {\n          display: true,\n          lineWidth: 1,\n          color: 'rgba(0,0,0,0.1)',\n          drawBorder: false,\n        },\n        ticks: {\n          beginAtZero: true,\n          stepSize: 100,\n          min: 300,\n          max: 800,\n          padding: 20,\n        },\n      },\n    ],\n    xAxes: [\n      {\n        gridLines: {\n          display: false,\n        },\n      },\n    ],\n  },\n  tooltips: chartTooltip,\n};\n\nexport const radarChartOptions = {\n  legend: {\n    position: 'bottom',\n    labels: {\n      padding: 30,\n      usePointStyle: true,\n      fontSize: 12,\n    },\n  },\n  responsive: true,\n  maintainAspectRatio: false,\n  scale: {\n    ticks: {\n      display: false,\n    },\n  },\n  tooltips: chartTooltip,\n};\n\nexport const pieChartOptions = {\n  legend: {\n    position: 'bottom',\n    labels: {\n      padding: 30,\n      usePointStyle: true,\n      fontSize: 12,\n    },\n  },\n  responsive: true,\n  maintainAspectRatio: false,\n  title: {\n    display: false,\n  },\n  layout: {\n    padding: {\n      bottom: 20,\n    },\n  },\n  tooltips: chartTooltip,\n};\n\nexport const doughnutChartOptions = {\n  legend: {\n    position: 'bottom',\n    labels: {\n      padding: 30,\n      usePointStyle: true,\n      fontSize: 12,\n    },\n  },\n  responsive: true,\n  maintainAspectRatio: false,\n  title: {\n    display: false,\n  },\n  cutoutPercentage: 80,\n  layout: {\n    padding: {\n      bottom: 20,\n    },\n  },\n  tooltips: chartTooltip,\n};\n\nexport const smallLineChartOptions = {\n  layout: {\n    padding: {\n      left: 5,\n      right: 5,\n      top: 10,\n      bottom: 10,\n    },\n  },\n  responsive: true,\n  maintainAspectRatio: false,\n  legend: {\n    display: false,\n  },\n  scales: {\n    yAxes: [\n      {\n        ticks: {\n          beginAtZero: true,\n        },\n        display: false,\n      },\n    ],\n    xAxes: [\n      {\n        display: false,\n      },\n    ],\n  },\n};\n","/* eslint-disable prefer-rest-params */\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Chart } from 'chart.js';\n\nimport { barChartOptions } from './config';\n\nconst Bar = ({ data, shadow = false }) => {\n  const chartContainer = useRef(null);\n  const [, setChartInstance] = useState(null);\n\n  useEffect(() => {\n    if (chartContainer && chartContainer.current) {\n      if (shadow) {\n        Chart.defaults.global.datasets.barWithShadow =\n          Chart.defaults.global.datasets.bar;\n        Chart.defaults.barWithShadow = Chart.defaults.bar;\n        Chart.controllers.barWithShadow = Chart.controllers.bar.extend({\n          draw(ease) {\n            Chart.controllers.bar.prototype.draw.call(this, ease);\n            const {\n              chart: { ctx },\n            } = this;\n            ctx.save();\n            ctx.shadowColor = 'rgba(0,0,0,0.2)';\n            ctx.shadowBlur = 7;\n            ctx.shadowOffsetX = 5;\n            ctx.shadowOffsetY = 7;\n            ctx.responsive = true;\n            Chart.controllers.bar.prototype.draw.apply(this, arguments);\n            ctx.restore();\n          },\n        });\n      }\n      const context = chartContainer.current.getContext('2d');\n      const newChartInstance = new Chart(context, {\n        type: shadow ? 'barWithShadow' : 'bar',\n        options: barChartOptions,\n        data,\n      });\n      setChartInstance(newChartInstance);\n    }\n  }, [chartContainer, data, shadow]);\n\n  return <canvas ref={chartContainer} />;\n};\n\nexport default Bar;\n","import React from 'react';\nimport { Card, CardBody } from 'reactstrap';\nimport IntlMessages from '../../helpers/IntlMessages';\n\nconst IconCard = ({ className = 'mb-4', icon, title, value }) => {\n  return (\n    <div className={`icon-row-item ${className}`}>\n      <Card>\n        <CardBody className=\"text-center\">\n          <i className={icon} />\n          <p className=\"card-text font-weight-semibold mb-0\">\n            <IntlMessages id={title} />\n          </p>\n          <p className=\"lead text-center\">{value}</p>\n        </CardBody>\n      </Card>\n    </div>\n  );\n};\n\nexport default React.memo(IconCard);\n","const data = [\n  { title: 'dashboards.pending-orders', icon: 'iconsminds-clock', value: 14 },\n  {\n    title: 'dashboards.completed-orders',\n    icon: 'iconsminds-basket-coins',\n    value: 32,\n  },\n  {\n    title: 'dashboards.refund-requests',\n    icon: 'iconsminds-arrow-refresh',\n    value: 74,\n  },\n  { title: 'dashboards.new-comments', icon: 'iconsminds-mail-read', value: 25 },\n];\nexport default data;\n","// eslint-disable react/forbid-prop-types\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Glide from '@glidejs/glide';\nimport { getDirection } from '../../helpers/Utils';\nimport '@glidejs/glide/dist/css/glide.core.min.css';\n\nlet resizeTimeOut = -1;\nlet mountTimeOut = -1;\n\nfunction GlideComponent(props) {\n  let carousel;\n  let glideCarousel;\n\n  const onResize = () => {\n    clearTimeout(resizeTimeOut);\n    resizeTimeOut = setTimeout(() => {\n      glideCarousel.update();\n      resizeTimeOut = -1;\n    }, 500);\n  };\n\n  const initGlide = () => {\n    glideCarousel = new Glide(carousel, {\n      ...props.settings,\n      direction: getDirection().direction,\n    });\n    glideCarousel.mount();\n    glideCarousel.on('resize', onResize);\n    mountTimeOut = setTimeout(() => {\n      const event = document.createEvent('HTMLEvents');\n      event.initEvent('resize', false, false);\n      window.dispatchEvent(event);\n    }, 500);\n  };\n\n  const destroyGlide = () => {\n    clearTimeout(resizeTimeOut);\n    clearTimeout(mountTimeOut);\n    if (glideCarousel) {\n      glideCarousel.destroy();\n    }\n  };\n\n  useEffect(() => {\n    initGlide();\n    return () => {\n      destroyGlide();\n    };\n    /* eslint-disable-next-line react-hooks/exhaustive-deps */\n  }, []);\n\n  const renderDots = () => {\n    const total = React.Children.count(props.children);\n    const dots = [];\n    // eslint-disable-next-line no-plusplus\n    for (let i = 0; i < total; i++) {\n      dots.push(\n        <button\n          type=\"button\"\n          className=\"glide__bullet slider-dot\"\n          key={i}\n          data-glide-dir={`=${i}`}\n        />\n      );\n    }\n    return dots;\n  };\n\n  return (\n    <div>\n      {/* eslint-disable-next-line no-return-assign */}\n      <div className=\"glide\" ref={(node) => (carousel = node)}>\n        <div data-glide-el=\"track\" className=\"glide__track\">\n          {/* eslint-disable-next-line react/destructuring-assignment */}\n          <div className=\"glide__slides\">{props.children}</div>\n        </div>\n        {/* eslint-disable-next-line react/destructuring-assignment */}\n        {!props.settings.hideNav && (\n          <div className=\"glide__arrows slider-nav\" data-glide-el=\"controls\">\n            <button\n              type=\"button\"\n              className=\"glide__arrow glide__arrow--left left-arrow btn btn-link\"\n              data-glide-dir=\"<\"\n            >\n              <i className=\"simple-icon-arrow-left\" />\n            </button>\n\n            <div\n              className=\"glide__bullets slider-dot-container\"\n              data-glide-el=\"controls[nav]\"\n            >\n              {renderDots()}\n            </div>\n\n            <button\n              type=\"button\"\n              className=\"glide__arrow glide__arrow--right right-arrow btn btn-link\"\n              data-glide-dir=\">\"\n            >\n              <i className=\"simple-icon-arrow-right\" />\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nGlideComponent.defaultProps = {\n  settings: {},\n};\n\nGlideComponent.propTypes = {\n  settings: PropTypes.shape({\n    type: PropTypes.string,\n    startAt: PropTypes.number,\n    perView: PropTypes.number,\n    focusAt: PropTypes.oneOf([PropTypes.number, PropTypes.string]),\n    gap: PropTypes.number,\n    autoplay: PropTypes.bool,\n    hoverpause: PropTypes.bool,\n    keyboard: PropTypes.bool,\n    bound: PropTypes.bool,\n    swipeThreshold: PropTypes.oneOf([PropTypes.number, PropTypes.bool]),\n    dragThreshold: PropTypes.oneOf([PropTypes.number, PropTypes.bool]),\n    perTouch: PropTypes.oneOf([PropTypes.number, PropTypes.bool]),\n    touchRatio: PropTypes.number,\n    touchAngle: PropTypes.number,\n    animationDuration: PropTypes.number,\n    rewind: PropTypes.bool,\n    rewindDuration: PropTypes.number,\n    animationTimingFunc: PropTypes.string,\n    direction: PropTypes.string,\n    // eslint-disable-next-line react/forbid-prop-types\n    peek: PropTypes.object,\n    // eslint-disable-next-line react/forbid-prop-types\n    breakpoints: PropTypes.object,\n    // eslint-disable-next-line react/forbid-prop-types\n    classes: PropTypes.object,\n    throttle: PropTypes.number,\n  }),\n  // id: PropTypes.string,\n  // className: PropTypes.string,\n};\n\nexport default GlideComponent;\n","/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport IconCard from '../../components/cards/IconCard';\nimport data from '../../data/iconCards';\nimport GlideComponent from '../../components/carousel/GlideComponent';\n\nconst IconCardsCarousel = ({ className = 'icon-cards-row' }) => {\n  return (\n    <div className={className}>\n      <GlideComponent\n        settings={{\n          gap: 5,\n          perView: 4,\n          type: 'carousel',\n          breakpoints: {\n            320: { perView: 1 },\n            576: { perView: 2 },\n            1600: { perView: 3 },\n            1800: { perView: 4 },\n          },\n          hideNav: true,\n        }}\n      >\n        {data.map((item, index) => {\n          return (\n            <div key={`icon_card_${index}`}>\n              <IconCard {...item} className=\"mb-4\" />\n            </div>\n          );\n        })}\n      </GlideComponent>\n    </div>\n  );\n};\nexport default IconCardsCarousel;\n","import { ThemeColors } from '../helpers/ThemeColors';\n\nconst colors = ThemeColors();\n\nexport const lineChartData = {\n  labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n  datasets: [\n    {\n      label: '',\n      data: [54, 63, 60, 65, 60, 68, 60],\n      borderColor: colors.themeColor1,\n      pointBackgroundColor: colors.foregroundColor,\n      pointBorderColor: colors.themeColor1,\n      pointHoverBackgroundColor: colors.themeColor1,\n      pointHoverBorderColor: colors.foregroundColor,\n      pointRadius: 6,\n      pointBorderWidth: 2,\n      pointHoverRadius: 8,\n      fill: false,\n    },\n  ],\n};\n\nexport const polarAreaChartData = {\n  labels: ['Sales', 'Orders', 'Stock'],\n  datasets: [\n    {\n      data: [80, 90, 70],\n      borderWidth: 2,\n      borderColor: [colors.themeColor1, colors.themeColor2, colors.themeColor3],\n      backgroundColor: [\n        colors.themeColor1_10,\n        colors.themeColor2_10,\n        colors.themeColor3_10,\n      ],\n    },\n  ],\n};\n\nexport const areaChartData = {\n  labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n  datasets: [\n    {\n      label: '',\n      data: [54, 63, 60, 65, 60, 68, 60],\n      borderColor: colors.themeColor1,\n      pointBackgroundColor: colors.foregroundColor,\n      pointBorderColor: colors.themeColor1,\n      pointHoverBackgroundColor: colors.themeColor1,\n      pointHoverBorderColor: colors.foregroundColor,\n      pointRadius: 4,\n      pointBorderWidth: 2,\n      pointHoverRadius: 5,\n      fill: true,\n      borderWidth: 2,\n      backgroundColor: colors.themeColor1_10,\n    },\n  ],\n};\n\nexport const scatterChartData = {\n  datasets: [\n    {\n      borderWidth: 2,\n      showLine: false,\n      label: 'Cakes',\n      borderColor: colors.themeColor1,\n      backgroundColor: colors.themeColor1_10,\n      data: [\n        { x: 62, y: -78 },\n        { x: -0, y: 74 },\n        { x: -67, y: 45 },\n        { x: -26, y: -43 },\n        { x: -15, y: -30 },\n        { x: 65, y: -68 },\n        { x: -28, y: -61 },\n      ],\n    },\n    {\n      borderWidth: 2,\n      showLine: false,\n      label: 'Desserts',\n      borderColor: colors.themeColor2,\n      backgroundColor: colors.themeColor2_10,\n      data: [\n        { x: 79, y: 62 },\n        { x: 62, y: 0 },\n        { x: -76, y: -81 },\n        { x: -51, y: 41 },\n        { x: -9, y: 9 },\n        { x: 72, y: -37 },\n        { x: 62, y: -26 },\n      ],\n    },\n  ],\n};\n\nexport const BarChartData = {\n  labels: ['January', 'February', 'March', 'April', 'May', 'June'],\n  datasets: [\n    {\n      label: 'Cakes',\n      borderColor: colors.themeColor1,\n      backgroundColor: colors.themeColor1_10,\n      data: [456, 479, 324, 569, 702, 600],\n      borderWidth: 2,\n    },\n    {\n      label: 'Desserts',\n      borderColor: colors.themeColor2,\n      backgroundColor: colors.themeColor2_10,\n      data: [364, 504, 605, 400, 345, 320],\n      borderWidth: 2,\n    },\n  ],\n};\n\nexport const radarChartData = {\n  datasets: [\n    {\n      label: 'Stock',\n      borderWidth: 2,\n      pointBackgroundColor: colors.themeColor1,\n      borderColor: colors.themeColor1,\n      backgroundColor: colors.themeColor1_10,\n      data: [80, 90, 70],\n    },\n    {\n      label: 'Order',\n      borderWidth: 2,\n      pointBackgroundColor: colors.themeColor2,\n      borderColor: colors.themeColor2,\n      backgroundColor: colors.themeColor2_10,\n      data: [68, 80, 95],\n    },\n  ],\n  labels: ['Cakes', 'Desserts', 'Cupcakes'],\n};\n\nexport const pieChartData = {\n  labels: ['Cakes', 'Cupcakes', 'Desserts'],\n  datasets: [\n    {\n      label: '',\n      borderColor: [colors.themeColor1, colors.themeColor2, colors.themeColor3],\n      backgroundColor: [\n        colors.themeColor1_10,\n        colors.themeColor2_10,\n        colors.themeColor3_10,\n      ],\n      borderWidth: 2,\n      data: [15, 25, 20],\n    },\n  ],\n};\n\nexport const doughnutChartData = {\n  labels: ['Cakes', 'Cupcakes', 'Desserts'],\n  datasets: [\n    {\n      label: '',\n      borderColor: [colors.themeColor3, colors.themeColor2, colors.themeColor1],\n      backgroundColor: [\n        colors.themeColor3_10,\n        colors.themeColor2_10,\n        colors.themeColor1_10,\n      ],\n      borderWidth: 2,\n      data: [15, 25, 20],\n    },\n  ],\n};\n\nexport const smallChartData1 = {\n  labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n  datasets: [\n    {\n      label: 'Total Orders',\n      borderColor: colors.themeColor1,\n      pointBorderColor: colors.themeColor1,\n      pointHoverBackgroundColor: colors.themeColor1,\n      pointHoverBorderColor: colors.themeColor1,\n      pointRadius: 2,\n      pointBorderWidth: 3,\n      pointHoverRadius: 2,\n      fill: false,\n      borderWidth: 2,\n      data: [1250, 1300, 1550, 921, 1810, 1106, 1610],\n      datalabels: {\n        align: 'end',\n        anchor: 'end',\n      },\n    },\n  ],\n};\n\nexport const smallChartData2 = {\n  labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n  datasets: [\n    {\n      label: 'Pending Orders',\n      borderColor: colors.themeColor1,\n      pointBorderColor: colors.themeColor1,\n      pointHoverBackgroundColor: colors.themeColor1,\n      pointHoverBorderColor: colors.themeColor1,\n      pointRadius: 2,\n      pointBorderWidth: 3,\n      pointHoverRadius: 2,\n      fill: false,\n      borderWidth: 2,\n      data: [115, 120, 300, 222, 105, 85, 36],\n      datalabels: {\n        align: 'end',\n        anchor: 'end',\n      },\n    },\n  ],\n};\n\nexport const smallChartData3 = {\n  labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n  datasets: [\n    {\n      label: 'Total Orders',\n      borderColor: colors.themeColor1,\n      pointBorderColor: colors.themeColor1,\n      pointHoverBackgroundColor: colors.themeColor1,\n      pointHoverBorderColor: colors.themeColor1,\n      pointRadius: 2,\n      pointBorderWidth: 3,\n      pointHoverRadius: 2,\n      fill: false,\n      borderWidth: 2,\n      data: [350, 452, 762, 952, 630, 85, 158],\n      datalabels: {\n        align: 'end',\n        anchor: 'end',\n      },\n    },\n  ],\n};\n\nexport const smallChartData4 = {\n  labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n  datasets: [\n    {\n      label: 'Total Orders',\n      borderColor: colors.themeColor1,\n      pointBorderColor: colors.themeColor1,\n      pointHoverBackgroundColor: colors.themeColor1,\n      pointHoverBorderColor: colors.themeColor1,\n      pointRadius: 2,\n      pointBorderWidth: 3,\n      pointHoverRadius: 2,\n      fill: false,\n      borderWidth: 2,\n      data: [200, 452, 250, 630, 125, 85, 20],\n      datalabels: {\n        align: 'end',\n        anchor: 'end',\n      },\n    },\n  ],\n};\n\nexport const conversionChartData = {\n  labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n  datasets: [\n    {\n      label: '',\n      data: [65, 60, 68, 60, 58, 63, 60],\n      borderColor: colors.themeColor2,\n      pointBackgroundColor: colors.foregroundColor,\n      pointBorderColor: colors.themeColor2,\n      pointHoverBackgroundColor: colors.themeColor2,\n      pointHoverBorderColor: colors.foregroundColor,\n      pointRadius: 4,\n      pointBorderWidth: 2,\n      pointHoverRadius: 5,\n      fill: true,\n      borderWidth: 2,\n      backgroundColor: colors.themeColor2_10,\n    },\n  ],\n};\n","import React from 'react';\nimport { Card, CardBody, Row } from 'reactstrap';\n\nimport { Colxx, Separator } from '../../components/common/CustomBootstrap';\nimport Breadcrumb from '../../containers/navs/Breadcrumb';\nimport Bar from '../../components/charts/Bar';\nimport IconCardsCarousel from '../../containers/dashboards/IconCardsCarousel';\n\nimport { BarChartData } from '../../data/charts';\n\nconst Dashboard = ({ match }) => {\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n          <Breadcrumb heading=\"menu.dashboard\" match={match} />\n          <Separator className=\"mb-5\" />\n        </Colxx>\n      </Row>\n\n      <Row>\n        <Colxx xxs=\"8\">\n          <IconCardsCarousel />\n        </Colxx>\n      </Row>\n\n      <Row>\n        <Colxx xxs={8}>\n          <Card>\n            <CardBody>\n              <div className=\"chart-container\">\n                <Bar data={BarChartData} shadow />\n              </div>\n            </CardBody>\n          </Card>\n        </Colxx>\n      </Row>\n    </>\n  );\n};\n\nexport default Dashboard;\n"],"sourceRoot":""}