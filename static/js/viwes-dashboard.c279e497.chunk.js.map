{"version":3,"sources":["containers/navs/Breadcrumb.js","containers/application/HackathonCard.js","views/app/blank-page.js","views/app/dashboard/components/context-menu.js","views/app/dashboard/index.js"],"names":["getMenuTitle","sub","adminRoot","id","getUrl","path","split","BreadcrumbItems","match","substr","paths","filter","Boolean","length","indexOf","x","className","map","index","active","to","BreadcrumbContainer","heading","getStatusText","status","getTypeText","HackCard","data","showEdit","name","tagline","submit_status","hackathon_start","application_end","hackathon_website","hackathon_type_id","otherArray","console","log","history","useHistory","href","target","rel","sdg_goals","item","src","alt","style","height","$mega_trends","color","pill","outline","onClick","push","BlankPage","xxs","DashboardContextMenu","onContextMenuClick","borderRadius","action","defaultPage","organizerHackathons","undefined","Row","connect","authUser","hackathonData","accessToken","loading","error","getAllHackathonsAction","getAllHackathons","getCurrentUser","count","useEffect","Breadcrumb","md","e"],"mappings":"+JAAA,4DAOMA,EAAe,SAACC,GACpB,MAAI,WAAIA,KAAUC,IAAkB,cAAC,IAAD,CAAcC,GAAG,cAC9C,cAAC,IAAD,CAAcA,GAAE,eAAUF,MAG7BG,EAAS,SAACC,EAAMJ,GACpB,OAAOI,EAAKC,MAAML,GAAK,GAAKA,GAgBxBM,EAAkB,SAAC,GAAe,IAChCF,EAD+B,EAAZG,MACNH,KAAKI,OAAO,GAC3BC,EAAQL,EAAKC,MAAM,KAAKK,OAAOC,SAKnC,OAHIF,EAAMA,EAAMG,OAAS,GAAGC,QAAQ,MAAQ,IAC1CJ,EAAQA,EAAMC,QAAO,SAACI,GAAD,OAA2B,IAApBA,EAAED,QAAQ,SAGtC,mCACE,cAAC,IAAD,CAAYE,UAAU,gEAAtB,SACGN,EAAMO,KAAI,SAAChB,EAAKiB,GACf,OACE,cAAC,IAAD,CAA4BC,OAAQT,EAAMG,SAAWK,EAAQ,EAA7D,SACGR,EAAMG,SAAWK,EAAQ,EACxB,cAAC,IAAD,CAASE,GAAE,WAAMhB,EAAOC,EAAMJ,IAA9B,SACGD,EAAaC,KAGhBD,EAAaC,IANIiB,WAgBlBG,IAzCa,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,QAASd,EAAY,EAAZA,MACtC,OACE,qCACGc,GACC,6BACE,cAAC,IAAD,CAAcnB,GAAImB,MAGrBd,EAAQ,cAACD,EAAD,CAAiBC,MAAOA,IAAY,U,iCCxBnD,oIAyBMe,EAAgB,SAACC,GACrB,OAAe,IAAXA,EAAqB,QACV,IAAXA,EAAqB,eACV,IAAXA,EAAqB,WAClB,IAGHC,EAAc,SAACD,GACnB,OAAe,IAAXA,EAAqB,SACV,IAAXA,EAAqB,UACV,IAAXA,EAAqB,WAClB,IAwHME,IArHE,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,KAA4B,IAAtBC,gBAAsB,SAE5CzB,EAUEwB,EAVFxB,GACA0B,EASEF,EATFE,KACAC,EAQEH,EARFG,QACAC,EAOEJ,EAPFI,cACAC,EAMEL,EANFK,gBACAC,EAKEN,EALFM,gBACAC,EAIEP,EAJFO,kBACAC,EAGER,EAHFQ,kBACAC,EAEET,EAFFS,WAGFC,QAAQC,IAAIX,GACZ,IAnCsBH,EAmChBe,EAAUC,cAEhB,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,eAAC,IAAD,WACE,mBAAGxB,UAAU,UAAb,SACE,mBACEyB,KAAMP,EACNQ,OAAO,SACPC,IAAI,aACJ3B,UAAU,UAJZ,SAMGa,MAGL,cAAC,IAAD,CAAcb,UAAU,aAAxB,SAAsCc,OAGxC,eAAC,IAAD,CAAKd,UAAU,yBAAf,UACGoB,EAAWQ,UAAU3B,KAAI,SAAC4B,GAAD,OACxB,qBAEEC,IAAG,0BAAqBD,EAAK1C,GAA1B,QACH4C,IAAKF,EAAKhB,KACVb,UAAU,4DAHL6B,EAAK1C,OAOd,qBAAKa,UAAU,WAAWgC,MAAO,CAAEC,OAAQ,UAE1Cb,EAAWc,aAAajC,KAAI,SAAC4B,GAAD,OAC3B,qBAEEC,IAAG,kCAA6BD,EAAK1C,GAAlC,QACH4C,IAAKF,EAAKhB,KACVb,UAAU,4DAHL6B,EAAK1C,UAQhB,cAAC,IAAD,CAAWa,UAAU,SAErB,eAAC,IAAD,WACE,cAAC,IAAD,CAAcb,GAAG,yBACjB,cAAC,IAAD,UAAW8B,OAGb,eAAC,IAAD,WACE,cAAC,IAAD,CAAc9B,GAAG,sBACjB,cAAC,IAAD,UAAW6B,OAGb,cAAC,IAAD,CAAWhB,UAAU,SAErB,cAAC,IAAD,CACEmC,OA3Fc3B,EA2FQO,EA1Ff,IAAXP,EAAqB,kBACV,IAAXA,EAAqB,kBACV,cAAXA,EAA+B,iBAC5B,IAwFC4B,MAAI,EACJC,SAAO,EACPrC,UAAU,YAJZ,SAMGO,EAAcQ,KAGjB,cAAC,IAAD,CAAOoB,MAAM,kBAAkBC,MAAI,EAACpC,UAAU,OAA9C,SACGS,EAAYU,KAGf,cAAC,IAAD,CAAcnB,UAAU,aAAxB,SACE,cAAC,IAAD,CAASyB,KAAMP,EAAmBQ,OAAO,SAASC,IAAI,aAAtD,SACE,cAAC,IAAD,CAAcxC,GAAG,2BAIrB,eAAC,IAAD,CAAKa,UAAU,yBAAf,UACGY,GACC,cAAC,IAAD,CACEZ,UAAU,MACVqC,SAAO,EACPC,QAAS,WACPf,EAAQgB,KAAR,UAAgBrD,IAAhB,8BAA+CC,KAJnD,SAOE,cAAC,IAAD,CAAcA,GAAG,2BAGrB,cAAC,IAAD,CACEa,UAAU,MACVmC,MAAM,UACNG,QAAS,WACPf,EAAQgB,KAAR,UAAgBrD,IAAhB,+BAAgDC,KAJpD,SAOE,cAAC,IAAD,CAAcA,GAAG,6C,iCClJ7B,4DA0BeqD,UApBG,SAAC,GAAe,IAAbhD,EAAY,EAAZA,MACnB,OACE,qCACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAOiD,IAAI,KAAX,UACE,cAAC,IAAD,CAAYnC,QAAQ,kBAAkBd,MAAOA,IAC7C,cAAC,IAAD,CAAWQ,UAAU,cAGzB,cAAC,IAAD,UACE,cAAC,IAAD,CAAOyC,IAAI,KAAKzC,UAAU,OAA1B,SACE,4BACE,cAAC,IAAD,CAAcb,GAAG,+B,8HCLduD,EAVc,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,mBAC9B,OACE,cAAC,IAAD,CAAaxD,GAAG,yBAAyB6C,MAAO,CAAEY,aAAc,QAAhE,SACE,eAAC,IAAD,CAAUN,QAASK,EAAoBhC,KAAM,CAAEkC,OAAQ,WAAvD,UACE,mBAAG7C,UAAU,wBADf,IACwC,kDCWxC8C,EAAc,SAACC,GAEnB,OADA1B,QAAQC,IAAIyB,QACeC,IAAxBD,EAIC,cAACE,EAAA,EAAD,UACA,cAAC,IAAD,CAAOR,IAAI,KAAX,SACE,qGAKC,MAwGMS,uBANS,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,cAGnC,MAAO,CAAEC,YAFeF,EAAhBE,YAEcN,oBAD0BK,EAAxCL,oBACmCO,QADKF,EAAnBE,QACuBC,MADJH,EAAVG,SAIA,CACtCC,uBAAwBC,MADXP,EArGG,SAAC,GAOZ,IANL1D,EAMI,EANJA,MACA6D,EAKI,EALJA,YACAN,EAII,EAJJA,oBACAS,EAGI,EAHJA,uBACAF,EAEI,EAFJA,QACAC,EACI,EADJA,MAEQpE,EAAOuE,cAAPvE,GACJwE,EAAQ,EAMZ,GALAC,qBAAU,WACRJ,EAAuBH,EAAalE,KAEnC,IAECmE,EAAS,OAAO,qBAAKtD,UAAU,YAE/BuD,GAAOjC,YAAIiC,GAiBf,OACE,qCACE,cAACN,EAAA,EAAD,UACE,eAAC,IAAD,CAAOR,IAAI,KAAX,UACE,cAACoB,EAAA,EAAD,CAAYvD,QAAQ,iBAAiBd,MAAOA,IAC5C,cAAC,IAAD,CAAWQ,UAAU,cAIzB,eAAC,IAAD,CAAoBb,GAAG,yBAAvB,UAiBG2D,EAAYC,GACZA,EAAoB9C,KAAI,SAAC4B,GACtB,YAAiBmB,IAAdnB,EAAKhB,MAAgC,IAAV8C,GAC5BA,EAAQ,EAGd,cAACV,EAAA,EAAD,UACA,eAAC,IAAD,CAAOR,IAAI,KAAX,UACE,wCACA,cAAC,IAAD,CAAWzC,UAAU,eAKZ,QAGX,cAACiD,EAAA,EAAD,UACGF,EAAoB9C,KAAI,SAAC4B,GACxB,YAAiBmB,IAAdnB,EAAKhB,KAGR,cAAC,IAAD,CAAO4B,IAAI,KAAKqB,GAAG,IAAkB9D,UAAU,OAA/C,SACE,cAAC,IAAD,CAAUW,KAAMkB,EAAMjB,SAAiC,IAAvBiB,EAAKd,iBADXc,EAAK1C,IAI1B,aAIb,cAAC,EAAD,CAAsBwD,mBAvEC,SAACoB,EAAGlC,GAG7B,OAFAP,YAAI,iCAAkCO,EAAKgB,QAEnChB,EAAKgB,QACX,IAAK,UACHW,EAAuBH,EAAalE","file":"static/js/viwes-dashboard.c279e497.chunk.js","sourcesContent":["/* eslint-disable react/no-array-index-key */\r\nimport React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport IntlMessages from '../../helpers/IntlMessages';\r\nimport { adminRoot } from '../../constants/defaultValues';\r\n\r\nconst getMenuTitle = (sub) => {\r\n  if (`/${sub}` === adminRoot) return <IntlMessages id=\"menu.home\" />;\r\n  return <IntlMessages id={`menu.${sub}`} />;\r\n};\r\n\r\nconst getUrl = (path, sub) => {\r\n  return path.split(sub)[0] + sub;\r\n};\r\n\r\nconst BreadcrumbContainer = ({ heading, match }) => {\r\n  return (\r\n    <>\r\n      {heading && (\r\n        <h1>\r\n          <IntlMessages id={heading} />\r\n        </h1>\r\n      )}\r\n      {match ? <BreadcrumbItems match={match} /> : null}\r\n    </>\r\n  );\r\n};\r\n\r\nconst BreadcrumbItems = ({ match }) => {\r\n  const path = match.path.substr(1);\r\n  let paths = path.split('/').filter(Boolean);\r\n\r\n  if (paths[paths.length - 1].indexOf(':') > -1) {\r\n    paths = paths.filter((x) => x.indexOf(':') === -1);\r\n  }\r\n  return (\r\n    <>\r\n      <Breadcrumb className=\"pt-0 breadcrumb-container d-none d-sm-block d-lg-inline-block\">\r\n        {paths.map((sub, index) => {\r\n          return (\r\n            <BreadcrumbItem key={index} active={paths.length === index + 1}>\r\n              {paths.length !== index + 1 ? (\r\n                <NavLink to={`/${getUrl(path, sub, index)}`}>\r\n                  {getMenuTitle(sub)}\r\n                </NavLink>\r\n              ) : (\r\n                getMenuTitle(sub)\r\n              )}\r\n            </BreadcrumbItem>\r\n          );\r\n        })}\r\n      </Breadcrumb>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BreadcrumbContainer;\r\n","/* eslint-disable camelcase */\r\nimport React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {\r\n  Badge,\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardSubtitle,\r\n  CardText,\r\n  CardTitle,\r\n  NavLink,\r\n  Row,\r\n} from 'reactstrap';\r\nimport { Separator } from '../../components/common/CustomBootstrap';\r\nimport { adminRoot } from '../../constants/defaultValues';\r\nimport IntlMessages from '../../helpers/IntlMessages';\r\n\r\nconst getStatusColor = (status) => {\r\n  if (status === 0) return 'outline-success';\r\n  if (status === 1) return 'outline-warning';\r\n  if (status === 'COMPLETED') return 'outline-danger';\r\n  return '';\r\n};\r\n\r\nconst getStatusText = (status) => {\r\n  if (status === 0) return 'Draft';\r\n  if (status === 1) return 'Under Review';\r\n  if (status === 2) return 'Approved';\r\n  return '';\r\n};\r\n\r\nconst getTypeText = (status) => {\r\n  if (status === 0) return 'Online';\r\n  if (status === 1) return 'Blender';\r\n  if (status === 2) return 'Offiline';\r\n  return '';\r\n};\r\n\r\nconst HackCard = ({ data, showEdit = true }) => {\r\n  const {\r\n    id,\r\n    name,\r\n    tagline,\r\n    submit_status,\r\n    hackathon_start,\r\n    application_end,\r\n    hackathon_website,\r\n    hackathon_type_id,\r\n    otherArray,\r\n    \r\n  } = data;\r\n  console.log(data);\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <Card>\r\n      <CardBody>\r\n        <CardTitle>\r\n          <p className=\"h2 lead\">\r\n            <a\r\n              href={hackathon_website}\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n              className=\"new-tab\"\r\n            >\r\n              {name}\r\n            </a>\r\n          </p>\r\n          <CardSubtitle className=\"text-small\">{tagline}</CardSubtitle>\r\n        </CardTitle>\r\n\r\n        <Row className=\"justify-content-center\">\r\n          {otherArray.sdg_goals.map((item) => (\r\n            <img\r\n              key={item.id}\r\n              src={`/assets/img/sdg/${item.id}.png`}\r\n              alt={item.name}\r\n              className=\"list-thumbnail align-self-center m-1 small hackcard-icon\"\r\n            />\r\n          ))}\r\n\r\n          <div className=\"vertical\" style={{ height: '45px' }} />\r\n\r\n          {otherArray.$mega_trends.map((item) => (\r\n            <img\r\n              key={item.id}\r\n              src={`/assets/img/mega-trends/${item.id}.png`}\r\n              alt={item.name}\r\n              className=\"list-thumbnail align-self-center m-1 small hackcard-icon\"\r\n            />\r\n          ))}\r\n        </Row>\r\n\r\n        <Separator className=\"my-4\" />\r\n\r\n        <CardTitle>\r\n          <IntlMessages id=\"hackcard.application\" />\r\n          <CardText>{application_end}</CardText>\r\n        </CardTitle>\r\n\r\n        <CardTitle>\r\n          <IntlMessages id=\"hackcard.hackthon\" />\r\n          <CardText>{hackathon_start}</CardText>\r\n        </CardTitle>\r\n\r\n        <Separator className=\"mb-4\" />\r\n\r\n        <Badge\r\n          color={getStatusColor(submit_status)}\r\n          pill\r\n          outline\r\n          className=\"mb-3 mr-3\"\r\n        >\r\n          {getStatusText(submit_status)}\r\n        </Badge>\r\n\r\n        <Badge color=\"outline-primary\" pill className=\"mb-3\">\r\n          {getTypeText(hackathon_type_id)}\r\n        </Badge>\r\n\r\n        <CardSubtitle className=\"text-small\">\r\n          <NavLink href={hackathon_website} target=\"_blank\" rel=\"noreferrer\">\r\n            <IntlMessages id=\"hackcard.view-more\" />\r\n          </NavLink>\r\n        </CardSubtitle>\r\n\r\n        <Row className=\"justify-content-center\">\r\n          {showEdit && (\r\n            <Button\r\n              className=\"m-1\"\r\n              outline\r\n              onClick={() => {\r\n                history.push(`${adminRoot}/challenges/basics/${id}`);\r\n              }}\r\n            >\r\n              <IntlMessages id=\"hackcard.edit-button\" />\r\n            </Button>\r\n          )}\r\n          <Button\r\n            className=\"m-1\"\r\n            color=\"primary\"\r\n            onClick={() => {\r\n              history.push(`${adminRoot}/challenges/details/${id}`);\r\n            }}\r\n          >\r\n            <IntlMessages id=\"hackcard.view-details-button\" />\r\n          </Button>\r\n        </Row>\r\n\r\n        {/* <pre>{JSON.stringify(data, null, 2)}</pre> */}\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default HackCard;\r\n","import React from 'react';\r\nimport { Row } from 'reactstrap';\r\nimport IntlMessages from '../../helpers/IntlMessages';\r\nimport { Colxx, Separator } from '../../components/common/CustomBootstrap';\r\nimport Breadcrumb from '../../containers/navs/Breadcrumb';\r\n\r\nconst BlankPage = ({ match }) => {\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Colxx xxs=\"12\">\r\n          <Breadcrumb heading=\"menu.blank-page\" match={match} />\r\n          <Separator className=\"mb-5\" />\r\n        </Colxx>\r\n      </Row>\r\n      <Row>\r\n        <Colxx xxs=\"12\" className=\"mb-4\">\r\n          <p>\r\n            <IntlMessages id=\"menu.blank-page\" />\r\n          </p>\r\n        </Colxx>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BlankPage;\r\n","import React from 'react';\r\nimport { ContextMenu, MenuItem } from 'react-contextmenu';\r\n\r\nconst DashboardContextMenu = ({ onContextMenuClick }) => {\r\n  return (\r\n    <ContextMenu id=\"same_unique_identifier\" style={{ borderRadius: '16px' }}>\r\n      <MenuItem onClick={onContextMenuClick} data={{ action: 'refresh' }}>\r\n        <i className=\"simple-icon-refresh\" /> <span> Refresh</span>\r\n      </MenuItem>\r\n    </ContextMenu>\r\n  );\r\n};\r\n\r\nexport default DashboardContextMenu;\r\n","import React, { useEffect } from 'react';\r\nimport { /* Card, CardBody, */ Row } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { ContextMenuTrigger } from 'react-contextmenu';\r\n\r\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\r\nimport Breadcrumb from '../../../containers/navs/Breadcrumb';\r\n// import Bar from '../../../components/charts/Bar';\r\n\r\n// import DashboardDataCarousel from './DashboardDataCarousel';\r\n\r\n// import { lineChartData } from '../../../data/charts';\r\nimport { getCurrentUser, log } from '../../../helpers/Utils';\r\n\r\nimport HackCard from '../../../containers/application/HackathonCard';\r\nimport { getAllHackathons } from '../../../redux/actions';\r\nimport DashboardContextMenu from './components/context-menu';\r\n\r\nconst defaultPage = (organizerHackathons)=>{\r\n  console.log(organizerHackathons);\r\n  if(organizerHackathons === undefined)\r\n  {\r\n    return(\r\n          \r\n      <Row>\r\n      <Colxx xxs=\"12\">\r\n        <h1>You Have not Added any Hackathon Yet! Create a Hackathon First!</h1>\r\n      </Colxx>\r\n    </Row>\r\n            );\r\n  }\r\n  return null;\r\n}\r\n\r\nconst Dashboard = ({\r\n  match,\r\n  accessToken,\r\n  organizerHackathons,\r\n  getAllHackathonsAction,\r\n  loading,\r\n  error,\r\n}) => {\r\n  const { id } = getCurrentUser();\r\n  let count = 0;\r\n  useEffect(() => {\r\n    getAllHackathonsAction(accessToken, id);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  if (loading) return <div className=\"loading\" />;\r\n\r\n  if (error) log(error);\r\n\r\n  const onContextMenuClick = (e, item) => {\r\n    log('onContextMenuClick - action : ', item.action);\r\n\r\n    switch (item.action) {\r\n      case 'refresh':\r\n        getAllHackathonsAction(accessToken, id);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  \r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Colxx xxs=\"12\">\r\n          <Breadcrumb heading=\"menu.dashboard\" match={match} />\r\n          <Separator className=\"mb-5\" />\r\n        </Colxx>\r\n      </Row>\r\n\r\n      <ContextMenuTrigger id=\"same_unique_identifier\">\r\n        {/* <Row>\r\n          <Colxx xxs=\"12\" md=\"8\">\r\n            <DashboardDataCarousel data={organizerHackathons} />\r\n          </Colxx>\r\n\r\n           <Colxx xxs=\"12\" md=\"8\" className=\"mb-4\">\r\n            <Card>\r\n              <CardBody>\r\n                <div className=\"chart-container\">\r\n                  <Bar data={lineChartData} shadow />\r\n                </div>\r\n              </CardBody>\r\n            </Card>\r\n          </Colxx> \r\n        </Row> */}\r\n\r\n        {defaultPage(organizerHackathons)}\r\n        {organizerHackathons.map((item) => {\r\n            if(item.name !== undefined && count === 0)\r\n            { count = 1;\r\n              return(\r\n                  \r\n        <Row>\r\n        <Colxx xxs=\"12\">\r\n          <h1>Drafts</h1>\r\n          <Separator className=\"mb-5\" />\r\n        </Colxx>\r\n      </Row>\r\n              );\r\n            }\r\n            return null;\r\n          })}\r\n\r\n        <Row>\r\n          {organizerHackathons.map((item) => {\r\n            if(item.name !== undefined)\r\n            {\r\n              return(\r\n            <Colxx xxs=\"12\" md=\"4\" key={item.id} className=\"mb-4\">\r\n              <HackCard data={item} showEdit={item.submit_status === 0} />\r\n            </Colxx>);\r\n            }\r\n            return null;\r\n          })}\r\n        </Row>\r\n      </ContextMenuTrigger>\r\n      <DashboardContextMenu onContextMenuClick={onContextMenuClick} />\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ authUser, hackathonData }) => {\r\n  const { accessToken } = authUser;\r\n  const { organizerHackathons, loading, error } = hackathonData;\r\n  return { accessToken, organizerHackathons, loading, error };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  getAllHackathonsAction: getAllHackathons,\r\n})(Dashboard);\r\n"],"sourceRoot":""}