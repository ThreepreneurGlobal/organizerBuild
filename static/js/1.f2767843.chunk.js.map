{"version":3,"sources":["../node_modules/reactstrap/es/utils.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/reactstrap/es/Label.js","../node_modules/formik/node_modules/deepmerge/dist/es.js","../node_modules/lodash-es/_baseAssign.js","../node_modules/lodash-es/_baseAssignIn.js","../node_modules/lodash-es/_copySymbols.js","../node_modules/lodash-es/_getSymbolsIn.js","../node_modules/lodash-es/_copySymbolsIn.js","../node_modules/lodash-es/_getAllKeysIn.js","../node_modules/lodash-es/_initCloneArray.js","../node_modules/lodash-es/_cloneDataView.js","../node_modules/lodash-es/_cloneRegExp.js","../node_modules/lodash-es/_cloneSymbol.js","../node_modules/lodash-es/_initCloneByTag.js","../node_modules/lodash-es/_baseIsMap.js","../node_modules/lodash-es/isMap.js","../node_modules/lodash-es/_baseIsSet.js","../node_modules/lodash-es/isSet.js","../node_modules/lodash-es/_baseClone.js","../node_modules/lodash-es/clone.js","../node_modules/lodash-es/toPath.js","../node_modules/lodash-es/cloneDeep.js","../../src/utils.ts","../../src/FormikContext.tsx","../../src/Formik.tsx","../../src/Field.tsx","../../src/Form.tsx","../../src/connect.tsx","../../src/FieldArray.tsx","../../src/ErrorMessage.tsx","../../src/FastField.tsx","../node_modules/tiny-warning/dist/tiny-warning.esm.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/react-intl/lib/src/components/message.js","../node_modules/reactstrap/es/Col.js","../node_modules/reactstrap/es/Row.js","../node_modules/reactstrap/es/Card.js","../node_modules/reactstrap/es/CardTitle.js","../node_modules/reactstrap/es/Button.js","../node_modules/react-fast-compare/index.js"],"names":["globalCssModule","setScrollbarWidth","padding","document","body","style","paddingRight","getOriginalBodyPadding","window","getComputedStyle","parseInt","getPropertyValue","conditionallyUpdateScrollbar","scrollbarWidth","scrollDiv","createElement","position","top","width","height","overflow","appendChild","offsetWidth","clientWidth","removeChild","getScrollbarWidth","fixedContent","querySelectorAll","bodyPadding","innerWidth","mapToCssModules","className","cssModule","split","map","c","join","omit","obj","omitKeys","result","Object","keys","forEach","key","indexOf","pick","pickKeys","Array","isArray","length","warned","warnOnce","message","console","error","Element","DOMElement","props","propName","componentName","Error","targetPropType","PropTypes","oneOfType","string","func","shape","current","any","tagPropType","$$typeof","symbol","render","arrayOf","TransitionTimeouts","Fade","Collapse","Modal","Carousel","TransitionPropTypeKeys","TransitionStatuses","ENTERING","ENTERED","EXITING","EXITED","keyCodes","esc","space","enter","tab","up","down","home","end","n","p","PopperPlacements","canUseDOM","getTag","value","undefined","prototype","toString","call","isObject","type","findDOMElements","target","isReactRefObj","tag","isFunction","selection","isArrayOrNodeList","els","getTarget","allElements","focusableElements","_slicedToArray","arr","i","Symbol","iterator","_arr","_n","_d","_e","_s","_i","next","done","push","err","unsupportedIterableToArray","TypeError","stringOrNumberProp","number","columnProps","bool","size","order","offset","propTypes","children","node","hidden","check","for","object","xs","sm","md","lg","xl","widths","array","defaultProps","getColumnSizeClass","isXs","colWidth","colSize","Label","Tag","htmlFor","attributes","_objectWithoutPropertiesLoose","colClasses","columnProp","colClass","_classNames","colSizeInterfix","classNames","classes","React","_extends","isMergeableObject","isNonNullObject","stringValue","REACT_ELEMENT_TYPE","isReactElement","isSpecial","cloneUnlessOtherwiseSpecified","options","clone","deepmerge","val","defaultArrayMerge","source","concat","element","arrayMerge","sourceIsArray","destination","mergeObject","all","reduce","prev","deepmerge_1","baseAssign","copyObject","baseAssignIn","keysIn","copySymbols","getSymbols","getSymbolsIn","getOwnPropertySymbols","arrayPush","getPrototype","stubArray","copySymbolsIn","getAllKeysIn","baseGetAllKeys","hasOwnProperty","initCloneArray","constructor","index","input","cloneDataView","dataView","isDeep","buffer","cloneArrayBuffer","byteOffset","byteLength","reFlags","cloneRegExp","regexp","exec","lastIndex","symbolProto","symbolValueOf","valueOf","cloneSymbol","initCloneByTag","Ctor","cloneTypedArray","baseIsMap","isObjectLike","nodeIsMap","nodeUtil","isMap","baseUnary","baseIsSet","nodeIsSet","isSet","argsTag","funcTag","objectTag","cloneableTags","baseClone","bitmask","customizer","stack","isFlat","isFull","isArr","copyArray","isFunc","isBuffer","cloneBuffer","initCloneObject","Stack","stacked","get","set","subValue","add","keysFunc","getAllKeys","arrayEach","assignValue","toPath","arrayMap","toKey","isSymbol","stringToPath","cloneDeep","CLONE_DEEP_FLAG","isEmptyArray","isInteger","String","Math","Number","isString","isEmptyChildren","isPromise","getIn","def","path","setIn","res","resVal","pathArray","currentPath","currentObj","nextPath","setNestedObjectValues","visited","response","WeakMap","k","FormikContext","FormikProvider","FormikConsumer","useFormikContext","formik","formikReducer","msg","values","payload","touched","isEqual","state","errors","status","isSubmitting","isValidating","submitCount","emptyErrors","emptyTouched","useFormik","validateOnChange","validateOnBlur","validateOnMount","isInitialValid","enableReinitialize","onSubmit","rest","initialValues","initialErrors","initialTouched","initialStatus","isMounted","fieldRegistry","dispatch","runValidateHandler","Promise","maybePromisedErrors","resolve","actualException","reject","runValidationSchema","validationSchema","schema","promise","field","sync","context","validateData","prepareDataForValidation","abortEarly","validateYupSchema","yupError","yupToFormErrors","runSingleFieldLevelValidation","runFieldLevelValidations","fieldKeysWithValidation","f","fieldValidations","fieldErrorsList","curr","runAllValidations","fieldErrors","schemaErrors","validateErrors","validateFormWithHighPriority","useEventCallback","combinedErrors","resetForm","nextState","dispatchFn","maybePromisedOnReset","validateField","maybePromise","name","registerField","validate","unregisterField","setTouched","shouldValidate","setErrors","setValues","resolvedValues","setFieldError","setFieldValue","executeChange","eventOrTextValue","id","checked","multiple","maybePath","test","parsed","parseFloat","isNaN","currentValue","Boolean","currentArrayOfValues","isValueInArray","valueProp","getValueForCheckbox","el","getSelectedValues","handleChange","event","setFieldTouched","executeBlur","e","outerHTML","handleBlur","setFormikState","stateOrCb","setStatus","setSubmitting","submitForm","isInstanceOfError","promiseOrUndefined","executeSubmit","_errors","handleSubmit","reason","imperativeMethods","validateForm","handleReset","getFieldMeta","initialValue","initialError","getFieldHelpers","setValue","setError","getFieldProps","isAnObject","nameOrOptions","valueState","onChange","onBlur","is","dirty","isValid","Formik","formikbag","component","innerRef","data","isPlainObject","shouldClone","useIsomorphicLayoutEffect","ref","args","useField","propsOrFieldName","fieldName","validateFn","Field","as","meta","legacyBag","form","asElement","Form","action","_action","onReset","connect","Comp","C","componentDisplayName","hoistNonReactStatics","insert","copy","copyArrayLike","arrayLike","maxIndex","FieldArrayInner","updateArrayField","updateErrors","alterErrors","updateTouched","alterTouched","prevState","fn","fieldError","fieldTouched","handlePush","swap","a","indexA","handleSwap","move","from","handleMove","handleInsert","replace","handleReplace","unshift","handleUnshift","handleRemove","handlePop","componentDidUpdate","this","prevProps","remove","pop","tmp","arrayHelpers","restOfFormik","warning","condition","_unsupportedIterableToArray","o","minLen","slice","_arrayLikeToArray","len","arr2","shallowEquals","shallowEquals_","FormattedMessage","_super","apply","arguments","__extends","shouldComponentUpdate","nextProps","_a","otherProps","__rest","nextValues","nextOtherProps","_this","Context","Consumer","intl","invariantIntlContext","formatMessage","textComponent","Text","_b","description","defaultMessage","_c","tagName","Component","nodes","__spreadArrays","displayName","Col","_colClass","rowColsPropType","noGutters","Row","inverse","color","outline","Card","CardTitle","active","block","disabled","onClick","close","Button","_React$Component","bind","_assertThisInitialized","_inheritsLoose","_proto","preventDefault","_this$props","ariaLabel","btnOutlineColor","href","defaultAriaLabel","keyList","hasProp","hasElementType","equal","b","arrA","arrB","dateA","Date","dateB","getTime","regexpA","RegExp","regexpB","module","exports","match","warn"],"mappings":"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","file":"static/js/1.f2767843.chunk.js","sourcesContent":["import PropTypes from 'prop-types'; // https://github.com/twbs/bootstrap/blob/v4.0.0-alpha.4/js/src/modal.js#L436-L443\n\nexport function getScrollbarWidth() {\n  var scrollDiv = document.createElement('div'); // .modal-scrollbar-measure styles // https://github.com/twbs/bootstrap/blob/v4.0.0-alpha.4/scss/_modal.scss#L106-L113\n\n  scrollDiv.style.position = 'absolute';\n  scrollDiv.style.top = '-9999px';\n  scrollDiv.style.width = '50px';\n  scrollDiv.style.height = '50px';\n  scrollDiv.style.overflow = 'scroll';\n  document.body.appendChild(scrollDiv);\n  var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n  document.body.removeChild(scrollDiv);\n  return scrollbarWidth;\n}\nexport function setScrollbarWidth(padding) {\n  document.body.style.paddingRight = padding > 0 ? padding + \"px\" : null;\n}\nexport function isBodyOverflowing() {\n  return document.body.clientWidth < window.innerWidth;\n}\nexport function getOriginalBodyPadding() {\n  var style = window.getComputedStyle(document.body, null);\n  return parseInt(style && style.getPropertyValue('padding-right') || 0, 10);\n}\nexport function conditionallyUpdateScrollbar() {\n  var scrollbarWidth = getScrollbarWidth(); // https://github.com/twbs/bootstrap/blob/v4.0.0-alpha.6/js/src/modal.js#L433\n\n  var fixedContent = document.querySelectorAll('.fixed-top, .fixed-bottom, .is-fixed, .sticky-top')[0];\n  var bodyPadding = fixedContent ? parseInt(fixedContent.style.paddingRight || 0, 10) : 0;\n\n  if (isBodyOverflowing()) {\n    setScrollbarWidth(bodyPadding + scrollbarWidth);\n  }\n}\nvar globalCssModule;\nexport function setGlobalCssModule(cssModule) {\n  globalCssModule = cssModule;\n}\nexport function mapToCssModules(className, cssModule) {\n  if (className === void 0) {\n    className = '';\n  }\n\n  if (cssModule === void 0) {\n    cssModule = globalCssModule;\n  }\n\n  if (!cssModule) return className;\n  return className.split(' ').map(function (c) {\n    return cssModule[c] || c;\n  }).join(' ');\n}\n/**\n * Returns a new object with the key/value pairs from `obj` that are not in the array `omitKeys`.\n */\n\nexport function omit(obj, omitKeys) {\n  var result = {};\n  Object.keys(obj).forEach(function (key) {\n    if (omitKeys.indexOf(key) === -1) {\n      result[key] = obj[key];\n    }\n  });\n  return result;\n}\n/**\n * Returns a filtered copy of an object with only the specified keys.\n */\n\nexport function pick(obj, keys) {\n  var pickKeys = Array.isArray(keys) ? keys : [keys];\n  var length = pickKeys.length;\n  var key;\n  var result = {};\n\n  while (length > 0) {\n    length -= 1;\n    key = pickKeys[length];\n    result[key] = obj[key];\n  }\n\n  return result;\n}\nvar warned = {};\nexport function warnOnce(message) {\n  if (!warned[message]) {\n    /* istanbul ignore else */\n    if (typeof console !== 'undefined') {\n      console.error(message); // eslint-disable-line no-console\n    }\n\n    warned[message] = true;\n  }\n}\nexport function deprecated(propType, explanation) {\n  return function validate(props, propName, componentName) {\n    if (props[propName] !== null && typeof props[propName] !== 'undefined') {\n      warnOnce(\"\\\"\" + propName + \"\\\" property of \\\"\" + componentName + \"\\\" has been deprecated.\\n\" + explanation);\n    }\n\n    for (var _len = arguments.length, rest = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n      rest[_key - 3] = arguments[_key];\n    }\n\n    return propType.apply(void 0, [props, propName, componentName].concat(rest));\n  };\n} // Shim Element if needed (e.g. in Node environment)\n\nvar Element = typeof window === 'object' && window.Element || function () {};\n\nexport function DOMElement(props, propName, componentName) {\n  if (!(props[propName] instanceof Element)) {\n    return new Error('Invalid prop `' + propName + '` supplied to `' + componentName + '`. Expected prop to be an instance of Element. Validation failed.');\n  }\n}\nexport var targetPropType = PropTypes.oneOfType([PropTypes.string, PropTypes.func, DOMElement, PropTypes.shape({\n  current: PropTypes.any\n})]);\nexport var tagPropType = PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.shape({\n  $$typeof: PropTypes.symbol,\n  render: PropTypes.func\n}), PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.shape({\n  $$typeof: PropTypes.symbol,\n  render: PropTypes.func\n})]))]);\n/* eslint key-spacing: [\"error\", { afterColon: true, align: \"value\" }] */\n// These are all setup to match what is in the bootstrap _variables.scss\n// https://github.com/twbs/bootstrap/blob/v4-dev/scss/_variables.scss\n\nexport var TransitionTimeouts = {\n  Fade: 150,\n  // $transition-fade\n  Collapse: 350,\n  // $transition-collapse\n  Modal: 300,\n  // $modal-transition\n  Carousel: 600 // $carousel-transition\n\n}; // Duplicated Transition.propType keys to ensure that Reactstrap builds\n// for distribution properly exclude these keys for nested child HTML attributes\n// since `react-transition-group` removes propTypes in production builds.\n\nexport var TransitionPropTypeKeys = ['in', 'mountOnEnter', 'unmountOnExit', 'appear', 'enter', 'exit', 'timeout', 'onEnter', 'onEntering', 'onEntered', 'onExit', 'onExiting', 'onExited'];\nexport var TransitionStatuses = {\n  ENTERING: 'entering',\n  ENTERED: 'entered',\n  EXITING: 'exiting',\n  EXITED: 'exited'\n};\nexport var keyCodes = {\n  esc: 27,\n  space: 32,\n  enter: 13,\n  tab: 9,\n  up: 38,\n  down: 40,\n  home: 36,\n  end: 35,\n  n: 78,\n  p: 80\n};\nexport var PopperPlacements = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start'];\nexport var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\nexport function isReactRefObj(target) {\n  if (target && typeof target === 'object') {\n    return 'current' in target;\n  }\n\n  return false;\n}\n\nfunction getTag(value) {\n  if (value == null) {\n    return value === undefined ? '[object Undefined]' : '[object Null]';\n  }\n\n  return Object.prototype.toString.call(value);\n}\n\nexport function toNumber(value) {\n  var type = typeof value;\n  var NAN = 0 / 0;\n\n  if (type === 'number') {\n    return value;\n  }\n\n  if (type === 'symbol' || type === 'object' && getTag(value) === '[object Symbol]') {\n    return NAN;\n  }\n\n  if (isObject(value)) {\n    var other = typeof value.valueOf === 'function' ? value.valueOf() : value;\n    value = isObject(other) ? \"\" + other : other;\n  }\n\n  if (type !== 'string') {\n    return value === 0 ? value : +value;\n  }\n\n  value = value.replace(/^\\s+|\\s+$/g, '');\n  var isBinary = /^0b[01]+$/i.test(value);\n  return isBinary || /^0o[0-7]+$/i.test(value) ? parseInt(value.slice(2), isBinary ? 2 : 8) : /^[-+]0x[0-9a-f]+$/i.test(value) ? NAN : +value;\n}\nexport function isObject(value) {\n  var type = typeof value;\n  return value != null && (type === 'object' || type === 'function');\n}\nexport function isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n\n  var tag = getTag(value);\n  return tag === '[object Function]' || tag === '[object AsyncFunction]' || tag === '[object GeneratorFunction]' || tag === '[object Proxy]';\n}\nexport function findDOMElements(target) {\n  if (isReactRefObj(target)) {\n    return target.current;\n  }\n\n  if (isFunction(target)) {\n    return target();\n  }\n\n  if (typeof target === 'string' && canUseDOM) {\n    var selection = document.querySelectorAll(target);\n\n    if (!selection.length) {\n      selection = document.querySelectorAll(\"#\" + target);\n    }\n\n    if (!selection.length) {\n      throw new Error(\"The target '\" + target + \"' could not be identified in the dom, tip: check spelling\");\n    }\n\n    return selection;\n  }\n\n  return target;\n}\nexport function isArrayOrNodeList(els) {\n  if (els === null) {\n    return false;\n  }\n\n  return Array.isArray(els) || canUseDOM && typeof els.length === 'number';\n}\nexport function getTarget(target, allElements) {\n  var els = findDOMElements(target);\n\n  if (allElements) {\n    if (isArrayOrNodeList(els)) {\n      return els;\n    }\n\n    if (els === null) {\n      return [];\n    }\n\n    return [els];\n  } else {\n    if (isArrayOrNodeList(els)) {\n      return els[0];\n    }\n\n    return els;\n  }\n}\nexport var defaultToggleEvents = ['touchstart', 'click'];\nexport function addMultipleEventListeners(_els, handler, _events, useCapture) {\n  var els = _els;\n\n  if (!isArrayOrNodeList(els)) {\n    els = [els];\n  }\n\n  var events = _events;\n\n  if (typeof events === 'string') {\n    events = events.split(/\\s+/);\n  }\n\n  if (!isArrayOrNodeList(els) || typeof handler !== 'function' || !Array.isArray(events)) {\n    throw new Error(\"\\n      The first argument of this function must be DOM node or an array on DOM nodes or NodeList.\\n      The second must be a function.\\n      The third is a string or an array of strings that represents DOM events\\n    \");\n  }\n\n  Array.prototype.forEach.call(events, function (event) {\n    Array.prototype.forEach.call(els, function (el) {\n      el.addEventListener(event, handler, useCapture);\n    });\n  });\n  return function removeEvents() {\n    Array.prototype.forEach.call(events, function (event) {\n      Array.prototype.forEach.call(els, function (el) {\n        el.removeEventListener(event, handler, useCapture);\n      });\n    });\n  };\n}\nexport var focusableElements = ['a[href]', 'area[href]', 'input:not([disabled]):not([type=hidden])', 'select:not([disabled])', 'textarea:not([disabled])', 'button:not([disabled])', 'object', 'embed', '[tabindex]:not(.modal)', 'audio[controls]', 'video[controls]', '[contenteditable]:not([contenteditable=\"false\"])'];","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, isObject } from './utils';\nvar colWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar columnProps = PropTypes.oneOfType([PropTypes.bool, PropTypes.string, PropTypes.number, PropTypes.shape({\n  size: stringOrNumberProp,\n  order: stringOrNumberProp,\n  offset: stringOrNumberProp\n})]);\nvar propTypes = {\n  children: PropTypes.node,\n  hidden: PropTypes.bool,\n  check: PropTypes.bool,\n  size: PropTypes.string,\n  for: PropTypes.string,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  widths: PropTypes.array\n};\nvar defaultProps = {\n  tag: 'label',\n  widths: colWidths\n};\n\nvar getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\" + colWidth;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n  }\n\n  return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n};\n\nvar Label = function Label(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      hidden = props.hidden,\n      widths = props.widths,\n      Tag = props.tag,\n      check = props.check,\n      size = props.size,\n      htmlFor = props.for,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"hidden\", \"widths\", \"tag\", \"check\", \"size\", \"for\"]);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    var isXs = !i;\n    var colClass;\n\n    if (isObject(columnProp)) {\n      var _classNames;\n\n      var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n      colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames))), cssModule);\n    } else {\n      colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n      colClasses.push(colClass);\n    }\n  });\n  var classes = mapToCssModules(classNames(className, hidden ? 'sr-only' : false, check ? 'form-check-label' : false, size ? \"col-form-label-\" + size : false, colClasses, colClasses.length ? 'col-form-label' : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({\n    htmlFor: htmlFor\n  }, attributes, {\n    className: classes\n  }));\n};\n\nLabel.propTypes = propTypes;\nLabel.defaultProps = defaultProps;\nexport default Label;","var isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tObject.keys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tObject.keys(source).forEach(function(key) {\n\t\tif (!options.isMergeableObject(source[key]) || !target[key]) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = deepmerge(target[key], source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nexport default deepmerge_1;\n","import copyObject from './_copyObject.js';\nimport keys from './keys.js';\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\nexport default baseAssign;\n","import copyObject from './_copyObject.js';\nimport keysIn from './keysIn.js';\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn(object, source) {\n  return object && copyObject(source, keysIn(source), object);\n}\n\nexport default baseAssignIn;\n","import copyObject from './_copyObject.js';\nimport getSymbols from './_getSymbols.js';\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\nexport default copySymbols;\n","import arrayPush from './_arrayPush.js';\nimport getPrototype from './_getPrototype.js';\nimport getSymbols from './_getSymbols.js';\nimport stubArray from './stubArray.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\nexport default getSymbolsIn;\n","import copyObject from './_copyObject.js';\nimport getSymbolsIn from './_getSymbolsIn.js';\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn(source, object) {\n  return copyObject(source, getSymbolsIn(source), object);\n}\n\nexport default copySymbolsIn;\n","import baseGetAllKeys from './_baseGetAllKeys.js';\nimport getSymbolsIn from './_getSymbolsIn.js';\nimport keysIn from './keysIn.js';\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\nexport default getAllKeysIn;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nexport default initCloneArray;\n","import cloneArrayBuffer from './_cloneArrayBuffer.js';\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nexport default cloneDataView;\n","/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nexport default cloneRegExp;\n","import Symbol from './_Symbol.js';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nexport default cloneSymbol;\n","import cloneArrayBuffer from './_cloneArrayBuffer.js';\nimport cloneDataView from './_cloneDataView.js';\nimport cloneRegExp from './_cloneRegExp.js';\nimport cloneSymbol from './_cloneSymbol.js';\nimport cloneTypedArray from './_cloneTypedArray.js';\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return new Ctor;\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return new Ctor;\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nexport default initCloneByTag;\n","import getTag from './_getTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]';\n\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\nfunction baseIsMap(value) {\n  return isObjectLike(value) && getTag(value) == mapTag;\n}\n\nexport default baseIsMap;\n","import baseIsMap from './_baseIsMap.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsMap = nodeUtil && nodeUtil.isMap;\n\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\nvar isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\nexport default isMap;\n","import getTag from './_getTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar setTag = '[object Set]';\n\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\nfunction baseIsSet(value) {\n  return isObjectLike(value) && getTag(value) == setTag;\n}\n\nexport default baseIsSet;\n","import baseIsSet from './_baseIsSet.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\n\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\nexport default isSet;\n","import Stack from './_Stack.js';\nimport arrayEach from './_arrayEach.js';\nimport assignValue from './_assignValue.js';\nimport baseAssign from './_baseAssign.js';\nimport baseAssignIn from './_baseAssignIn.js';\nimport cloneBuffer from './_cloneBuffer.js';\nimport copyArray from './_copyArray.js';\nimport copySymbols from './_copySymbols.js';\nimport copySymbolsIn from './_copySymbolsIn.js';\nimport getAllKeys from './_getAllKeys.js';\nimport getAllKeysIn from './_getAllKeysIn.js';\nimport getTag from './_getTag.js';\nimport initCloneArray from './_initCloneArray.js';\nimport initCloneByTag from './_initCloneByTag.js';\nimport initCloneObject from './_initCloneObject.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isMap from './isMap.js';\nimport isObject from './isObject.js';\nimport isSet from './isSet.js';\nimport keys from './keys.js';\nimport keysIn from './keysIn.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? copySymbolsIn(value, baseAssignIn(result, value))\n          : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (isSet(value)) {\n    value.forEach(function(subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n  } else if (isMap(value)) {\n    value.forEach(function(subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n  }\n\n  var keysFunc = isFull\n    ? (isFlat ? getAllKeysIn : getAllKeys)\n    : (isFlat ? keysIn : keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nexport default baseClone;\n","import baseClone from './_baseClone.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * Creates a shallow clone of `value`.\n *\n * **Note:** This method is loosely based on the\n * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n * and supports cloning arrays, array buffers, booleans, date objects, maps,\n * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n * arrays. The own enumerable properties of `arguments` objects are cloned\n * as plain objects. An empty object is returned for uncloneable values such\n * as error objects, functions, DOM nodes, and WeakMaps.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to clone.\n * @returns {*} Returns the cloned value.\n * @see _.cloneDeep\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var shallow = _.clone(objects);\n * console.log(shallow[0] === objects[0]);\n * // => true\n */\nfunction clone(value) {\n  return baseClone(value, CLONE_SYMBOLS_FLAG);\n}\n\nexport default clone;\n","import arrayMap from './_arrayMap.js';\nimport copyArray from './_copyArray.js';\nimport isArray from './isArray.js';\nimport isSymbol from './isSymbol.js';\nimport stringToPath from './_stringToPath.js';\nimport toKey from './_toKey.js';\nimport toString from './toString.js';\n\n/**\n * Converts `value` to a property path array.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Util\n * @param {*} value The value to convert.\n * @returns {Array} Returns the new property path array.\n * @example\n *\n * _.toPath('a.b.c');\n * // => ['a', 'b', 'c']\n *\n * _.toPath('a[0].b.c');\n * // => ['a', '0', 'b', 'c']\n */\nfunction toPath(value) {\n  if (isArray(value)) {\n    return arrayMap(value, toKey);\n  }\n  return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n}\n\nexport default toPath;\n","import baseClone from './_baseClone.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n}\n\nexport default cloneDeep;\n","import clone from 'lodash/clone';\nimport toPath from 'lodash/toPath';\nimport * as React from 'react';\n\n// Assertions\n\n/** @private is the value an empty array? */\nexport const isEmptyArray = (value?: any) =>\n  Array.isArray(value) && value.length === 0;\n\n/** @private is the given object a Function? */\nexport const isFunction = (obj: any): obj is Function =>\n  typeof obj === 'function';\n\n/** @private is the given object an Object? */\nexport const isObject = (obj: any): obj is Object =>\n  obj !== null && typeof obj === 'object';\n\n/** @private is the given object an integer? */\nexport const isInteger = (obj: any): boolean =>\n  String(Math.floor(Number(obj))) === obj;\n\n/** @private is the given object a string? */\nexport const isString = (obj: any): obj is string =>\n  Object.prototype.toString.call(obj) === '[object String]';\n\n/** @private is the given object a NaN? */\n// eslint-disable-next-line no-self-compare\nexport const isNaN = (obj: any): boolean => obj !== obj;\n\n/** @private Does a React component have exactly 0 children? */\nexport const isEmptyChildren = (children: any): boolean =>\n  React.Children.count(children) === 0;\n\n/** @private is the given object/value a promise? */\nexport const isPromise = (value: any): value is PromiseLike<any> =>\n  isObject(value) && isFunction(value.then);\n\n/** @private is the given object/value a type of synthetic event? */\nexport const isInputEvent = (value: any): value is React.SyntheticEvent<any> =>\n  value && isObject(value) && isObject(value.target);\n\n/**\n * Same as document.activeElement but wraps in a try-catch block. In IE it is\n * not safe to call document.activeElement if there is nothing focused.\n *\n * The activeElement will be null only if the document or document body is not\n * yet defined.\n *\n * @param {?Document} doc Defaults to current document.\n * @return {Element | null}\n * @see https://github.com/facebook/fbjs/blob/master/packages/fbjs/src/core/dom/getActiveElement.js\n */\nexport function getActiveElement(doc?: Document): Element | null {\n  doc = doc || (typeof document !== 'undefined' ? document : undefined);\n  if (typeof doc === 'undefined') {\n    return null;\n  }\n  try {\n    return doc.activeElement || doc.body;\n  } catch (e) {\n    return doc.body;\n  }\n}\n\n/**\n * Deeply get a value from an object via its path.\n */\nexport function getIn(\n  obj: any,\n  key: string | string[],\n  def?: any,\n  p: number = 0\n) {\n  const path = toPath(key);\n  while (obj && p < path.length) {\n    obj = obj[path[p++]];\n  }\n  return obj === undefined ? def : obj;\n}\n\n/**\n * Deeply set a value from in object via it's path. If the value at `path`\n * has changed, return a shallow copy of obj with `value` set at `path`.\n * If `value` has not changed, return the original `obj`.\n *\n * Existing objects / arrays along `path` are also shallow copied. Sibling\n * objects along path retain the same internal js reference. Since new\n * objects / arrays are only created along `path`, we can test if anything\n * changed in a nested structure by comparing the object's reference in\n * the old and new object, similar to how russian doll cache invalidation\n * works.\n *\n * In earlier versions of this function, which used cloneDeep, there were\n * issues whereby settings a nested value would mutate the parent\n * instead of creating a new object. `clone` avoids that bug making a\n * shallow copy of the objects along the update path\n * so no object is mutated in place.\n *\n * Before changing this function, please read through the following\n * discussions.\n *\n * @see https://github.com/developit/linkstate\n * @see https://github.com/jaredpalmer/formik/pull/123\n */\nexport function setIn(obj: any, path: string, value: any): any {\n  let res: any = clone(obj); // this keeps inheritance when obj is a class\n  let resVal: any = res;\n  let i = 0;\n  let pathArray = toPath(path);\n\n  for (; i < pathArray.length - 1; i++) {\n    const currentPath: string = pathArray[i];\n    let currentObj: any = getIn(obj, pathArray.slice(0, i + 1));\n\n    if (currentObj && (isObject(currentObj) || Array.isArray(currentObj))) {\n      resVal = resVal[currentPath] = clone(currentObj);\n    } else {\n      const nextPath: string = pathArray[i + 1];\n      resVal = resVal[currentPath] =\n        isInteger(nextPath) && Number(nextPath) >= 0 ? [] : {};\n    }\n  }\n\n  // Return original object if new value is the same as current\n  if ((i === 0 ? obj : resVal)[pathArray[i]] === value) {\n    return obj;\n  }\n\n  if (value === undefined) {\n    delete resVal[pathArray[i]];\n  } else {\n    resVal[pathArray[i]] = value;\n  }\n\n  // If the path array has a single element, the loop did not run.\n  // Deleting on `resVal` had no effect in this scenario, so we delete on the result instead.\n  if (i === 0 && value === undefined) {\n    delete res[pathArray[i]];\n  }\n\n  return res;\n}\n\n/**\n * Recursively a set the same value for all keys and arrays nested object, cloning\n * @param object\n * @param value\n * @param visited\n * @param response\n */\nexport function setNestedObjectValues<T>(\n  object: any,\n  value: any,\n  visited: any = new WeakMap(),\n  response: any = {}\n): T {\n  for (let k of Object.keys(object)) {\n    const val = object[k];\n    if (isObject(val)) {\n      if (!visited.get(val)) {\n        visited.set(val, true);\n        // In order to keep array values consistent for both dot path  and\n        // bracket syntax, we need to check if this is an array so that\n        // this will output  { friends: [true] } and not { friends: { \"0\": true } }\n        response[k] = Array.isArray(val) ? [] : {};\n        setNestedObjectValues(val, value, visited, response[k]);\n      }\n    } else {\n      response[k] = value;\n    }\n  }\n\n  return response;\n}\n","import * as React from 'react';\nimport { FormikContextType } from './types';\nimport invariant from 'tiny-warning';\n\nexport const FormikContext = React.createContext<FormikContextType<any>>(\n  undefined as any\n);\nexport const FormikProvider = FormikContext.Provider;\nexport const FormikConsumer = FormikContext.Consumer;\n\nexport function useFormikContext<Values>() {\n  const formik = React.useContext<FormikContextType<Values>>(FormikContext);\n\n  invariant(\n    !!formik,\n    `Formik context is undefined, please verify you are calling useFormikContext() as child of a <Formik> component.`\n  );\n\n  return formik;\n}\n","import * as React from 'react';\nimport isEqual from 'react-fast-compare';\nimport deepmerge from 'deepmerge';\nimport isPlainObject from 'lodash/isPlainObject';\nimport {\n  FormikConfig,\n  FormikErrors,\n  FormikState,\n  FormikTouched,\n  FormikValues,\n  FormikProps,\n  FieldMetaProps,\n  FieldHelperProps,\n  FieldInputProps,\n  FormikHelpers,\n  FormikHandlers,\n} from './types';\nimport {\n  isFunction,\n  isString,\n  setIn,\n  isEmptyChildren,\n  isPromise,\n  setNestedObjectValues,\n  getActiveElement,\n  getIn,\n  isObject,\n} from './utils';\nimport { FormikProvider } from './FormikContext';\nimport invariant from 'tiny-warning';\n\ntype FormikMessage<Values> =\n  | { type: 'SUBMIT_ATTEMPT' }\n  | { type: 'SUBMIT_FAILURE' }\n  | { type: 'SUBMIT_SUCCESS' }\n  | { type: 'SET_ISVALIDATING'; payload: boolean }\n  | { type: 'SET_ISSUBMITTING'; payload: boolean }\n  | { type: 'SET_VALUES'; payload: Values }\n  | { type: 'SET_FIELD_VALUE'; payload: { field: string; value?: any } }\n  | { type: 'SET_FIELD_TOUCHED'; payload: { field: string; value?: boolean } }\n  | { type: 'SET_FIELD_ERROR'; payload: { field: string; value?: string } }\n  | { type: 'SET_TOUCHED'; payload: FormikTouched<Values> }\n  | { type: 'SET_ERRORS'; payload: FormikErrors<Values> }\n  | { type: 'SET_STATUS'; payload: any }\n  | {\n      type: 'SET_FORMIK_STATE';\n      payload: (s: FormikState<Values>) => FormikState<Values>;\n    }\n  | {\n      type: 'RESET_FORM';\n      payload: FormikState<Values>;\n    };\n\n// State reducer\nfunction formikReducer<Values>(\n  state: FormikState<Values>,\n  msg: FormikMessage<Values>\n) {\n  switch (msg.type) {\n    case 'SET_VALUES':\n      return { ...state, values: msg.payload };\n    case 'SET_TOUCHED':\n      return { ...state, touched: msg.payload };\n    case 'SET_ERRORS':\n      if (isEqual(state.errors, msg.payload)) {\n        return state;\n      }\n\n      return { ...state, errors: msg.payload };\n    case 'SET_STATUS':\n      return { ...state, status: msg.payload };\n    case 'SET_ISSUBMITTING':\n      return { ...state, isSubmitting: msg.payload };\n    case 'SET_ISVALIDATING':\n      return { ...state, isValidating: msg.payload };\n    case 'SET_FIELD_VALUE':\n      return {\n        ...state,\n        values: setIn(state.values, msg.payload.field, msg.payload.value),\n      };\n    case 'SET_FIELD_TOUCHED':\n      return {\n        ...state,\n        touched: setIn(state.touched, msg.payload.field, msg.payload.value),\n      };\n    case 'SET_FIELD_ERROR':\n      return {\n        ...state,\n        errors: setIn(state.errors, msg.payload.field, msg.payload.value),\n      };\n    case 'RESET_FORM':\n      return { ...state, ...msg.payload };\n    case 'SET_FORMIK_STATE':\n      return msg.payload(state);\n    case 'SUBMIT_ATTEMPT':\n      return {\n        ...state,\n        touched: setNestedObjectValues<FormikTouched<Values>>(\n          state.values,\n          true\n        ),\n        isSubmitting: true,\n        submitCount: state.submitCount + 1,\n      };\n    case 'SUBMIT_FAILURE':\n      return {\n        ...state,\n        isSubmitting: false,\n      };\n    case 'SUBMIT_SUCCESS':\n      return {\n        ...state,\n        isSubmitting: false,\n      };\n    default:\n      return state;\n  }\n}\n\n// Initial empty states // objects\nconst emptyErrors: FormikErrors<unknown> = {};\nconst emptyTouched: FormikTouched<unknown> = {};\n\n// This is an object that contains a map of all registered fields\n// and their validate functions\ninterface FieldRegistry {\n  [field: string]: {\n    validate: (value: any) => string | Promise<string> | undefined;\n  };\n}\n\nexport function useFormik<Values extends FormikValues = FormikValues>({\n  validateOnChange = true,\n  validateOnBlur = true,\n  validateOnMount = false,\n  isInitialValid,\n  enableReinitialize = false,\n  onSubmit,\n  ...rest\n}: FormikConfig<Values>) {\n  const props = {\n    validateOnChange,\n    validateOnBlur,\n    validateOnMount,\n    onSubmit,\n    ...rest,\n  };\n  const initialValues = React.useRef(props.initialValues);\n  const initialErrors = React.useRef(props.initialErrors || emptyErrors);\n  const initialTouched = React.useRef(props.initialTouched || emptyTouched);\n  const initialStatus = React.useRef(props.initialStatus);\n  const isMounted = React.useRef<boolean>(false);\n  const fieldRegistry = React.useRef<FieldRegistry>({});\n  if (__DEV__) {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      invariant(\n        typeof isInitialValid === 'undefined',\n        'isInitialValid has been deprecated and will be removed in future versions of Formik. Please use initialErrors or validateOnMount instead.'\n      );\n      // eslint-disable-next-line\n    }, []);\n  }\n\n  React.useEffect(() => {\n    isMounted.current = true;\n\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n\n  const [state, dispatch] = React.useReducer<\n    React.Reducer<FormikState<Values>, FormikMessage<Values>>\n  >(formikReducer, {\n    values: props.initialValues,\n    errors: props.initialErrors || emptyErrors,\n    touched: props.initialTouched || emptyTouched,\n    status: props.initialStatus,\n    isSubmitting: false,\n    isValidating: false,\n    submitCount: 0,\n  });\n\n  const runValidateHandler = React.useCallback(\n    (values: Values, field?: string): Promise<FormikErrors<Values>> => {\n      return new Promise((resolve, reject) => {\n        const maybePromisedErrors = (props.validate as any)(values, field);\n        if (maybePromisedErrors == null) {\n          // use loose null check here on purpose\n          resolve(emptyErrors);\n        } else if (isPromise(maybePromisedErrors)) {\n          (maybePromisedErrors as Promise<any>).then(\n            errors => {\n              resolve(errors || emptyErrors);\n            },\n            actualException => {\n              if (process.env.NODE_ENV !== 'production') {\n                console.warn(\n                  `Warning: An unhandled error was caught during validation in <Formik validate />`,\n                  actualException\n                );\n              }\n\n              reject(actualException);\n            }\n          );\n        } else {\n          resolve(maybePromisedErrors);\n        }\n      });\n    },\n    [props.validate]\n  );\n\n  /**\n   * Run validation against a Yup schema and optionally run a function if successful\n   */\n  const runValidationSchema = React.useCallback(\n    (values: Values, field?: string): Promise<FormikErrors<Values>> => {\n      const validationSchema = props.validationSchema;\n      const schema = isFunction(validationSchema)\n        ? validationSchema(field)\n        : validationSchema;\n      const promise =\n        field && schema.validateAt\n          ? schema.validateAt(field, values)\n          : validateYupSchema(values, schema);\n      return new Promise((resolve, reject) => {\n        promise.then(\n          () => {\n            resolve(emptyErrors);\n          },\n          (err: any) => {\n            // Yup will throw a validation error if validation fails. We catch those and\n            // resolve them into Formik errors. We can sniff if something is a Yup error\n            // by checking error.name.\n            // @see https://github.com/jquense/yup#validationerrorerrors-string--arraystring-value-any-path-string\n            if (err.name === 'ValidationError') {\n              resolve(yupToFormErrors(err));\n            } else {\n              // We throw any other errors\n              if (process.env.NODE_ENV !== 'production') {\n                console.warn(\n                  `Warning: An unhandled error was caught during validation in <Formik validationSchema />`,\n                  err\n                );\n              }\n\n              reject(err);\n            }\n          }\n        );\n      });\n    },\n    [props.validationSchema]\n  );\n\n  const runSingleFieldLevelValidation = React.useCallback(\n    (field: string, value: void | string): Promise<string> => {\n      return new Promise(resolve =>\n        resolve(fieldRegistry.current[field].validate(value) as string)\n      );\n    },\n    []\n  );\n\n  const runFieldLevelValidations = React.useCallback(\n    (values: Values): Promise<FormikErrors<Values>> => {\n      const fieldKeysWithValidation: string[] = Object.keys(\n        fieldRegistry.current\n      ).filter(f => isFunction(fieldRegistry.current[f].validate));\n\n      // Construct an array with all of the field validation functions\n      const fieldValidations: Promise<string>[] =\n        fieldKeysWithValidation.length > 0\n          ? fieldKeysWithValidation.map(f =>\n              runSingleFieldLevelValidation(f, getIn(values, f))\n            )\n          : [Promise.resolve('DO_NOT_DELETE_YOU_WILL_BE_FIRED')]; // use special case ;)\n\n      return Promise.all(fieldValidations).then((fieldErrorsList: string[]) =>\n        fieldErrorsList.reduce((prev, curr, index) => {\n          if (curr === 'DO_NOT_DELETE_YOU_WILL_BE_FIRED') {\n            return prev;\n          }\n          if (curr) {\n            prev = setIn(prev, fieldKeysWithValidation[index], curr);\n          }\n          return prev;\n        }, {})\n      );\n    },\n    [runSingleFieldLevelValidation]\n  );\n\n  // Run all validations and return the result\n  const runAllValidations = React.useCallback(\n    (values: Values) => {\n      return Promise.all([\n        runFieldLevelValidations(values),\n        props.validationSchema ? runValidationSchema(values) : {},\n        props.validate ? runValidateHandler(values) : {},\n      ]).then(([fieldErrors, schemaErrors, validateErrors]) => {\n        const combinedErrors = deepmerge.all<FormikErrors<Values>>(\n          [fieldErrors, schemaErrors, validateErrors],\n          { arrayMerge }\n        );\n        return combinedErrors;\n      });\n    },\n    [\n      props.validate,\n      props.validationSchema,\n      runFieldLevelValidations,\n      runValidateHandler,\n      runValidationSchema,\n    ]\n  );\n\n  // Run all validations methods and update state accordingly\n  const validateFormWithHighPriority = useEventCallback(\n    (values: Values = state.values) => {\n      dispatch({ type: 'SET_ISVALIDATING', payload: true });\n      return runAllValidations(values).then(combinedErrors => {\n        if (!!isMounted.current) {\n          dispatch({ type: 'SET_ISVALIDATING', payload: false });\n          if (!isEqual(state.errors, combinedErrors)) {\n            dispatch({ type: 'SET_ERRORS', payload: combinedErrors });\n          }\n        }\n        return combinedErrors;\n      });\n    }\n  );\n\n  React.useEffect(() => {\n    if (\n      validateOnMount &&\n      isMounted.current === true &&\n      isEqual(initialValues.current, props.initialValues)\n    ) {\n      validateFormWithHighPriority(initialValues.current);\n    }\n  }, [validateOnMount, validateFormWithHighPriority]);\n\n  const resetForm = React.useCallback(\n    (nextState?: Partial<FormikState<Values>>) => {\n      const values =\n        nextState && nextState.values\n          ? nextState.values\n          : initialValues.current;\n      const errors =\n        nextState && nextState.errors\n          ? nextState.errors\n          : initialErrors.current\n          ? initialErrors.current\n          : props.initialErrors || {};\n      const touched =\n        nextState && nextState.touched\n          ? nextState.touched\n          : initialTouched.current\n          ? initialTouched.current\n          : props.initialTouched || {};\n      const status =\n        nextState && nextState.status\n          ? nextState.status\n          : initialStatus.current\n          ? initialStatus.current\n          : props.initialStatus;\n      initialValues.current = values;\n      initialErrors.current = errors;\n      initialTouched.current = touched;\n      initialStatus.current = status;\n\n      const dispatchFn = () => {\n        dispatch({\n          type: 'RESET_FORM',\n          payload: {\n            isSubmitting: !!nextState && !!nextState.isSubmitting,\n            errors,\n            touched,\n            status,\n            values,\n            isValidating: !!nextState && !!nextState.isValidating,\n            submitCount:\n              !!nextState &&\n              !!nextState.submitCount &&\n              typeof nextState.submitCount === 'number'\n                ? nextState.submitCount\n                : 0,\n          },\n        });\n      };\n\n      if (props.onReset) {\n        const maybePromisedOnReset = (props.onReset as any)(\n          state.values,\n          imperativeMethods\n        );\n\n        if (isPromise(maybePromisedOnReset)) {\n          (maybePromisedOnReset as Promise<any>).then(dispatchFn);\n        } else {\n          dispatchFn();\n        }\n      } else {\n        dispatchFn();\n      }\n    },\n    [props.initialErrors, props.initialStatus, props.initialTouched]\n  );\n\n  React.useEffect(() => {\n    if (\n      isMounted.current === true &&\n      !isEqual(initialValues.current, props.initialValues)\n    ) {\n      if (enableReinitialize) {\n        initialValues.current = props.initialValues;\n        resetForm();\n      }\n\n      if (validateOnMount) {\n        validateFormWithHighPriority(initialValues.current);\n      }\n    }\n  }, [\n    enableReinitialize,\n    props.initialValues,\n    resetForm,\n    validateOnMount,\n    validateFormWithHighPriority,\n  ]);\n\n  React.useEffect(() => {\n    if (\n      enableReinitialize &&\n      isMounted.current === true &&\n      !isEqual(initialErrors.current, props.initialErrors)\n    ) {\n      initialErrors.current = props.initialErrors || emptyErrors;\n      dispatch({\n        type: 'SET_ERRORS',\n        payload: props.initialErrors || emptyErrors,\n      });\n    }\n  }, [enableReinitialize, props.initialErrors]);\n\n  React.useEffect(() => {\n    if (\n      enableReinitialize &&\n      isMounted.current === true &&\n      !isEqual(initialTouched.current, props.initialTouched)\n    ) {\n      initialTouched.current = props.initialTouched || emptyTouched;\n      dispatch({\n        type: 'SET_TOUCHED',\n        payload: props.initialTouched || emptyTouched,\n      });\n    }\n  }, [enableReinitialize, props.initialTouched]);\n\n  React.useEffect(() => {\n    if (\n      enableReinitialize &&\n      isMounted.current === true &&\n      !isEqual(initialStatus.current, props.initialStatus)\n    ) {\n      initialStatus.current = props.initialStatus;\n      dispatch({\n        type: 'SET_STATUS',\n        payload: props.initialStatus,\n      });\n    }\n  }, [enableReinitialize, props.initialStatus, props.initialTouched]);\n\n  const validateField = useEventCallback((name: string) => {\n    // This will efficiently validate a single field by avoiding state\n    // changes if the validation function is synchronous. It's different from\n    // what is called when using validateForm.\n\n    if (\n      fieldRegistry.current[name] &&\n      isFunction(fieldRegistry.current[name].validate)\n    ) {\n      const value = getIn(state.values, name);\n      const maybePromise = fieldRegistry.current[name].validate(value);\n      if (isPromise(maybePromise)) {\n        // Only flip isValidating if the function is async.\n        dispatch({ type: 'SET_ISVALIDATING', payload: true });\n        return maybePromise\n          .then((x: any) => x)\n          .then((error: string) => {\n            dispatch({\n              type: 'SET_FIELD_ERROR',\n              payload: { field: name, value: error },\n            });\n            dispatch({ type: 'SET_ISVALIDATING', payload: false });\n          });\n      } else {\n        dispatch({\n          type: 'SET_FIELD_ERROR',\n          payload: {\n            field: name,\n            value: maybePromise as string | undefined,\n          },\n        });\n        return Promise.resolve(maybePromise as string | undefined);\n      }\n    } else if (props.validationSchema) {\n      dispatch({ type: 'SET_ISVALIDATING', payload: true });\n      return runValidationSchema(state.values, name)\n        .then((x: any) => x)\n        .then((error: any) => {\n          dispatch({\n            type: 'SET_FIELD_ERROR',\n            payload: { field: name, value: error[name] },\n          });\n          dispatch({ type: 'SET_ISVALIDATING', payload: false });\n        });\n    }\n\n    return Promise.resolve();\n  });\n\n  const registerField = React.useCallback((name: string, { validate }: any) => {\n    fieldRegistry.current[name] = {\n      validate,\n    };\n  }, []);\n\n  const unregisterField = React.useCallback((name: string) => {\n    delete fieldRegistry.current[name];\n  }, []);\n\n  const setTouched = useEventCallback(\n    (touched: FormikTouched<Values>, shouldValidate?: boolean) => {\n      dispatch({ type: 'SET_TOUCHED', payload: touched });\n      const willValidate =\n        shouldValidate === undefined ? validateOnBlur : shouldValidate;\n      return willValidate\n        ? validateFormWithHighPriority(state.values)\n        : Promise.resolve();\n    }\n  );\n\n  const setErrors = React.useCallback((errors: FormikErrors<Values>) => {\n    dispatch({ type: 'SET_ERRORS', payload: errors });\n  }, []);\n\n  const setValues = useEventCallback(\n    (values: React.SetStateAction<Values>, shouldValidate?: boolean) => {\n      const resolvedValues = isFunction(values) ? values(state.values) : values;\n\n      dispatch({ type: 'SET_VALUES', payload: resolvedValues });\n      const willValidate =\n        shouldValidate === undefined ? validateOnChange : shouldValidate;\n      return willValidate\n        ? validateFormWithHighPriority(resolvedValues)\n        : Promise.resolve();\n    }\n  );\n\n  const setFieldError = React.useCallback(\n    (field: string, value: string | undefined) => {\n      dispatch({\n        type: 'SET_FIELD_ERROR',\n        payload: { field, value },\n      });\n    },\n    []\n  );\n\n  const setFieldValue = useEventCallback(\n    (field: string, value: any, shouldValidate?: boolean) => {\n      dispatch({\n        type: 'SET_FIELD_VALUE',\n        payload: {\n          field,\n          value,\n        },\n      });\n      const willValidate =\n        shouldValidate === undefined ? validateOnChange : shouldValidate;\n      return willValidate\n        ? validateFormWithHighPriority(setIn(state.values, field, value))\n        : Promise.resolve();\n    }\n  );\n\n  const executeChange = React.useCallback(\n    (eventOrTextValue: string | React.ChangeEvent<any>, maybePath?: string) => {\n      // By default, assume that the first argument is a string. This allows us to use\n      // handleChange with React Native and React Native Web's onChangeText prop which\n      // provides just the value of the input.\n      let field = maybePath;\n      let val = eventOrTextValue;\n      let parsed;\n      // If the first argument is not a string though, it has to be a synthetic React Event (or a fake one),\n      // so we handle like we would a normal HTML change event.\n      if (!isString(eventOrTextValue)) {\n        // If we can, persist the event\n        // @see https://reactjs.org/docs/events.html#event-pooling\n        if ((eventOrTextValue as any).persist) {\n          (eventOrTextValue as React.ChangeEvent<any>).persist();\n        }\n        const target = eventOrTextValue.target\n          ? (eventOrTextValue as React.ChangeEvent<any>).target\n          : (eventOrTextValue as React.ChangeEvent<any>).currentTarget;\n\n        const {\n          type,\n          name,\n          id,\n          value,\n          checked,\n          outerHTML,\n          options,\n          multiple,\n        } = target;\n\n        field = maybePath ? maybePath : name ? name : id;\n        if (!field && __DEV__) {\n          warnAboutMissingIdentifier({\n            htmlContent: outerHTML,\n            documentationAnchorLink: 'handlechange-e-reactchangeeventany--void',\n            handlerName: 'handleChange',\n          });\n        }\n        val = /number|range/.test(type)\n          ? ((parsed = parseFloat(value)), isNaN(parsed) ? '' : parsed)\n          : /checkbox/.test(type) // checkboxes\n          ? getValueForCheckbox(getIn(state.values, field!), checked, value)\n          : !!multiple // <select multiple>\n          ? getSelectedValues(options)\n          : value;\n      }\n\n      if (field) {\n        // Set form fields by name\n        setFieldValue(field, val);\n      }\n    },\n    [setFieldValue, state.values]\n  );\n\n  const handleChange = useEventCallback<FormikHandlers['handleChange']>(\n    (\n      eventOrPath: string | React.ChangeEvent<any>\n    ): void | ((eventOrTextValue: string | React.ChangeEvent<any>) => void) => {\n      if (isString(eventOrPath)) {\n        return event => executeChange(event, eventOrPath);\n      } else {\n        executeChange(eventOrPath);\n      }\n    }\n  );\n\n  const setFieldTouched = useEventCallback(\n    (field: string, touched: boolean = true, shouldValidate?: boolean) => {\n      dispatch({\n        type: 'SET_FIELD_TOUCHED',\n        payload: {\n          field,\n          value: touched,\n        },\n      });\n      const willValidate =\n        shouldValidate === undefined ? validateOnBlur : shouldValidate;\n      return willValidate\n        ? validateFormWithHighPriority(state.values)\n        : Promise.resolve();\n    }\n  );\n\n  const executeBlur = React.useCallback(\n    (e: any, path?: string) => {\n      if (e.persist) {\n        e.persist();\n      }\n      const { name, id, outerHTML } = e.target;\n      const field = path ? path : name ? name : id;\n\n      if (!field && __DEV__) {\n        warnAboutMissingIdentifier({\n          htmlContent: outerHTML,\n          documentationAnchorLink: 'handleblur-e-any--void',\n          handlerName: 'handleBlur',\n        });\n      }\n\n      setFieldTouched(field, true);\n    },\n    [setFieldTouched]\n  );\n\n  const handleBlur = useEventCallback<FormikHandlers['handleBlur']>(\n    (eventOrString: any): void | ((e: any) => void) => {\n      if (isString(eventOrString)) {\n        return event => executeBlur(event, eventOrString);\n      } else {\n        executeBlur(eventOrString);\n      }\n    }\n  );\n\n  const setFormikState = React.useCallback(\n    (\n      stateOrCb:\n        | FormikState<Values>\n        | ((state: FormikState<Values>) => FormikState<Values>)\n    ): void => {\n      if (isFunction(stateOrCb)) {\n        dispatch({ type: 'SET_FORMIK_STATE', payload: stateOrCb });\n      } else {\n        dispatch({ type: 'SET_FORMIK_STATE', payload: () => stateOrCb });\n      }\n    },\n    []\n  );\n\n  const setStatus = React.useCallback((status: any) => {\n    dispatch({ type: 'SET_STATUS', payload: status });\n  }, []);\n\n  const setSubmitting = React.useCallback((isSubmitting: boolean) => {\n    dispatch({ type: 'SET_ISSUBMITTING', payload: isSubmitting });\n  }, []);\n\n  const submitForm = useEventCallback(() => {\n    dispatch({ type: 'SUBMIT_ATTEMPT' });\n    return validateFormWithHighPriority().then(\n      (combinedErrors: FormikErrors<Values>) => {\n        // In case an error was thrown and passed to the resolved Promise,\n        // `combinedErrors` can be an instance of an Error. We need to check\n        // that and abort the submit.\n        // If we don't do that, calling `Object.keys(new Error())` yields an\n        // empty array, which causes the validation to pass and the form\n        // to be submitted.\n\n        const isInstanceOfError = combinedErrors instanceof Error;\n        const isActuallyValid =\n          !isInstanceOfError && Object.keys(combinedErrors).length === 0;\n        if (isActuallyValid) {\n          // Proceed with submit...\n          //\n          // To respect sync submit fns, we can't simply wrap executeSubmit in a promise and\n          // _always_ dispatch SUBMIT_SUCCESS because isSubmitting would then always be false.\n          // This would be fine in simple cases, but make it impossible to disable submit\n          // buttons where people use callbacks or promises as side effects (which is basically\n          // all of v1 Formik code). Instead, recall that we are inside of a promise chain already,\n          //  so we can try/catch executeSubmit(), if it returns undefined, then just bail.\n          // If there are errors, throw em. Otherwise, wrap executeSubmit in a promise and handle\n          // cleanup of isSubmitting on behalf of the consumer.\n          let promiseOrUndefined;\n          try {\n            promiseOrUndefined = executeSubmit();\n            // Bail if it's sync, consumer is responsible for cleaning up\n            // via setSubmitting(false)\n            if (promiseOrUndefined === undefined) {\n              return;\n            }\n          } catch (error) {\n            throw error;\n          }\n\n          return Promise.resolve(promiseOrUndefined)\n            .then(result => {\n              if (!!isMounted.current) {\n                dispatch({ type: 'SUBMIT_SUCCESS' });\n              }\n              return result;\n            })\n            .catch(_errors => {\n              if (!!isMounted.current) {\n                dispatch({ type: 'SUBMIT_FAILURE' });\n                // This is a legit error rejected by the onSubmit fn\n                // so we don't want to break the promise chain\n                throw _errors;\n              }\n            });\n        } else if (!!isMounted.current) {\n          // ^^^ Make sure Formik is still mounted before updating state\n          dispatch({ type: 'SUBMIT_FAILURE' });\n          // throw combinedErrors;\n          if (isInstanceOfError) {\n            throw combinedErrors;\n          }\n        }\n        return;\n      }\n    );\n  });\n\n  const handleSubmit = useEventCallback(\n    (e?: React.FormEvent<HTMLFormElement>) => {\n      if (e && e.preventDefault && isFunction(e.preventDefault)) {\n        e.preventDefault();\n      }\n\n      if (e && e.stopPropagation && isFunction(e.stopPropagation)) {\n        e.stopPropagation();\n      }\n\n      // Warn if form submission is triggered by a <button> without a\n      // specified `type` attribute during development. This mitigates\n      // a common gotcha in forms with both reset and submit buttons,\n      // where the dev forgets to add type=\"button\" to the reset button.\n      if (__DEV__ && typeof document !== 'undefined') {\n        // Safely get the active element (works with IE)\n        const activeElement = getActiveElement();\n        if (\n          activeElement !== null &&\n          activeElement instanceof HTMLButtonElement\n        ) {\n          invariant(\n            activeElement.attributes &&\n              activeElement.attributes.getNamedItem('type'),\n            'You submitted a Formik form using a button with an unspecified `type` attribute.  Most browsers default button elements to `type=\"submit\"`. If this is not a submit button, please add `type=\"button\"`.'\n          );\n        }\n      }\n\n      submitForm().catch(reason => {\n        console.warn(\n          `Warning: An unhandled error was caught from submitForm()`,\n          reason\n        );\n      });\n    }\n  );\n\n  const imperativeMethods: FormikHelpers<Values> = {\n    resetForm,\n    validateForm: validateFormWithHighPriority,\n    validateField,\n    setErrors,\n    setFieldError,\n    setFieldTouched,\n    setFieldValue,\n    setStatus,\n    setSubmitting,\n    setTouched,\n    setValues,\n    setFormikState,\n    submitForm,\n  };\n\n  const executeSubmit = useEventCallback(() => {\n    return onSubmit(state.values, imperativeMethods);\n  });\n\n  const handleReset = useEventCallback(e => {\n    if (e && e.preventDefault && isFunction(e.preventDefault)) {\n      e.preventDefault();\n    }\n\n    if (e && e.stopPropagation && isFunction(e.stopPropagation)) {\n      e.stopPropagation();\n    }\n\n    resetForm();\n  });\n\n  const getFieldMeta = React.useCallback(\n    (name: string): FieldMetaProps<any> => {\n      return {\n        value: getIn(state.values, name),\n        error: getIn(state.errors, name),\n        touched: !!getIn(state.touched, name),\n        initialValue: getIn(initialValues.current, name),\n        initialTouched: !!getIn(initialTouched.current, name),\n        initialError: getIn(initialErrors.current, name),\n      };\n    },\n    [state.errors, state.touched, state.values]\n  );\n\n  const getFieldHelpers = React.useCallback(\n    (name: string): FieldHelperProps<any> => {\n      return {\n        setValue: (value: any, shouldValidate?: boolean) =>\n          setFieldValue(name, value, shouldValidate),\n        setTouched: (value: boolean, shouldValidate?: boolean) =>\n          setFieldTouched(name, value, shouldValidate),\n        setError: (value: any) => setFieldError(name, value),\n      };\n    },\n    [setFieldValue, setFieldTouched, setFieldError]\n  );\n\n  const getFieldProps = React.useCallback(\n    (nameOrOptions): FieldInputProps<any> => {\n      const isAnObject = isObject(nameOrOptions);\n      const name = isAnObject ? nameOrOptions.name : nameOrOptions;\n      const valueState = getIn(state.values, name);\n\n      const field: FieldInputProps<any> = {\n        name,\n        value: valueState,\n        onChange: handleChange,\n        onBlur: handleBlur,\n      };\n      if (isAnObject) {\n        const {\n          type,\n          value: valueProp, // value is special for checkboxes\n          as: is,\n          multiple,\n        } = nameOrOptions;\n\n        if (type === 'checkbox') {\n          if (valueProp === undefined) {\n            field.checked = !!valueState;\n          } else {\n            field.checked = !!(\n              Array.isArray(valueState) && ~valueState.indexOf(valueProp)\n            );\n            field.value = valueProp;\n          }\n        } else if (type === 'radio') {\n          field.checked = valueState === valueProp;\n          field.value = valueProp;\n        } else if (is === 'select' && multiple) {\n          field.value = field.value || [];\n          field.multiple = true;\n        }\n      }\n      return field;\n    },\n    [handleBlur, handleChange, state.values]\n  );\n\n  const dirty = React.useMemo(\n    () => !isEqual(initialValues.current, state.values),\n    [initialValues.current, state.values]\n  );\n\n  const isValid = React.useMemo(\n    () =>\n      typeof isInitialValid !== 'undefined'\n        ? dirty\n          ? state.errors && Object.keys(state.errors).length === 0\n          : isInitialValid !== false && isFunction(isInitialValid)\n          ? (isInitialValid as (props: FormikConfig<Values>) => boolean)(props)\n          : (isInitialValid as boolean)\n        : state.errors && Object.keys(state.errors).length === 0,\n    [isInitialValid, dirty, state.errors, props]\n  );\n\n  const ctx = {\n    ...state,\n    initialValues: initialValues.current,\n    initialErrors: initialErrors.current,\n    initialTouched: initialTouched.current,\n    initialStatus: initialStatus.current,\n    handleBlur,\n    handleChange,\n    handleReset,\n    handleSubmit,\n    resetForm,\n    setErrors,\n    setFormikState,\n    setFieldTouched,\n    setFieldValue,\n    setFieldError,\n    setStatus,\n    setSubmitting,\n    setTouched,\n    setValues,\n    submitForm,\n    validateForm: validateFormWithHighPriority,\n    validateField,\n    isValid,\n    dirty,\n    unregisterField,\n    registerField,\n    getFieldProps,\n    getFieldMeta,\n    getFieldHelpers,\n    validateOnBlur,\n    validateOnChange,\n    validateOnMount,\n  };\n\n  return ctx;\n}\n\nexport function Formik<\n  Values extends FormikValues = FormikValues,\n  ExtraProps = {}\n>(props: FormikConfig<Values> & ExtraProps) {\n  const formikbag = useFormik<Values>(props);\n  const { component, children, render, innerRef } = props;\n\n  // This allows folks to pass a ref to <Formik />\n  React.useImperativeHandle(innerRef, () => formikbag);\n\n  if (__DEV__) {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      invariant(\n        !props.render,\n        `<Formik render> has been deprecated and will be removed in future versions of Formik. Please use a child callback function instead. To get rid of this warning, replace <Formik render={(props) => ...} /> with <Formik>{(props) => ...}</Formik>`\n      );\n      // eslint-disable-next-line\n    }, []);\n  }\n  return (\n    <FormikProvider value={formikbag}>\n      {component\n        ? React.createElement(component as any, formikbag)\n        : render\n        ? render(formikbag)\n        : children // children come last, always called\n        ? isFunction(children)\n          ? (children as (bag: FormikProps<Values>) => React.ReactNode)(\n              formikbag as FormikProps<Values>\n            )\n          : !isEmptyChildren(children)\n          ? React.Children.only(children)\n          : null\n        : null}\n    </FormikProvider>\n  );\n}\n\nfunction warnAboutMissingIdentifier({\n  htmlContent,\n  documentationAnchorLink,\n  handlerName,\n}: {\n  htmlContent: string;\n  documentationAnchorLink: string;\n  handlerName: string;\n}) {\n  console.warn(\n    `Warning: Formik called \\`${handlerName}\\`, but you forgot to pass an \\`id\\` or \\`name\\` attribute to your input:\n    ${htmlContent}\n    Formik cannot determine which value to update. For more info see https://formik.org/docs/api/formik#${documentationAnchorLink}\n  `\n  );\n}\n\n/**\n * Transform Yup ValidationError to a more usable object\n */\nexport function yupToFormErrors<Values>(yupError: any): FormikErrors<Values> {\n  let errors: FormikErrors<Values> = {};\n  if (yupError.inner) {\n    if (yupError.inner.length === 0) {\n      return setIn(errors, yupError.path, yupError.message);\n    }\n    for (let err of yupError.inner) {\n      if (!getIn(errors, err.path)) {\n        errors = setIn(errors, err.path, err.message);\n      }\n    }\n  }\n  return errors;\n}\n\n/**\n * Validate a yup schema.\n */\nexport function validateYupSchema<T extends FormikValues>(\n  values: T,\n  schema: any,\n  sync: boolean = false,\n  context: any = {}\n): Promise<Partial<T>> {\n  const validateData: FormikValues = prepareDataForValidation(values);\n  return schema[sync ? 'validateSync' : 'validate'](validateData, {\n    abortEarly: false,\n    context: context,\n  });\n}\n\n/**\n * Recursively prepare values.\n */\nexport function prepareDataForValidation<T extends FormikValues>(\n  values: T\n): FormikValues {\n  let data: FormikValues = Array.isArray(values) ? [] : {};\n  for (let k in values) {\n    if (Object.prototype.hasOwnProperty.call(values, k)) {\n      const key = String(k);\n      if (Array.isArray(values[key]) === true) {\n        data[key] = values[key].map((value: any) => {\n          if (Array.isArray(value) === true || isPlainObject(value)) {\n            return prepareDataForValidation(value);\n          } else {\n            return value !== '' ? value : undefined;\n          }\n        });\n      } else if (isPlainObject(values[key])) {\n        data[key] = prepareDataForValidation(values[key]);\n      } else {\n        data[key] = values[key] !== '' ? values[key] : undefined;\n      }\n    }\n  }\n  return data;\n}\n\n/**\n * deepmerge array merging algorithm\n * https://github.com/KyleAMathews/deepmerge#combine-array\n */\nfunction arrayMerge(target: any[], source: any[], options: any): any[] {\n  const destination = target.slice();\n\n  source.forEach(function merge(e: any, i: number) {\n    if (typeof destination[i] === 'undefined') {\n      const cloneRequested = options.clone !== false;\n      const shouldClone = cloneRequested && options.isMergeableObject(e);\n      destination[i] = shouldClone\n        ? deepmerge(Array.isArray(e) ? [] : {}, e, options)\n        : e;\n    } else if (options.isMergeableObject(e)) {\n      destination[i] = deepmerge(target[i], e, options);\n    } else if (target.indexOf(e) === -1) {\n      destination.push(e);\n    }\n  });\n  return destination;\n}\n\n/** Return multi select values based on an array of options */\nfunction getSelectedValues(options: any[]) {\n  return Array.from(options)\n    .filter(el => el.selected)\n    .map(el => el.value);\n}\n\n/** Return the next value for a checkbox */\nfunction getValueForCheckbox(\n  currentValue: string | any[],\n  checked: boolean,\n  valueProp: any\n) {\n  // If the current value was a boolean, return a boolean\n  if (typeof currentValue === 'boolean') {\n    return Boolean(checked);\n  }\n\n  // If the currentValue was not a boolean we want to return an array\n  let currentArrayOfValues = [];\n  let isValueInArray = false;\n  let index = -1;\n\n  if (!Array.isArray(currentValue)) {\n    // eslint-disable-next-line eqeqeq\n    if (!valueProp || valueProp == 'true' || valueProp == 'false') {\n      return Boolean(checked);\n    }\n  } else {\n    // If the current value is already an array, use it\n    currentArrayOfValues = currentValue;\n    index = currentValue.indexOf(valueProp);\n    isValueInArray = index >= 0;\n  }\n\n  // If the checkbox was checked and the value is not already present in the aray we want to add the new value to the array of values\n  if (checked && valueProp && !isValueInArray) {\n    return currentArrayOfValues.concat(valueProp);\n  }\n\n  // If the checkbox was unchecked and the value is not in the array, simply return the already existing array of values\n  if (!isValueInArray) {\n    return currentArrayOfValues;\n  }\n\n  // If the checkbox was unchecked and the value is in the array, remove the value and return the array\n  return currentArrayOfValues\n    .slice(0, index)\n    .concat(currentArrayOfValues.slice(index + 1));\n}\n\n// React currently throws a warning when using useLayoutEffect on the server.\n// To get around it, we can conditionally useEffect on the server (no-op) and\n// useLayoutEffect in the browser.\n// @see https://gist.github.com/gaearon/e7d97cdf38a2907924ea12e4ebdf3c85\nconst useIsomorphicLayoutEffect =\n  typeof window !== 'undefined' &&\n  typeof window.document !== 'undefined' &&\n  typeof window.document.createElement !== 'undefined'\n    ? React.useLayoutEffect\n    : React.useEffect;\n\nfunction useEventCallback<T extends (...args: any[]) => any>(fn: T): T {\n  const ref: any = React.useRef(fn);\n\n  // we copy a ref to the callback scoped to the current state/props on each render\n  useIsomorphicLayoutEffect(() => {\n    ref.current = fn;\n  });\n\n  return React.useCallback(\n    (...args: any[]) => ref.current.apply(void 0, args),\n    []\n  ) as T;\n}\n","import * as React from 'react';\nimport {\n  FormikProps,\n  GenericFieldHTMLAttributes,\n  FieldMetaProps,\n  FieldHelperProps,\n  FieldInputProps,\n  FieldValidator,\n} from './types';\nimport { useFormikContext } from './FormikContext';\nimport { isFunction, isEmptyChildren, isObject } from './utils';\nimport invariant from 'tiny-warning';\n\nexport interface FieldProps<V = any, FormValues = any> {\n  field: FieldInputProps<V>;\n  form: FormikProps<FormValues>; // if ppl want to restrict this for a given form, let them.\n  meta: FieldMetaProps<V>;\n}\n\nexport interface FieldConfig<V = any> {\n  /**\n   * Field component to render. Can either be a string like 'select' or a component.\n   */\n  component?:\n    | string\n    | React.ComponentType<FieldProps<V>>\n    | React.ComponentType\n    | React.ForwardRefExoticComponent<any>;\n\n  /**\n   * Component to render. Can either be a string e.g. 'select', 'input', or 'textarea', or a component.\n   */\n  as?:\n    | React.ComponentType<FieldProps<V>['field']>\n    | string\n    | React.ComponentType\n    | React.ForwardRefExoticComponent<any>;\n\n  /**\n   * Render prop (works like React router's <Route render={props =>} />)\n   * @deprecated\n   */\n  render?: (props: FieldProps<V>) => React.ReactNode;\n\n  /**\n   * Children render function <Field name>{props => ...}</Field>)\n   */\n  children?: ((props: FieldProps<V>) => React.ReactNode) | React.ReactNode;\n\n  /**\n   * Validate a single field value independently\n   */\n  validate?: FieldValidator;\n\n  /**\n   * Field name\n   */\n  name: string;\n\n  /** HTML input type */\n  type?: string;\n\n  /** Field value */\n  value?: any;\n\n  /** Inner ref */\n  innerRef?: (instance: any) => void;\n}\n\nexport type FieldAttributes<T> = GenericFieldHTMLAttributes &\n  FieldConfig<T> &\n  T & { name: string };\n\nexport type FieldHookConfig<T> = GenericFieldHTMLAttributes & FieldConfig<T>;\n\nexport function useField<Val = any>(\n  propsOrFieldName: string | FieldHookConfig<Val>\n): [FieldInputProps<Val>, FieldMetaProps<Val>, FieldHelperProps<Val>] {\n  const formik = useFormikContext();\n  const {\n    getFieldProps,\n    getFieldMeta,\n    getFieldHelpers,\n    registerField,\n    unregisterField,\n  } = formik;\n\n  const isAnObject = isObject(propsOrFieldName);\n\n  // Normalize propsOrFieldName to FieldHookConfig<Val>\n  const props: FieldHookConfig<Val> = isAnObject\n    ? (propsOrFieldName as FieldHookConfig<Val>)\n    : { name: propsOrFieldName as string };\n\n  const { name: fieldName, validate: validateFn } = props;\n\n  React.useEffect(() => {\n    if (fieldName) {\n      registerField(fieldName, {\n        validate: validateFn,\n      });\n    }\n    return () => {\n      if (fieldName) {\n        unregisterField(fieldName);\n      }\n    };\n  }, [registerField, unregisterField, fieldName, validateFn]);\n\n  if (__DEV__) {\n    invariant(\n      formik,\n      'useField() / <Field /> must be used underneath a <Formik> component or withFormik() higher order component'\n    );\n  }\n\n  invariant(\n    fieldName,\n    'Invalid field name. Either pass `useField` a string or an object containing a `name` key.'\n  );\n\n  return [\n    getFieldProps(props),\n    getFieldMeta(fieldName),\n    getFieldHelpers(fieldName),\n  ];\n}\n\nexport function Field({\n  validate,\n  name,\n  render,\n  children,\n  as: is, // `as` is reserved in typescript lol\n  component,\n  ...props\n}: FieldAttributes<any>) {\n  const {\n    validate: _validate,\n    validationSchema: _validationSchema,\n\n    ...formik\n  } = useFormikContext();\n\n  if (__DEV__) {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      invariant(\n        !render,\n        `<Field render> has been deprecated and will be removed in future versions of Formik. Please use a child callback function instead. To get rid of this warning, replace <Field name=\"${name}\" render={({field, form}) => ...} /> with <Field name=\"${name}\">{({field, form, meta}) => ...}</Field>`\n      );\n\n      invariant(\n        !(is && children && isFunction(children)),\n        'You should not use <Field as> and <Field children> as a function in the same <Field> component; <Field as> will be ignored.'\n      );\n\n      invariant(\n        !(component && children && isFunction(children)),\n        'You should not use <Field component> and <Field children> as a function in the same <Field> component; <Field component> will be ignored.'\n      );\n\n      invariant(\n        !(render && children && !isEmptyChildren(children)),\n        'You should not use <Field render> and <Field children> in the same <Field> component; <Field children> will be ignored'\n      );\n      // eslint-disable-next-line\n    }, []);\n  }\n\n  // Register field and field-level validation with parent <Formik>\n  const { registerField, unregisterField } = formik;\n  React.useEffect(() => {\n    registerField(name, {\n      validate: validate,\n    });\n    return () => {\n      unregisterField(name);\n    };\n  }, [registerField, unregisterField, name, validate]);\n  const field = formik.getFieldProps({ name, ...props });\n  const meta = formik.getFieldMeta(name);\n  const legacyBag = { field, form: formik };\n\n  if (render) {\n    return render({ ...legacyBag, meta });\n  }\n\n  if (isFunction(children)) {\n    return children({ ...legacyBag, meta });\n  }\n\n  if (component) {\n    // This behavior is backwards compat with earlier Formik 0.9 to 1.x\n    if (typeof component === 'string') {\n      const { innerRef, ...rest } = props;\n      return React.createElement(\n        component,\n        { ref: innerRef, ...field, ...rest },\n        children\n      );\n    }\n    // We don't pass `meta` for backwards compat\n    return React.createElement(\n      component,\n      { field, form: formik, ...props },\n      children\n    );\n  }\n\n  // default to input here so we can check for both `as` and `children` above\n  const asElement = is || 'input';\n\n  if (typeof asElement === 'string') {\n    const { innerRef, ...rest } = props;\n    return React.createElement(\n      asElement,\n      { ref: innerRef, ...field, ...rest },\n      children\n    );\n  }\n\n  return React.createElement(asElement, { ...field, ...props }, children);\n}\n","import * as React from 'react';\nimport { useFormikContext } from './FormikContext';\n\nexport type FormikFormProps = Pick<\n  React.FormHTMLAttributes<HTMLFormElement>,\n  Exclude<\n    keyof React.FormHTMLAttributes<HTMLFormElement>,\n    'onReset' | 'onSubmit'\n  >\n>;\n\ntype FormProps = React.ComponentPropsWithoutRef<'form'>;\n\n// @todo tests\nexport const Form = React.forwardRef<HTMLFormElement, FormProps>(\n  (props: FormikFormProps, ref) => {\n    // iOS needs an \"action\" attribute for nice input: https://stackoverflow.com/a/39485162/406725\n    // We default the action to \"#\" in case the preventDefault fails (just updates the URL hash)\n    const { action, ...rest } = props;\n    const _action = action || '#';\n    const { handleReset, handleSubmit } = useFormikContext();\n    return (\n      <form\n        onSubmit={handleSubmit}\n        ref={ref}\n        onReset={handleReset}\n        action={_action}\n        {...rest}\n      />\n    );\n  }\n);\n\nForm.displayName = 'Form';\n","import * as React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\n\nimport { FormikContextType } from './types';\nimport { FormikConsumer } from './FormikContext';\nimport invariant from 'tiny-warning';\n\n/**\n * Connect any component to Formik context, and inject as a prop called `formik`;\n * @param Comp React Component\n */\nexport function connect<OuterProps, Values = {}>(\n  Comp: React.ComponentType<OuterProps & { formik: FormikContextType<Values> }>\n) {\n  const C: React.FC<OuterProps> = (props: OuterProps) => (\n    <FormikConsumer>\n      {formik => {\n        invariant(\n          !!formik,\n          `Formik context is undefined, please verify you are rendering <Form>, <Field>, <FastField>, <FieldArray>, or your custom context-using component as a child of a <Formik> component. Component name: ${Comp.name}`\n        );\n        return <Comp {...props} formik={formik} />;\n      }}\n    </FormikConsumer>\n  );\n  const componentDisplayName =\n    Comp.displayName ||\n    Comp.name ||\n    (Comp.constructor && Comp.constructor.name) ||\n    'Component';\n\n  // Assign Comp to C.WrappedComponent so we can access the inner component in tests\n  // For example, <Field.WrappedComponent /> gets us <FieldInner/>\n  (C as React.FC<OuterProps> & {\n    WrappedComponent: React.ReactNode;\n  }).WrappedComponent = Comp;\n\n  C.displayName = `FormikConnect(${componentDisplayName})`;\n\n  return hoistNonReactStatics(\n    C,\n    Comp as React.ComponentClass<\n      OuterProps & { formik: FormikContextType<Values> }\n    > // cast type to ComponentClass (even if SFC)\n  ) as React.ComponentType<OuterProps>;\n}\n","import * as React from 'react';\nimport cloneDeep from 'lodash/cloneDeep';\nimport { connect } from './connect';\nimport {\n  FormikContextType,\n  FormikState,\n  SharedRenderProps,\n  FormikProps,\n} from './types';\nimport {\n  getIn,\n  isEmptyChildren,\n  isFunction,\n  setIn,\n  isEmptyArray,\n} from './utils';\nimport isEqual from 'react-fast-compare';\n\nexport type FieldArrayRenderProps = ArrayHelpers & {\n  form: FormikProps<any>;\n  name: string;\n};\n\nexport type FieldArrayConfig = {\n  /** Really the path to the array field to be updated */\n  name: string;\n  /** Should field array validate the form AFTER array updates/changes? */\n  validateOnChange?: boolean;\n} & SharedRenderProps<FieldArrayRenderProps>;\nexport interface ArrayHelpers {\n  /** Imperatively add a value to the end of an array */\n  push: (obj: any) => void;\n  /** Curried fn to add a value to the end of an array */\n  handlePush: (obj: any) => () => void;\n  /** Imperatively swap two values in an array */\n  swap: (indexA: number, indexB: number) => void;\n  /** Curried fn to swap two values in an array */\n  handleSwap: (indexA: number, indexB: number) => () => void;\n  /** Imperatively move an element in an array to another index */\n  move: (from: number, to: number) => void;\n  /** Imperatively move an element in an array to another index */\n  handleMove: (from: number, to: number) => () => void;\n  /** Imperatively insert an element at a given index into the array */\n  insert: (index: number, value: any) => void;\n  /** Curried fn to insert an element at a given index into the array */\n  handleInsert: (index: number, value: any) => () => void;\n  /** Imperatively replace a value at an index of an array  */\n  replace: (index: number, value: any) => void;\n  /** Curried fn to replace an element at a given index into the array */\n  handleReplace: (index: number, value: any) => () => void;\n  /** Imperatively add an element to the beginning of an array and return its length */\n  unshift: (value: any) => number;\n  /** Curried fn to add an element to the beginning of an array */\n  handleUnshift: (value: any) => () => void;\n  /** Curried fn to remove an element at an index of an array */\n  handleRemove: (index: number) => () => void;\n  /** Curried fn to remove a value from the end of the array */\n  handlePop: () => () => void;\n  /** Imperatively remove and element at an index of an array */\n  remove<T>(index: number): T | undefined;\n  /** Imperatively remove and return value from the end of the array */\n  pop<T>(): T | undefined;\n}\n\n/**\n * Some array helpers!\n */\nexport const move = (array: any[], from: number, to: number) => {\n  const copy = copyArrayLike(array);\n  const value = copy[from];\n  copy.splice(from, 1);\n  copy.splice(to, 0, value);\n  return copy;\n};\n\nexport const swap = (\n  arrayLike: ArrayLike<any>,\n  indexA: number,\n  indexB: number\n) => {\n  const copy = copyArrayLike(arrayLike);\n  const a = copy[indexA];\n  copy[indexA] = copy[indexB];\n  copy[indexB] = a;\n  return copy;\n};\n\nexport const insert = (\n  arrayLike: ArrayLike<any>,\n  index: number,\n  value: any\n) => {\n  const copy = copyArrayLike(arrayLike);\n  copy.splice(index, 0, value);\n  return copy;\n};\n\nexport const replace = (\n  arrayLike: ArrayLike<any>,\n  index: number,\n  value: any\n) => {\n  const copy = copyArrayLike(arrayLike);\n  copy[index] = value;\n  return copy;\n};\n\nconst copyArrayLike = (arrayLike: ArrayLike<any>) => {\n  if (!arrayLike) {\n    return [];\n  } else if (Array.isArray(arrayLike)) {\n    return [...arrayLike];\n  } else {\n    const maxIndex = Object.keys(arrayLike)\n      .map(key => parseInt(key))\n      .reduce((max, el) => (el > max ? el : max), 0);\n    return Array.from({ ...arrayLike, length: maxIndex + 1 });\n  }\n};\n\nclass FieldArrayInner<Values = {}> extends React.Component<\n  FieldArrayConfig & { formik: FormikContextType<Values> },\n  {}\n> {\n  static defaultProps = {\n    validateOnChange: true,\n  };\n\n  constructor(props: FieldArrayConfig & { formik: FormikContextType<Values> }) {\n    super(props);\n    // We need TypeScript generics on these, so we'll bind them in the constructor\n    // @todo Fix TS 3.2.1\n    this.remove = this.remove.bind(this) as any;\n    this.pop = this.pop.bind(this) as any;\n  }\n\n  componentDidUpdate(\n    prevProps: FieldArrayConfig & { formik: FormikContextType<Values> }\n  ) {\n    if (\n      this.props.validateOnChange &&\n      this.props.formik.validateOnChange &&\n      !isEqual(\n        getIn(prevProps.formik.values, prevProps.name),\n        getIn(this.props.formik.values, this.props.name)\n      )\n    ) {\n      this.props.formik.validateForm(this.props.formik.values);\n    }\n  }\n\n  updateArrayField = (\n    fn: Function,\n    alterTouched: boolean | Function,\n    alterErrors: boolean | Function\n  ) => {\n    const {\n      name,\n\n      formik: { setFormikState },\n    } = this.props;\n    setFormikState((prevState: FormikState<any>) => {\n      let updateErrors = typeof alterErrors === 'function' ? alterErrors : fn;\n      let updateTouched =\n        typeof alterTouched === 'function' ? alterTouched : fn;\n\n      // values fn should be executed before updateErrors and updateTouched,\n      // otherwise it causes an error with unshift.\n      let values = setIn(\n        prevState.values,\n        name,\n        fn(getIn(prevState.values, name))\n      );\n\n      let fieldError = alterErrors\n        ? updateErrors(getIn(prevState.errors, name))\n        : undefined;\n      let fieldTouched = alterTouched\n        ? updateTouched(getIn(prevState.touched, name))\n        : undefined;\n\n      if (isEmptyArray(fieldError)) {\n        fieldError = undefined;\n      }\n      if (isEmptyArray(fieldTouched)) {\n        fieldTouched = undefined;\n      }\n\n      return {\n        ...prevState,\n        values,\n        errors: alterErrors\n          ? setIn(prevState.errors, name, fieldError)\n          : prevState.errors,\n        touched: alterTouched\n          ? setIn(prevState.touched, name, fieldTouched)\n          : prevState.touched,\n      };\n    });\n  };\n\n  push = (value: any) =>\n    this.updateArrayField(\n      (arrayLike: ArrayLike<any>) => [\n        ...copyArrayLike(arrayLike),\n        cloneDeep(value),\n      ],\n      false,\n      false\n    );\n\n  handlePush = (value: any) => () => this.push(value);\n\n  swap = (indexA: number, indexB: number) =>\n    this.updateArrayField(\n      (array: any[]) => swap(array, indexA, indexB),\n      true,\n      true\n    );\n\n  handleSwap = (indexA: number, indexB: number) => () =>\n    this.swap(indexA, indexB);\n\n  move = (from: number, to: number) =>\n    this.updateArrayField((array: any[]) => move(array, from, to), true, true);\n\n  handleMove = (from: number, to: number) => () => this.move(from, to);\n\n  insert = (index: number, value: any) =>\n    this.updateArrayField(\n      (array: any[]) => insert(array, index, value),\n      (array: any[]) => insert(array, index, null),\n      (array: any[]) => insert(array, index, null)\n    );\n\n  handleInsert = (index: number, value: any) => () => this.insert(index, value);\n\n  replace = (index: number, value: any) =>\n    this.updateArrayField(\n      (array: any[]) => replace(array, index, value),\n      false,\n      false\n    );\n\n  handleReplace = (index: number, value: any) => () =>\n    this.replace(index, value);\n\n  unshift = (value: any) => {\n    let length = -1;\n    this.updateArrayField(\n      (array: any[]) => {\n        const arr = array ? [value, ...array] : [value];\n        if (length < 0) {\n          length = arr.length;\n        }\n        return arr;\n      },\n      (array: any[]) => {\n        const arr = array ? [null, ...array] : [null];\n        if (length < 0) {\n          length = arr.length;\n        }\n        return arr;\n      },\n      (array: any[]) => {\n        const arr = array ? [null, ...array] : [null];\n        if (length < 0) {\n          length = arr.length;\n        }\n        return arr;\n      }\n    );\n    return length;\n  };\n\n  handleUnshift = (value: any) => () => this.unshift(value);\n\n  remove<T>(index: number): T {\n    // We need to make sure we also remove relevant pieces of `touched` and `errors`\n    let result: any;\n    this.updateArrayField(\n      // so this gets call 3 times\n      (array?: any[]) => {\n        const copy = array ? copyArrayLike(array) : [];\n        if (!result) {\n          result = copy[index];\n        }\n        if (isFunction(copy.splice)) {\n          copy.splice(index, 1);\n        }\n        return copy;\n      },\n      true,\n      true\n    );\n\n    return result as T;\n  }\n\n  handleRemove = (index: number) => () => this.remove<any>(index);\n\n  pop<T>(): T {\n    // Remove relevant pieces of `touched` and `errors` too!\n    let result: any;\n    this.updateArrayField(\n      // so this gets call 3 times\n      (array: any[]) => {\n        const tmp = array;\n        if (!result) {\n          result = tmp && tmp.pop && tmp.pop();\n        }\n        return tmp;\n      },\n      true,\n      true\n    );\n\n    return result as T;\n  }\n\n  handlePop = () => () => this.pop<any>();\n\n  render() {\n    const arrayHelpers: ArrayHelpers = {\n      push: this.push,\n      pop: this.pop,\n      swap: this.swap,\n      move: this.move,\n      insert: this.insert,\n      replace: this.replace,\n      unshift: this.unshift,\n      remove: this.remove,\n      handlePush: this.handlePush,\n      handlePop: this.handlePop,\n      handleSwap: this.handleSwap,\n      handleMove: this.handleMove,\n      handleInsert: this.handleInsert,\n      handleReplace: this.handleReplace,\n      handleUnshift: this.handleUnshift,\n      handleRemove: this.handleRemove,\n    };\n\n    const {\n      component,\n      render,\n      children,\n      name,\n      formik: {\n        validate: _validate,\n        validationSchema: _validationSchema,\n        ...restOfFormik\n      },\n    } = this.props;\n\n    const props: FieldArrayRenderProps = {\n      ...arrayHelpers,\n      form: restOfFormik,\n      name,\n    };\n\n    return component\n      ? React.createElement(component as any, props)\n      : render\n      ? (render as any)(props)\n      : children // children come last, always called\n      ? typeof children === 'function'\n        ? (children as any)(props)\n        : !isEmptyChildren(children)\n        ? React.Children.only(children)\n        : null\n      : null;\n  }\n}\n\nexport const FieldArray = connect<FieldArrayConfig, any>(FieldArrayInner);\n","import * as React from 'react';\nimport { FormikContextType } from './types';\nimport { getIn, isFunction } from './utils';\nimport { connect } from './connect';\n\nexport interface ErrorMessageProps {\n  name: string;\n  className?: string;\n  component?: string | React.ComponentType;\n  children?: (errorMessage: string) => React.ReactNode;\n  render?: (errorMessage: string) => React.ReactNode;\n}\n\nclass ErrorMessageImpl extends React.Component<\n  ErrorMessageProps & { formik: FormikContextType<any> }\n> {\n  shouldComponentUpdate(\n    props: ErrorMessageProps & { formik: FormikContextType<any> }\n  ) {\n    if (\n      getIn(this.props.formik.errors, this.props.name) !==\n        getIn(props.formik.errors, this.props.name) ||\n      getIn(this.props.formik.touched, this.props.name) !==\n        getIn(props.formik.touched, this.props.name) ||\n      Object.keys(this.props).length !== Object.keys(props).length\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  render() {\n    let { component, formik, render, children, name, ...rest } = this.props;\n\n    const touch = getIn(formik.touched, name);\n    const error = getIn(formik.errors, name);\n\n    return !!touch && !!error\n      ? render\n        ? isFunction(render)\n          ? render(error)\n          : null\n        : children\n        ? isFunction(children)\n          ? children(error)\n          : null\n        : component\n        ? React.createElement(component, rest as any, error)\n        : error\n      : null;\n  }\n}\n\nexport const ErrorMessage = connect<\n  ErrorMessageProps,\n  ErrorMessageProps & { formik: FormikContextType<any> }\n>(ErrorMessageImpl);\n","import * as React from 'react';\n\nimport {\n  FormikProps,\n  GenericFieldHTMLAttributes,\n  FormikContextType,\n  FieldMetaProps,\n  FieldInputProps,\n} from './types';\nimport invariant from 'tiny-warning';\nimport { getIn, isEmptyChildren, isFunction } from './utils';\nimport { FieldConfig } from './Field';\nimport { connect } from './connect';\n\ntype $FixMe = any;\n\nexport interface FastFieldProps<V = any> {\n  field: FieldInputProps<V>;\n  meta: FieldMetaProps<V>;\n  form: FormikProps<V>; // if ppl want to restrict this for a given form, let them.\n}\n\nexport type FastFieldConfig<T> = FieldConfig & {\n  /** Override FastField's default shouldComponentUpdate */\n  shouldUpdate?: (\n    nextProps: T & GenericFieldHTMLAttributes,\n    props: {}\n  ) => boolean;\n};\n\nexport type FastFieldAttributes<T> = GenericFieldHTMLAttributes &\n  FastFieldConfig<T> &\n  T;\n\ntype FastFieldInnerProps<Values = {}, Props = {}> = FastFieldAttributes<\n  Props\n> & { formik: FormikContextType<Values> };\n\n/**\n * Custom Field component for quickly hooking into Formik\n * context and wiring up forms.\n */\nclass FastFieldInner<Values = {}, Props = {}> extends React.Component<\n  FastFieldInnerProps<Values, Props>,\n  {}\n> {\n  constructor(props: FastFieldInnerProps<Values, Props>) {\n    super(props);\n    const { render, children, component, as: is, name } = props;\n    invariant(\n      !render,\n      `<FastField render> has been deprecated. Please use a child callback function instead: <FastField name={${name}}>{props => ...}</FastField> instead.`\n    );\n    invariant(\n      !(component && render),\n      'You should not use <FastField component> and <FastField render> in the same <FastField> component; <FastField component> will be ignored'\n    );\n\n    invariant(\n      !(is && children && isFunction(children)),\n      'You should not use <FastField as> and <FastField children> as a function in the same <FastField> component; <FastField as> will be ignored.'\n    );\n\n    invariant(\n      !(component && children && isFunction(children)),\n      'You should not use <FastField component> and <FastField children> as a function in the same <FastField> component; <FastField component> will be ignored.'\n    );\n\n    invariant(\n      !(render && children && !isEmptyChildren(children)),\n      'You should not use <FastField render> and <FastField children> in the same <FastField> component; <FastField children> will be ignored'\n    );\n  }\n\n  shouldComponentUpdate(props: FastFieldInnerProps<Values, Props>) {\n    if (this.props.shouldUpdate) {\n      return this.props.shouldUpdate(props, this.props);\n    } else if (\n      props.name !== this.props.name ||\n      getIn(props.formik.values, this.props.name) !==\n        getIn(this.props.formik.values, this.props.name) ||\n      getIn(props.formik.errors, this.props.name) !==\n        getIn(this.props.formik.errors, this.props.name) ||\n      getIn(props.formik.touched, this.props.name) !==\n        getIn(this.props.formik.touched, this.props.name) ||\n      Object.keys(this.props).length !== Object.keys(props).length ||\n      props.formik.isSubmitting !== this.props.formik.isSubmitting\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  componentDidMount() {\n    // Register the Field with the parent Formik. Parent will cycle through\n    // registered Field's validate fns right prior to submit\n    this.props.formik.registerField(this.props.name, {\n      validate: this.props.validate,\n    });\n  }\n\n  componentDidUpdate(prevProps: FastFieldAttributes<Props>) {\n    if (this.props.name !== prevProps.name) {\n      this.props.formik.unregisterField(prevProps.name);\n      this.props.formik.registerField(this.props.name, {\n        validate: this.props.validate,\n      });\n    }\n\n    if (this.props.validate !== prevProps.validate) {\n      this.props.formik.registerField(this.props.name, {\n        validate: this.props.validate,\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.formik.unregisterField(this.props.name);\n  }\n\n  render() {\n    const {\n      validate,\n      name,\n      render,\n      as: is,\n      children,\n      component,\n      shouldUpdate,\n      formik,\n      ...props\n    } = this.props as FastFieldInnerProps<Values, Props>;\n\n    const {\n      validate: _validate,\n      validationSchema: _validationSchema,\n      ...restOfFormik\n    } = formik;\n    const field = formik.getFieldProps({ name, ...props });\n    const meta = {\n      value: getIn(formik.values, name),\n      error: getIn(formik.errors, name),\n      touched: !!getIn(formik.touched, name),\n      initialValue: getIn(formik.initialValues, name),\n      initialTouched: !!getIn(formik.initialTouched, name),\n      initialError: getIn(formik.initialErrors, name),\n    };\n\n    const bag = { field, meta, form: restOfFormik };\n\n    if (render) {\n      return (render as any)(bag);\n    }\n\n    if (isFunction(children)) {\n      return (children as (props: FastFieldProps<any>) => React.ReactNode)(bag);\n    }\n\n    if (component) {\n      // This behavior is backwards compat with earlier Formik 0.9 to 1.x\n      if (typeof component === 'string') {\n        const { innerRef, ...rest } = props;\n        return React.createElement(\n          component,\n          { ref: innerRef, ...field, ...(rest as $FixMe) },\n          children\n        );\n      }\n      // We don't pass `meta` for backwards compat\n      return React.createElement(\n        component as React.ComponentClass<$FixMe>,\n        { field, form: formik, ...props },\n        children\n      );\n    }\n\n    // default to input here so we can check for both `as` and `children` above\n    const asElement = is || 'input';\n\n    if (typeof asElement === 'string') {\n      const { innerRef, ...rest } = props;\n      return React.createElement(\n        asElement,\n        { ref: innerRef, ...field, ...(rest as $FixMe) },\n        children\n      );\n    }\n\n    return React.createElement(\n      asElement as React.ComponentClass,\n      { ...field, ...props },\n      children\n    );\n  }\n}\n\nexport const FastField = connect<FastFieldAttributes<any>, any>(FastFieldInner);\n","var isProduction = process.env.NODE_ENV === 'production';\nfunction warning(condition, message) {\n  if (!isProduction) {\n    if (condition) {\n      return;\n    }\n\n    var text = \"Warning: \" + message;\n\n    if (typeof console !== 'undefined') {\n      console.warn(text);\n    }\n\n    try {\n      throw Error(text);\n    } catch (x) {}\n  }\n}\n\nexport default warning;\n","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nimport { __extends, __rest, __spreadArrays } from \"tslib\";\nimport * as React from 'react';\nimport { Context } from './injectIntl';\nimport { invariantIntlContext } from '../utils';\nimport * as shallowEquals_ from 'shallow-equal/objects';\nvar shallowEquals = shallowEquals_.default || shallowEquals_;\nvar FormattedMessage = /** @class */ (function (_super) {\n    __extends(FormattedMessage, _super);\n    function FormattedMessage() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    FormattedMessage.prototype.shouldComponentUpdate = function (nextProps) {\n        var _a = this.props, values = _a.values, otherProps = __rest(_a, [\"values\"]);\n        var nextValues = nextProps.values, nextOtherProps = __rest(nextProps, [\"values\"]);\n        return (!shallowEquals(nextValues, values) ||\n            !shallowEquals(otherProps, nextOtherProps));\n    };\n    FormattedMessage.prototype.render = function () {\n        var _this = this;\n        return (React.createElement(Context.Consumer, null, function (intl) {\n            invariantIntlContext(intl);\n            var formatMessage = intl.formatMessage, _a = intl.textComponent, Text = _a === void 0 ? React.Fragment : _a;\n            var _b = _this.props, id = _b.id, description = _b.description, defaultMessage = _b.defaultMessage, values = _b.values, children = _b.children, _c = _b.tagName, Component = _c === void 0 ? Text : _c;\n            var descriptor = { id: id, description: description, defaultMessage: defaultMessage };\n            var nodes = formatMessage(descriptor, values);\n            if (!Array.isArray(nodes)) {\n                nodes = [nodes];\n            }\n            if (typeof children === 'function') {\n                return children(nodes);\n            }\n            if (Component) {\n                // Needs to use `createElement()` instead of JSX, otherwise React will\n                // warn about a missing `key` prop with rich-text message formatting.\n                return React.createElement.apply(React, __spreadArrays([Component, null], nodes));\n            }\n            return nodes;\n        }));\n    };\n    FormattedMessage.displayName = 'FormattedMessage';\n    return FormattedMessage;\n}(React.Component));\nexport default FormattedMessage;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, isObject } from './utils';\nvar colWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar columnProps = PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string, PropTypes.shape({\n  size: PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string]),\n  order: stringOrNumberProp,\n  offset: stringOrNumberProp\n})]);\nvar propTypes = {\n  tag: tagPropType,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  widths: PropTypes.array\n};\nvar defaultProps = {\n  tag: 'div',\n  widths: colWidths\n};\n\nvar getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\" + colWidth;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n  }\n\n  return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n};\n\nvar Col = function Col(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      widths = props.widths,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"widths\", \"tag\"]);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    var isXs = !i;\n\n    if (isObject(columnProp)) {\n      var _classNames;\n\n      var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n      var colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames)), cssModule));\n    } else {\n      var _colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n\n      colClasses.push(_colClass);\n    }\n  });\n\n  if (!colClasses.length) {\n    colClasses.push('col');\n  }\n\n  var classes = mapToCssModules(classNames(className, colClasses), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCol.propTypes = propTypes;\nCol.defaultProps = defaultProps;\nexport default Col;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar rowColWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar rowColsPropType = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar propTypes = {\n  tag: tagPropType,\n  noGutters: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  form: PropTypes.bool,\n  xs: rowColsPropType,\n  sm: rowColsPropType,\n  md: rowColsPropType,\n  lg: rowColsPropType,\n  xl: rowColsPropType\n};\nvar defaultProps = {\n  tag: 'div',\n  widths: rowColWidths\n};\n\nvar Row = function Row(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      noGutters = props.noGutters,\n      Tag = props.tag,\n      form = props.form,\n      widths = props.widths,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"noGutters\", \"tag\", \"form\", \"widths\"]);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var colSize = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!colSize) {\n      return;\n    }\n\n    var isXs = !i;\n    colClasses.push(isXs ? \"row-cols-\" + colSize : \"row-cols-\" + colWidth + \"-\" + colSize);\n  });\n  var classes = mapToCssModules(classNames(className, noGutters ? 'no-gutters' : null, form ? 'form-row' : 'row', colClasses), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nRow.propTypes = propTypes;\nRow.defaultProps = defaultProps;\nexport default Row;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  inverse: PropTypes.bool,\n  color: PropTypes.string,\n  body: PropTypes.bool,\n  outline: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Card = function Card(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      body = props.body,\n      inverse = props.inverse,\n      outline = props.outline,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \"-\" + color : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCard.propTypes = propTypes;\nCard.defaultProps = defaultProps;\nexport default Card;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardTitle = function CardTitle(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-title'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardTitle.propTypes = propTypes;\nCardTitle.defaultProps = defaultProps;\nexport default CardTitle;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  active: PropTypes.bool,\n  'aria-label': PropTypes.string,\n  block: PropTypes.bool,\n  color: PropTypes.string,\n  disabled: PropTypes.bool,\n  outline: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  onClick: PropTypes.func,\n  size: PropTypes.string,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  close: PropTypes.bool\n};\nvar defaultProps = {\n  color: 'secondary',\n  tag: 'button'\n};\n\nvar Button = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Button, _React$Component);\n\n  function Button(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.onClick = _this.onClick.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = Button.prototype;\n\n  _proto.onClick = function onClick(e) {\n    if (this.props.disabled) {\n      e.preventDefault();\n      return;\n    }\n\n    if (this.props.onClick) {\n      return this.props.onClick(e);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        active = _this$props.active,\n        ariaLabel = _this$props['aria-label'],\n        block = _this$props.block,\n        className = _this$props.className,\n        close = _this$props.close,\n        cssModule = _this$props.cssModule,\n        color = _this$props.color,\n        outline = _this$props.outline,\n        size = _this$props.size,\n        Tag = _this$props.tag,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, [\"active\", \"aria-label\", \"block\", \"className\", \"close\", \"cssModule\", \"color\", \"outline\", \"size\", \"tag\", \"innerRef\"]);\n\n    if (close && typeof attributes.children === 'undefined') {\n      attributes.children = /*#__PURE__*/React.createElement(\"span\", {\n        \"aria-hidden\": true\n      }, \"\\xD7\");\n    }\n\n    var btnOutlineColor = \"btn\" + (outline ? '-outline' : '') + \"-\" + color;\n    var classes = mapToCssModules(classNames(className, {\n      close: close\n    }, close || 'btn', close || btnOutlineColor, size ? \"btn-\" + size : false, block ? 'btn-block' : false, {\n      active: active,\n      disabled: this.props.disabled\n    }), cssModule);\n\n    if (attributes.href && Tag === 'button') {\n      Tag = 'a';\n    }\n\n    var defaultAriaLabel = close ? 'Close' : null;\n    return /*#__PURE__*/React.createElement(Tag, _extends({\n      type: Tag === 'button' && attributes.onClick ? 'button' : undefined\n    }, attributes, {\n      className: classes,\n      ref: innerRef,\n      onClick: this.onClick,\n      \"aria-label\": ariaLabel || defaultAriaLabel\n    }));\n  };\n\n  return Button;\n}(React.Component);\n\nButton.propTypes = propTypes;\nButton.defaultProps = defaultProps;\nexport default Button;","'use strict';\n\nvar isArray = Array.isArray;\nvar keyList = Object.keys;\nvar hasProp = Object.prototype.hasOwnProperty;\nvar hasElementType = typeof Element !== 'undefined';\n\nfunction equal(a, b) {\n  // fast-deep-equal index.js 2.0.1\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    var arrA = isArray(a)\n      , arrB = isArray(b)\n      , i\n      , length\n      , key;\n\n    if (arrA && arrB) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n    if (arrA != arrB) return false;\n\n    var dateA = a instanceof Date\n      , dateB = b instanceof Date;\n    if (dateA != dateB) return false;\n    if (dateA && dateB) return a.getTime() == b.getTime();\n\n    var regexpA = a instanceof RegExp\n      , regexpB = b instanceof RegExp;\n    if (regexpA != regexpB) return false;\n    if (regexpA && regexpB) return a.toString() == b.toString();\n\n    var keys = keyList(a);\n    length = keys.length;\n\n    if (length !== keyList(b).length)\n      return false;\n\n    for (i = length; i-- !== 0;)\n      if (!hasProp.call(b, keys[i])) return false;\n    // end fast-deep-equal\n\n    // start react-fast-compare\n    // custom handling for DOM elements\n    if (hasElementType && a instanceof Element && b instanceof Element)\n      return a === b;\n\n    // custom handling for React\n    for (i = length; i-- !== 0;) {\n      key = keys[i];\n      if (key === '_owner' && a.$$typeof) {\n        // React-specific: avoid traversing React elements' _owner.\n        //  _owner contains circular references\n        // and is not needed when comparing the actual elements (and not their owners)\n        // .$$typeof and ._store on just reasonable markers of a react element\n        continue;\n      } else {\n        // all other properties should be traversed as usual\n        if (!equal(a[key], b[key])) return false;\n      }\n    }\n    // end react-fast-compare\n\n    // fast-deep-equal index.js 2.0.1\n    return true;\n  }\n\n  return a !== a && b !== b;\n}\n// end fast-deep-equal\n\nmodule.exports = function exportedEqual(a, b) {\n  try {\n    return equal(a, b);\n  } catch (error) {\n    if ((error.message && error.message.match(/stack|recursion/i)) || (error.number === -2146828260)) {\n      // warn on circular references, don't crash\n      // browsers give this different errors name and messages:\n      // chrome/safari: \"RangeError\", \"Maximum call stack size exceeded\"\n      // firefox: \"InternalError\", too much recursion\"\n      // edge: \"Error\", \"Out of stack space\"\n      console.warn('Warning: react-fast-compare does not handle circular references.', error.name, error.message);\n      return false;\n    }\n    // some other error. we should definitely know about these\n    throw error;\n  }\n};\n"],"sourceRoot":""}