{"version":3,"sources":["components/StateButton.js","hooks/use-fetch.js","components/wizard/BottomNavigation.js","components/application/JoinTeamModal.js","views/app/challenges/hack-wizard/complete-status.js","views/app/challenges/hack-wizard/step-four.js","containers/application/DataDisplay.js","views/app/challenges/hack-wizard/components/section.js","views/app/challenges/hack-wizard/step-one.js","views/app/challenges/hack-wizard/step-three.js","components/common/Rating.js","views/app/challenges/hack-wizard/step-two.js","views/app/challenges/hack-wizard/index.js"],"names":["StateButton","id","className","color","children","onClick","next","successNext","useState","status","setStatus","message","setMessage","messageShow","setMessageShow","classnames","then","res","catch","err","finally","setTimeout","disabled","placement","isOpen","target","defaultProps","useFetch","url","refresh","name","loading","setLoading","error","setError","data","setData","useEffect","a","instance","method","response","success","fetchData","propTypes","PropTypes","string","isRequired","bool","BottomNavigation","onClickPrev","prevLabel","onClickNext","nextLabel","render","previous","step","steps","Button","indexOf","length","JoinTeamModal","setOpenModal","code","formValues","setFormValues","ModalHeader","IntlMessages","ModalBody","FormGroup","Label","Input","type","value","question","onChange","event","key","handleChange","ModalFooter","Promise","CompleteStatus","completePercentage","openJoinTeam","setOpenJoinTeam","user_id","getProfileData","handleSubmit","failed","hackathon_id","console","log","addJudge","Card","CardBody","CardTitle","window","location","href","outline","Modal","toggle","StepFour","CustomInput","label","xxs","DataDisplay","messageId","Badge","pill","Section","userData","map","item","databaseKey","StepOne","hackathon","hackData","applicationData","JSON","parse","application","about","contact","education","experience","online_profiles","applicationAboutData","hackthonApplication","filter","includes","applicationContactData","applicationEducationData","applicationExpericeData","applicationOnlineProfileData","StepThree","InputGroup","Star","props","starProps","nameMap","isDisabled","isActive","isActiveHalf","willBeActive","Object","keys","prop","join","Rating","quillModules","toolbar","list","indent","quillFormats","StepTwo","answer1","setAnswer1","answer2","setAnswer2","answer3","setAnswer3","answer4","setAnswer4","theme","val","modules","formats","total","rating","onRate","HackWizard","match","params","setCompletePercentage","Row","xs","md","hideTopNav","goToNext","isDone","goToPrev"],"mappings":"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","file":"static/js/32.d68cc5e1.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Popover, PopoverBody } from 'reactstrap';\nimport classnames from 'classnames';\n\nconst StateButton = ({\n  id,\n  className,\n  color,\n  children,\n  onClick,\n  next,\n  successNext,\n}) => {\n  const [status, setStatus] = useState('default');\n  const [message, setMessage] = useState('');\n  const [messageShow, setMessageShow] = useState(false);\n\n  const handleOnClick = () => {\n    setStatus('processing');\n\n    onClick()\n      .then((res) => {\n        setMessage(res);\n        setStatus('success');\n        if (successNext) {\n          successNext();\n        }\n      })\n      .catch((err) => {\n        setMessage(err);\n        setStatus('fail');\n      })\n      .finally(() => {\n        setMessageShow(true);\n        setTimeout(() => {\n          setStatus('default');\n          setMessageShow(false);\n          if (next) {\n            next();\n          }\n        }, 3000);\n      });\n  };\n\n  return (\n    <span>\n      <Button\n        id={id}\n        className={`btn-multiple-state  ${className}  ${classnames({\n          'show-spinner': status === 'processing',\n          'show-success': status === 'success',\n          'show-fail': status === 'fail',\n        })}`}\n        color={color}\n        onClick={handleOnClick}\n        disabled={status !== 'default'}\n      >\n        <Popover placement=\"top\" isOpen={messageShow} target={id}>\n          <PopoverBody>{message}</PopoverBody>\n        </Popover>\n        <span className=\"spinner d-inline-block\">\n          <span className=\"bounce1\" />\n          <span className=\"bounce2\" />\n          <span className=\"bounce3\" />\n        </span>\n        <span className=\"icon success\">\n          <i className=\"simple-icon-check\" />\n        </span>\n        <span className=\"icon fail\">\n          <i className=\"simple-icon-exclamation\" />\n        </span>\n        <span className=\"label\">{children}</span>\n      </Button>\n    </span>\n  );\n};\n\nStateButton.propTypes = {\n  id: PropTypes.string.isRequired,\n  className: PropTypes.string,\n  color: PropTypes.string.isRequired,\n  children: PropTypes.node,\n  onClick: PropTypes.func.isRequired,\n  next: PropTypes.func,\n  successNext: PropTypes.func,\n};\n\nStateButton.defaultProps = {\n  className: '',\n  children: null,\n  next: null,\n  successNext: null,\n};\n\nexport default StateButton;\n","import { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport instance from '../helpers/axiosInstance';\r\n\r\nconst useFetch = (url, refresh = false, name = 'data') => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (!url) {\r\n      setError('Please Provide a Uri!');\r\n      return;\r\n    }\r\n\r\n    if (refresh) {\r\n      setData(false);\r\n    }\r\n\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await instance({\r\n          method: 'GET',\r\n          url,\r\n        });\r\n\r\n        if (response.data.success) {\r\n          setData(response.data[name]);\r\n        } else {\r\n          setError(response.data.message);\r\n        }\r\n        setLoading(false);\r\n      } catch (err) {\r\n        setError(err.message);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return { loading, data, error };\r\n};\r\n\r\nexport default useFetch;\r\n\r\nuseFetch.propTypes = {\r\n  url: PropTypes.string.isRequired,\r\n  refresh: PropTypes.bool,\r\n};\r\n","/* eslint-disable react/no-array-index-key */\n/* eslint-disable no-unused-vars */\n/* eslint-disable no-param-reassign */\nimport React from 'react';\nimport { WithWizard } from 'react-albus';\nimport { Button } from 'reactstrap';\n\nconst BottomNavigation = ({\n  className,\n  onClickPrev,\n  prevLabel,\n  onClickNext,\n  nextLabel,\n}) => {\n  return (\n    <WithWizard\n      render={({ next, previous, step, steps }) => (\n        <div className={`wizard-buttons ${className}`}>\n          <Button\n            color=\"primary\"\n            className={`mr-1 ${steps.indexOf(step) <= 0 ? 'disabled' : ''}`}\n            onClick={() => {\n              onClickPrev(previous, steps, step);\n            }}\n          >\n            {prevLabel}\n          </Button>\n\n          <Button\n            color=\"primary\"\n            className={\n              steps.indexOf(step) >= steps.length - 1 ? 'disabled' : ''\n            }\n            onClick={() => {\n              onClickNext(next, steps, step);\n            }}\n          >\n            {nextLabel}\n          </Button>\n        </div>\n      )}\n    />\n  );\n};\nexport default BottomNavigation;\n","/* eslint-disable no-unused-vars */\r\n\r\nimport React, { useState } from 'react';\r\nimport {\r\n  Button,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader,\r\n} from 'reactstrap';\r\n// import instance from '../../helpers/axiosInstance';\r\nimport IntlMessages from '../../helpers/IntlMessages';\r\n\r\nimport StateButton from '../StateButton';\r\n\r\nconst JoinTeamModal = ({ setOpenModal }) => {\r\n  const [formValues, setFormValues] = useState({\r\n    code: '',\r\n  });\r\n\r\n  const handleSuccessButtonClick = (newData) => {\r\n    return new Promise((success) => {\r\n      setTimeout(() => {\r\n        success('Everything went right!');\r\n      }, 1400);\r\n    });\r\n  };\r\n\r\n  // const handleSubmit = async (newData) => {\r\n  //   return new Promise((success, failed) => {\r\n  //     const updateProfile = async () => {\r\n  //       try {\r\n  //         const response = await instance({\r\n  //           method: 'POST',\r\n  //           url: '/addquestion',\r\n  //           data: JSON.stringify({ question: [{ ...newData }] }),\r\n  //           // headers: {\r\n  //           //   Authorization: `Bearer ${access_token}`,\r\n  //           // },\r\n  //         });\r\n\r\n  //         const { data } = response;\r\n  //         console.log(data);\r\n  //         if (data.success) {\r\n  //           setFormValues({ ...formValues, ...newData });\r\n  //           success('Hackathon updated successfully!');\r\n  //         } else {\r\n  //           failed('Failed to update hackathon!');\r\n  //         }\r\n  //       } catch (error) {\r\n  //         console.log(error);\r\n  //         failed('Failed to update hackathon!');\r\n  //       }\r\n  //     };\r\n  //     updateProfile();\r\n  //   });\r\n  // };\r\n\r\n  const handleChange = (event, key, value = false) => {\r\n    setFormValues({\r\n      ...formValues,\r\n      [key]: value ? event : event.target.value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ModalHeader>\r\n        <h2 className=\"lead\">\r\n          <IntlMessages id=\"challenges.modal.join-team-title\" />\r\n        </h2>\r\n      </ModalHeader>\r\n\r\n      <ModalBody>\r\n        <FormGroup>\r\n          <Label>\r\n            <IntlMessages id=\"challenges.modal.code\" />\r\n          </Label>\r\n          <FormGroup>\r\n            <Input\r\n              type=\"text\"\r\n              value={formValues.question}\r\n              onChange={(event) => handleChange(event, 'code')}\r\n            />\r\n          </FormGroup>\r\n        </FormGroup>\r\n      </ModalBody>\r\n\r\n      <ModalFooter>\r\n        <StateButton\r\n          id=\"add-question-buttom\"\r\n          color=\"secondary\"\r\n          onClick={() => handleSuccessButtonClick(formValues)}\r\n        >\r\n          <IntlMessages id=\"challenges.modal.application-add\" />\r\n        </StateButton>\r\n        <Button color=\"danger\" onClick={() => setOpenModal(false)}>\r\n          <IntlMessages id=\"challenges.modal.application-cancel\" />\r\n        </Button>\r\n      </ModalFooter>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default JoinTeamModal;\r\n","/* eslint-disable camelcase */\r\nimport React, { useState } from 'react';\r\nimport { Button, Card, CardBody, CardTitle, Modal } from 'reactstrap';\r\nimport JoinTeamModal from '../../../../components/application/JoinTeamModal';\r\n\r\nimport { Separator } from '../../../../components/common/CustomBootstrap';\r\nimport StateButton from '../../../../components/StateButton';\r\nimport instance from '../../../../helpers/axiosInstance';\r\n\r\nimport IntlMessages from '../../../../helpers/IntlMessages';\r\nimport { getProfileData } from '../../../../helpers/Utils';\r\n\r\nconst CompleteStatus = ({ completePercentage, id }) => {\r\n  const [openJoinTeam, setOpenJoinTeam] = useState(false);\r\n\r\n  const { user_id } = getProfileData();\r\n\r\n  const handleSubmit = async () => {\r\n    return new Promise((success, failed) => {\r\n      if (completePercentage < 100) {\r\n        failed('Please Complete the Form!');\r\n      }\r\n\r\n      const addJudge = async () => {\r\n        try {\r\n          const response = await instance({\r\n            method: 'POST',\r\n            url: '/addparticpant',\r\n            data: {\r\n              hackathon_id: id,\r\n              status: '0',\r\n              user_id,\r\n            },\r\n          });\r\n\r\n          const { data } = response;\r\n          if (data.success) {\r\n            success('Application submitted successfully!');\r\n          } else {\r\n            failed('Failed to Submit Application!');\r\n          }\r\n        } catch (error) {\r\n          console.log(error);\r\n          failed('Failed to update hackathon!');\r\n        }\r\n      };\r\n\r\n      addJudge();\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardBody className=\"text-center\">\r\n          <CardTitle>\r\n            <h2 className=\"lead\">\r\n              <IntlMessages id=\"challenges.application-not-submitted\" />\r\n            </h2>\r\n            <Separator className=\"mb-5\" />\r\n          </CardTitle>\r\n          <p>\r\n            <IntlMessages id=\"challenges.application-filled\" />\r\n          </p>\r\n          <h3 className=\"lead\">{completePercentage}%</h3>\r\n          <p>\r\n            <IntlMessages id=\"challenges.fill-complete-message\" />\r\n          </p>\r\n\r\n          <StateButton\r\n            id=\"submit-application\"\r\n            color=\"primary\"\r\n            onClick={handleSubmit}\r\n            className={completePercentage >= 100 ? '' : 'disabled'}\r\n            successNext={() => {\r\n              window.location.href = '/';\r\n            }}\r\n          >\r\n            <IntlMessages id=\"challenges.submit-individual-button\" />\r\n          </StateButton>\r\n\r\n          <Separator className=\"mt-4 mb-4\" />\r\n\r\n          <Button outline onClick={() => setOpenJoinTeam(true)}>\r\n            <IntlMessages id=\"challenges.join-team-button\" />\r\n          </Button>\r\n\r\n          <Modal\r\n            isOpen={openJoinTeam}\r\n            toggle={() => setOpenJoinTeam(!openJoinTeam)}\r\n          >\r\n            <JoinTeamModal setOpenModal={setOpenJoinTeam} />\r\n          </Modal>\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CompleteStatus;\r\n","import React from 'react';\r\nimport { CustomInput } from 'reactstrap';\r\nimport { Colxx } from '../../../../components/common/CustomBootstrap';\r\nimport StateButton from '../../../../components/StateButton';\r\nimport IntlMessages from '../../../../helpers/IntlMessages';\r\n\r\nconst StepFour = () => {\r\n  const handleSuccessButtonClick = () => {\r\n    return new Promise((success) => {\r\n      setTimeout(() => {\r\n        success('Everything went right!');\r\n      }, 1400);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"wizard-basic-step m-4 pt-4\">\r\n      <h6 className=\"lead\">\r\n        <IntlMessages id=\"challenges.terms-and-conditions-title\" />\r\n      </h6>\r\n      <p>\r\n        <IntlMessages id=\"challenges.terms-and-conditions-text\" />\r\n      </p>\r\n\r\n      <CustomInput\r\n        type=\"checkbox\"\r\n        label={<IntlMessages id=\"challenges.terms-and-conditions\" />}\r\n      />\r\n\r\n      <Colxx xxs=\"12\" className=\"text-center my-4\">\r\n        <StateButton\r\n          id=\"step-one-button\"\r\n          color=\"primary\"\r\n          onClick={handleSuccessButtonClick}\r\n        >\r\n          <IntlMessages id=\"forms.submit\" />\r\n        </StateButton>\r\n      </Colxx>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StepFour;\r\n","import React from 'react';\r\nimport { Badge } from 'reactstrap';\r\nimport IntlMessages from '../../helpers/IntlMessages';\r\n\r\nconst DataDisplay = ({ messageId, status }) => {\r\n  return (\r\n    <div className=\"w-50\">\r\n      <span\r\n        className={`mb-0 mr-2 ${\r\n          status ? 'simple-icon-check ' : 'simple-icon-exclamation'\r\n        }`}\r\n      />\r\n      <Badge\r\n        color={status ? 'outline-success' : 'outline-danger'}\r\n        pill\r\n        className=\"m-2 text-center\"\r\n      >\r\n        <IntlMessages id={messageId} />\r\n      </Badge>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DataDisplay;\r\n","import React from 'react';\r\nimport { Separator } from '../../../../../components/common/CustomBootstrap';\r\nimport DataDisplay from '../../../../../containers/application/DataDisplay';\r\nimport IntlMessages from '../../../../../helpers/IntlMessages';\r\n\r\nconst Section = ({ data, userData }) => {\r\n  return (\r\n    <>\r\n      <h6 className=\"lead\">\r\n        <IntlMessages id=\"challenges.about\" />\r\n      </h6>\r\n      <p>\r\n        <IntlMessages id=\"challenges.about-text\" />\r\n      </p>\r\n      <div className=\"row\">\r\n        {data.map((item) => {\r\n          let status;\r\n          if (userData[item.databaseKey]) {\r\n            status = true;\r\n          } else {\r\n            status = false;\r\n          }\r\n          return (\r\n            <DataDisplay\r\n              key={item.id}\r\n              messageId={item.messageId}\r\n              status={status}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n      <Separator className=\"my-4\" />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport { Card, CardBody, CardTitle, CustomInput } from 'reactstrap';\r\nimport {\r\n  Colxx,\r\n  Separator,\r\n} from '../../../../components/common/CustomBootstrap';\r\nimport StateButton from '../../../../components/StateButton';\r\nimport { hackthonApplication } from '../../../../constants/defaultValues';\r\nimport IntlMessages from '../../../../helpers/IntlMessages';\r\nimport { getProfileData } from '../../../../helpers/Utils';\r\nimport Section from './components/section';\r\n\r\nconst StepOne = ({ hackData }) => {\r\n  const { hackathon } = hackData;\r\n\r\n  const userData = getProfileData();\r\n\r\n  const applicationData = JSON.parse(hackathon.application) || {\r\n    about: [],\r\n    contact: [],\r\n    education: [],\r\n    experience: [],\r\n    online_profiles: [],\r\n  };\r\n\r\n  const applicationAboutData = hackthonApplication.about.filter(({ value }) =>\r\n    applicationData.about.includes(value)\r\n  );\r\n  const applicationContactData = hackthonApplication.contact.filter(\r\n    ({ value }) => applicationData.contact.includes(value)\r\n  );\r\n  const applicationEducationData = hackthonApplication.education.filter(\r\n    ({ value }) => applicationData.education.includes(value)\r\n  );\r\n  const applicationExpericeData = hackthonApplication.experience.filter(\r\n    ({ value }) => applicationData.experience.includes(value)\r\n  );\r\n  const applicationOnlineProfileData = hackthonApplication.online_profiles.filter(\r\n    ({ value }) => applicationData.online_profiles.includes(value)\r\n  );\r\n\r\n  const handleSuccessButtonClick = () => {\r\n    return new Promise((success) => {\r\n      setTimeout(() => {\r\n        success('Everything went right!');\r\n      }, 1400);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"wizard-basic-step m-4 pt-4\">\r\n      <Card className=\"mb-4\" color=\"secondary\">\r\n        <CardBody>\r\n          <CardTitle className=\"d-flex justify-content-between\">\r\n            <IntlMessages id=\"challenges.step-1\" />\r\n          </CardTitle>\r\n        </CardBody>\r\n      </Card>\r\n      <h2 className=\"lead\">{hackathon.name}</h2>\r\n      <p>\r\n        <IntlMessages id=\"challenges.sub-title\" />\r\n      </p>\r\n      <Separator className=\"mb-2\" />\r\n\r\n      {applicationAboutData.length ? (\r\n        <Section data={applicationAboutData} userData={userData} />\r\n      ) : null}\r\n\r\n      {applicationExpericeData.length ? (\r\n        <Section data={applicationExpericeData} userData={userData} />\r\n      ) : null}\r\n\r\n      {applicationEducationData.length ? (\r\n        <Section data={applicationEducationData} userData={userData} />\r\n      ) : null}\r\n\r\n      {applicationOnlineProfileData.length ? (\r\n        <Section data={applicationOnlineProfileData} userData={userData} />\r\n      ) : null}\r\n\r\n      {applicationContactData.length ? (\r\n        <Section data={applicationContactData} userData={userData} />\r\n      ) : null}\r\n\r\n      <CustomInput\r\n        type=\"checkbox\"\r\n        label={<IntlMessages id=\"challenges.terms-and-conditions\" />}\r\n      />\r\n      <Colxx xxs=\"12\" className=\"text-center my-4\">\r\n        <StateButton\r\n          id=\"step-one-button\"\r\n          color=\"primary\"\r\n          onClick={handleSuccessButtonClick}\r\n        >\r\n          <IntlMessages id=\"forms.submit\" />\r\n        </StateButton>\r\n      </Colxx>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StepOne;\r\n","import React from 'react';\r\nimport { Card, CardBody, CardTitle, CustomInput, InputGroup } from 'reactstrap';\r\nimport { Colxx } from '../../../../components/common/CustomBootstrap';\r\nimport StateButton from '../../../../components/StateButton';\r\nimport IntlMessages from '../../../../helpers/IntlMessages';\r\n\r\nconst StepThree = () => {\r\n  const handleSuccessButtonClick = () => {\r\n    return new Promise((success) => {\r\n      setTimeout(() => {\r\n        success('Everything went right!');\r\n      }, 1400);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"wizard-basic-step m-4 pt-4\">\r\n      <Card className=\"mb-4\" color=\"secondary\">\r\n        <CardBody>\r\n          <CardTitle className=\"d-flex justify-content-between mt-2\">\r\n            <IntlMessages id=\"challenges.step-3\" />\r\n          </CardTitle>\r\n        </CardBody>\r\n      </Card>\r\n\r\n      <div className=\"mb-4\">\r\n        <h6 className=\"lead\">\r\n          <IntlMessages id=\"challenges.step-3-question-1\" />\r\n        </h6>\r\n        <InputGroup>\r\n          <CustomInput\r\n            type=\"radio\"\r\n            name=\"participatedInHack\"\r\n            id=\"Yes\"\r\n            className=\"p-4\"\r\n            label=\"Yes\"\r\n          />\r\n          <CustomInput\r\n            type=\"radio\"\r\n            name=\"participatedInHack\"\r\n            id=\"No\"\r\n            className=\"p-4\"\r\n            label=\"No\"\r\n          />\r\n        </InputGroup>\r\n      </div>\r\n\r\n      <Colxx xxs=\"12\" className=\"text-center my-4\">\r\n        <StateButton\r\n          id=\"step-one-button\"\r\n          color=\"primary\"\r\n          onClick={handleSuccessButtonClick}\r\n        >\r\n          <IntlMessages id=\"forms.submit\" />\r\n        </StateButton>\r\n      </Colxx>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StepThree;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Rater from 'react-rater';\r\nimport 'react-rater/lib/react-rater.css';\r\n\r\nconst Rating = (props) => (\r\n  <Rater {...props}>\r\n    <Star />\r\n  </Rater>\r\n);\r\n\r\nconst Star = (props) => {\r\n  const starProps = { ...props };\r\n  const nameMap = {\r\n    isDisabled: 'is-disabled',\r\n    isActive: 'is-active',\r\n    isActiveHalf: 'is-active-half',\r\n    willBeActive: 'will-be-active',\r\n  };\r\n\r\n  const className = Object.keys(nameMap)\r\n    // eslint-disable-next-line\r\n    .filter((prop) => (delete starProps[prop], props[prop]))\r\n    .map((prop) => nameMap[prop])\r\n    .join(' ');\r\n  return <div className={`react-rater-star ${className}`} {...starProps} />;\r\n};\r\n\r\nStar.defaultProps = {\r\n  willBeActive: false,\r\n  isActive: false,\r\n  isActiveHalf: false,\r\n  isDisabled: false,\r\n};\r\n\r\nStar.propTypes = {\r\n  isActive: PropTypes.bool,\r\n  isActiveHalf: PropTypes.bool,\r\n  willBeActive: PropTypes.bool,\r\n  isDisabled: PropTypes.bool,\r\n};\r\n\r\nexport default Rating;\r\n","import React, { useState } from 'react';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport { Card, CardBody, CardTitle } from 'reactstrap';\r\nimport { Colxx } from '../../../../components/common/CustomBootstrap';\r\nimport Rating from '../../../../components/common/Rating';\r\nimport StateButton from '../../../../components/StateButton';\r\nimport IntlMessages from '../../../../helpers/IntlMessages';\r\n\r\nconst quillModules = {\r\n  toolbar: [\r\n    ['bold', 'italic', 'underline', 'strike', 'blockquote'],\r\n    [\r\n      { list: 'ordered' },\r\n      { list: 'bullet' },\r\n      { indent: '-1' },\r\n      { indent: '+1' },\r\n    ],\r\n    ['link', 'image'],\r\n    ['clean'],\r\n  ],\r\n};\r\n\r\nconst quillFormats = [\r\n  'header',\r\n  'bold',\r\n  'italic',\r\n  'underline',\r\n  'strike',\r\n  'blockquote',\r\n  'list',\r\n  'bullet',\r\n  'indent',\r\n  'link',\r\n  'image',\r\n];\r\n\r\nconst StepTwo = () => {\r\n  const [answer1, setAnswer1] = useState('');\r\n  const [answer2, setAnswer2] = useState('');\r\n  const [answer3, setAnswer3] = useState('');\r\n  const [answer4, setAnswer4] = useState(0);\r\n\r\n  const handleSuccessButtonClick = () => {\r\n    return new Promise((success) => {\r\n      setTimeout(() => {\r\n        success('Everything went right!');\r\n      }, 1400);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"wizard-basic-step m-4 pt-4\">\r\n      <Card className=\"mb-4\" color=\"secondary\">\r\n        <CardBody>\r\n          <CardTitle className=\"d-flex justify-content-between mt-2\">\r\n            <IntlMessages id=\"challenges.step-2\" />\r\n          </CardTitle>\r\n        </CardBody>\r\n      </Card>\r\n      <div className=\"mb-4\">\r\n        <h6>\r\n          <IntlMessages id=\"challenges.step-2-question-1\" />\r\n        </h6>\r\n        <ReactQuill\r\n          theme=\"snow\"\r\n          value={answer1}\r\n          onChange={(val) => setAnswer1(val)}\r\n          modules={quillModules}\r\n          formats={quillFormats}\r\n        />\r\n      </div>\r\n      <div className=\"mb-4\">\r\n        <h6>\r\n          <IntlMessages id=\"challenges.step-2-question-2\" />\r\n        </h6>\r\n        <ReactQuill\r\n          theme=\"snow\"\r\n          value={answer2}\r\n          onChange={(val) => setAnswer2(val)}\r\n          modules={quillModules}\r\n          formats={quillFormats}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"mb-4\">\r\n        <h6>\r\n          <IntlMessages id=\"challenges.step-2-question-3\" />\r\n        </h6>\r\n        <ReactQuill\r\n          theme=\"snow\"\r\n          value={answer3}\r\n          onChange={(val) => setAnswer3(val)}\r\n          modules={quillModules}\r\n          formats={quillFormats}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"mb-4\">\r\n        <h6>\r\n          <IntlMessages id=\"challenges.step-2-question-4\" />\r\n        </h6>\r\n        <Rating\r\n          total={5}\r\n          rating={answer4}\r\n          onRate={({ rating }) => setAnswer4(rating)}\r\n        />\r\n      </div>\r\n\r\n      <Colxx xxs=\"12\" className=\"text-center my-4\">\r\n        <StateButton\r\n          id=\"step-one-button\"\r\n          color=\"primary\"\r\n          onClick={handleSuccessButtonClick}\r\n        >\r\n          <IntlMessages id=\"forms.submit\" />\r\n        </StateButton>\r\n      </Colxx>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StepTwo;\r\n","/* eslint-disable no-param-reassign */\r\nimport React, { useState } from 'react';\r\nimport { Step, Steps, Wizard } from 'react-albus';\r\nimport { Card, CardBody, Row } from 'reactstrap';\r\nimport { Colxx } from '../../../../components/common/CustomBootstrap';\r\nimport BottomNavigation from '../../../../components/wizard/BottomNavigation';\r\nimport IntlMessages from '../../../../helpers/IntlMessages';\r\nimport useFetch from '../../../../hooks/use-fetch';\r\n\r\nimport CompleteStatus from './complete-status';\r\nimport StepFour from './step-four';\r\nimport StepOne from './step-one';\r\nimport StepThree from './step-three';\r\nimport StepTwo from './step-two';\r\n\r\nconst HackWizard = ({ match }) => {\r\n  const { id } = match.params;\r\n\r\n  const [completePercentage, setCompletePercentage] = useState(0);\r\n\r\n  const onClickNext = (goToNext, steps, step) => {\r\n    step.isDone = true;\r\n    if (steps.length - 1 <= steps.indexOf(step)) {\r\n      return;\r\n    }\r\n\r\n    if (completePercentage + 25 >= 99) {\r\n      setCompletePercentage(100);\r\n    } else {\r\n      setCompletePercentage(completePercentage + 25);\r\n    }\r\n\r\n    goToNext();\r\n  };\r\n\r\n  const onClickPrev = (goToPrev, steps, step) => {\r\n    if (steps.indexOf(step) <= 0) {\r\n      return;\r\n    }\r\n\r\n    if (completePercentage - 33 <= 0) {\r\n      setCompletePercentage(0);\r\n    } else {\r\n      setCompletePercentage(completePercentage - 33);\r\n    }\r\n\r\n    goToPrev();\r\n  };\r\n\r\n  const { data, loading } = useFetch(`/getdetails/${id}`, false, 'getdetails');\r\n\r\n  if (loading) return <div className=\"loading\" />;\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Colxx xs=\"12\" md=\"8\" className=\"mb-4\">\r\n          <Card>\r\n            <CardBody className=\"wizard wizard-default \">\r\n              <Wizard>\r\n                <Steps>\r\n                  <Step\r\n                    id=\"step1\"\r\n                    name={<IntlMessages id=\"challenges.step-1-title\" />}\r\n                  >\r\n                    <StepOne hackData={data} />\r\n                  </Step>\r\n\r\n                  <Step\r\n                    id=\"step2\"\r\n                    name={<IntlMessages id=\"challenges.step-2-title\" />}\r\n                  >\r\n                    <StepTwo hackData={data} />\r\n                  </Step>\r\n\r\n                  <Step\r\n                    id=\"step3\"\r\n                    name={<IntlMessages id=\"challenges.step-3-title\" />}\r\n                  >\r\n                    <StepThree hackData={data} />\r\n                  </Step>\r\n\r\n                  <Step\r\n                    id=\"step4\"\r\n                    name={<IntlMessages id=\"challenges.step-4-title\" />}\r\n                  >\r\n                    <StepFour />\r\n                  </Step>\r\n\r\n                  <Step id=\"step5\" hideTopNav>\r\n                    <div className=\"wizard-basic-step text-center m-4 pt-4\">\r\n                      <h2 className=\"mb-2\">\r\n                        <IntlMessages id=\"challenges.content-thanks\" />\r\n                      </h2>\r\n                      <p>\r\n                        <i className=\"simple-icon-check h2\" />\r\n                      </p>\r\n                      <p>\r\n                        <IntlMessages id=\"challenges.application-submitted\" />\r\n                      </p>\r\n                    </div>\r\n                  </Step>\r\n                </Steps>\r\n\r\n                <BottomNavigation\r\n                  onClickNext={onClickNext}\r\n                  onClickPrev={onClickPrev}\r\n                  className=\"justify-content-between m-4\"\r\n                  prevLabel={<IntlMessages id=\"forms.previous\" />}\r\n                  nextLabel={<IntlMessages id=\"forms.next\" />}\r\n                />\r\n              </Wizard>\r\n            </CardBody>\r\n          </Card>\r\n        </Colxx>\r\n        <Colxx xs=\"12\" md=\"4\">\r\n          <CompleteStatus completePercentage={completePercentage} id={id} />\r\n        </Colxx>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HackWizard;\r\n"],"sourceRoot":""}