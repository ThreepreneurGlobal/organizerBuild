{"version":3,"sources":["containers/navs/Breadcrumb.js","components/StateButton.js","hooks/use-request.js","components/cards/FaqCard.js","components/application/AddFaqModal.js","components/application/FaqList.js","views/app/Challenges/faq-view.js"],"names":["getMenuTitle","sub","adminRoot","id","getUrl","path","split","BreadcrumbItems","match","substr","paths","filter","Boolean","length","indexOf","x","className","map","index","active","to","BreadcrumbContainer","heading","StateButton","color","size","children","onClick","next","successNext","useState","status","setStatus","message","setMessage","messageShow","setMessageShow","classnames","then","res","catch","err","finally","setTimeout","disabled","placement","isOpen","target","useRequest","url","method","data","headers","nextSuccess","nextError","responseData","setData","loading","setLoading","error","setError","a","instance","response","success","log","FaqCard","setShowIndex","showingIndex","item","aria-expanded","question","dangerouslySetInnerHTML","__html","answer","connect","authUser","applicationData","accessToken","faqs","getFAQAction","getFAQ","setOpenAddModal","hackathon_id","values","setValues","Authorization","NotificationManager","wait","password","doRequest","handleChange","event","key","value","ModalHeader","IntlMessages","ModalBody","FormGroup","Label","Input","type","onChange","rows","ModalFooter","Button","useEffect","AppError","Card","CardBody","role","Faq","params","history","useHistory","openAddModal","tnc","setTnc","Row","xxs","Breadcrumb","md","Modal","toggle","name","style","paddingBottom","overflow","maxHeight","checked","label","Promise","failed","updateProfile","submit_status","push","otnc","document","getElementById","console","updateOtnc"],"mappings":"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","file":"static/js/challenges-faq-view.63ddf3af.chunk.js","sourcesContent":["/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport IntlMessages from '../../helpers/IntlMessages';\nimport { adminRoot } from '../../constants/defaultValues';\n\nconst getMenuTitle = (sub) => {\n  if (`/${sub}` === adminRoot) return <IntlMessages id=\"menu.home\" />;\n  return <IntlMessages id={`menu.${sub}`} />;\n};\n\nconst getUrl = (path, sub) => {\n  return path.split(sub)[0] + sub;\n};\n\nconst BreadcrumbContainer = ({ heading, match }) => {\n  return (\n    <>\n      {heading && (\n        <h1>\n          <IntlMessages id={heading} />\n        </h1>\n      )}\n      {match ? <BreadcrumbItems match={match} /> : null}\n    </>\n  );\n};\n\nconst BreadcrumbItems = ({ match }) => {\n  const path = match.path.substr(1);\n  let paths = path.split('/').filter(Boolean);\n\n  if (paths[paths.length - 1].indexOf(':') > -1) {\n    paths = paths.filter((x) => x.indexOf(':') === -1);\n  }\n  return (\n    <>\n      <Breadcrumb className=\"pt-0 breadcrumb-container d-none d-sm-block d-lg-inline-block\">\n        {paths.map((sub, index) => {\n          return (\n            <BreadcrumbItem key={index} active={paths.length === index + 1}>\n              {paths.length !== index + 1 ? (\n                <NavLink to={`/${getUrl(path, sub, index)}`}>\n                  {getMenuTitle(sub)}\n                </NavLink>\n              ) : (\n                getMenuTitle(sub)\n              )}\n            </BreadcrumbItem>\n          );\n        })}\n      </Breadcrumb>\n    </>\n  );\n};\n\nexport default BreadcrumbContainer;\n","import React, { useState } from 'react';\nimport { Button, Popover, PopoverBody } from 'reactstrap';\nimport classnames from 'classnames';\n\nconst StateButton = ({\n  id,\n  className,\n  color,\n  size,\n  children,\n  onClick,\n  next,\n  successNext,\n}) => {\n  const [status, setStatus] = useState('default');\n  const [message, setMessage] = useState('');\n  const [messageShow, setMessageShow] = useState(false);\n\n  const handleOnClick = () => {\n    setStatus('processing');\n\n    onClick()\n      .then((res) => {\n        setMessage(res);\n        setStatus('success');\n        if (successNext) {\n          successNext();\n        }\n      })\n      .catch((err) => {\n        setMessage(err);\n        setStatus('fail');\n      })\n      .finally(() => {\n        setMessageShow(true);\n        setTimeout(() => {\n          setStatus('default');\n          setMessageShow(false);\n          if (next) {\n            next();\n          }\n        }, 3000);\n      });\n  };\n\n  return (\n    <span>\n      <Button\n        id={id}\n        className={`btn-multiple-state  ${className}  ${classnames({\n          'show-spinner': status === 'processing',\n          'show-success': status === 'success',\n          'show-fail': status === 'fail',\n        })}`}\n        size={size}\n        color={color}\n        onClick={handleOnClick}\n        disabled={status !== 'default'}\n      >\n        <Popover placement=\"top\" isOpen={messageShow} target={id}>\n          <PopoverBody>{message}</PopoverBody>\n        </Popover>\n        <span className=\"spinner d-inline-block\">\n          <span className=\"bounce1\" />\n          <span className=\"bounce2\" />\n          <span className=\"bounce3\" />\n        </span>\n        <span className=\"icon success\">\n          <i className=\"simple-icon-check\" />\n        </span>\n        <span className=\"icon fail\">\n          <i className=\"simple-icon-exclamation\" />\n        </span>\n        <span className=\"label\">{children}</span>\n      </Button>\n    </span>\n  );\n};\n\nexport default StateButton;\n","import { useState } from 'react';\nimport instance from '../helpers/axiosInstance';\nimport { log } from '../helpers/Utils';\n\nconst useRequest = ({ url, method, data, headers, nextSuccess, nextError }) => {\n  const [responseData, setData] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const doRequest = async () => {\n    try {\n      setError(null);\n      setLoading(true);\n      const response = await instance({\n        url,\n        method,\n        headers,\n        data,\n      });\n\n      if (response.data.success) {\n        if (nextSuccess) {\n          nextSuccess();\n        }\n        setLoading(false);\n        setData(response.data.data);\n      } else {\n        if (nextError) {\n          nextError(response.data.error);\n        }\n        setLoading(false);\n        setError(response.data.error);\n      }\n    } catch (err) {\n      log(err);\n      setLoading(false);\n      setError(err);\n    }\n  };\n\n  return [doRequest, loading, error, responseData];\n};\n\nexport default useRequest;\n","/* eslint-disable react/no-danger */\nimport React from 'react';\nimport { Button, Card, Collapse } from 'reactstrap';\n\nconst FaqCard = ({ index, setShowIndex, showingIndex, item }) => {\n  return (\n    <Card className=\"d-flex mb-2\">\n      <div className=\"d-flex flex-grow-1 min-width-zero\">\n        <Button\n          color=\"link\"\n          className=\"card-body btn-empty btn-link list-item-heading text-left text-one\"\n          onClick={() => setShowIndex(index)}\n          aria-expanded={showingIndex === index}\n        >\n          {item.question}\n        </Button>\n      </div>\n      <Collapse isOpen={showingIndex === index}>\n        <div\n          className=\"card-body accordion-content pt-0\"\n          dangerouslySetInnerHTML={{ __html: item.answer }}\n        />\n      </Collapse>\n    </Card>\n  );\n};\n\nexport default FaqCard;\n","/* eslint-disable camelcase */\n/* eslint-disable prefer-promise-reject-errors */\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Button,\n  FormGroup,\n  Input,\n  Label,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n} from 'reactstrap';\nimport IntlMessages from '../../helpers/IntlMessages';\nimport { wait } from '../../helpers/Utils';\nimport useRequest from '../../hooks/use-request';\nimport { getFAQ } from '../../redux/actions';\nimport { NotificationManager } from '../common/react-notifications';\n\nconst AddFaqModal = ({ setOpenAddModal, id, accessToken, getFAQAction }) => {\n  const [values, setValues] = useState({\n    hackathon_id: id,\n    question: '',\n    answer: '',\n  });\n\n  const [doRequest, loading] = useRequest({\n    url: '/addFaqs',\n    method: 'POST',\n    headers: {\n      Authorization: accessToken,\n    },\n    data: { faqs: { ...values } },\n    nextSuccess: () => {\n      NotificationManager.success(\n        'FAQ added Successfully',\n        'Application Update Success',\n        3000,\n        null,\n        null,\n        ''\n      );\n      getFAQAction(accessToken, id);\n      wait(1200, () => {\n        setValues({ ...values, password: 'null' });\n        setOpenAddModal(false);\n      });\n    },\n    nextError: (error) => {\n      NotificationManager.error(\n        error,\n        'Application Update Error',\n        3000,\n        null,\n        null,\n        ''\n      );\n    },\n  });\n\n  const handleChange = (event, key, value = false) => {\n    setValues({\n      ...values,\n      [key]: value ? event : event.target.value,\n    });\n  };\n\n  const handleSubmit = () => {\n    doRequest();\n  };\n\n  return (\n    <>\n      <ModalHeader>\n        <h2 className=\"lead\">\n          <IntlMessages id=\"challenges.modal.application-add-faq-title\" />\n        </h2>\n      </ModalHeader>\n\n      <ModalBody>\n        <FormGroup>\n          <Label>\n            <IntlMessages id=\"challenges.modal.faq\" />\n          </Label>\n          <Input\n            type=\"text\"\n            value={values.question}\n            onChange={(event) => handleChange(event, 'question')}\n          />\n        </FormGroup>\n\n        <FormGroup>\n          <Label>\n            <IntlMessages id=\"challenges.modal.faq-description\" />\n          </Label>\n          <Input\n            type=\"textarea\"\n            rows=\"6\"\n            value={values.answer}\n            onChange={(event) => handleChange(event, 'answer')}\n          />\n        </FormGroup>\n      </ModalBody>\n\n      <ModalFooter>\n        <Button\n          id=\"add-faq-button\"\n          color=\"primary\"\n          className={`btn-shadow btn-multiple-state ${\n            loading ? 'show-spinner' : ''\n          }`}\n          onClick={() => handleSubmit(values)}\n        >\n          <span className=\"spinner d-inline-block\">\n            <span className=\"bounce1\" />\n            <span className=\"bounce2\" />\n            <span className=\"bounce3\" />\n          </span>\n          <span className=\"label\">\n            <IntlMessages id=\"challenges.modal.application-add\" />\n          </span>\n        </Button>\n        <Button color=\"danger\" onClick={() => setOpenAddModal(false)}>\n          <IntlMessages id=\"challenges.modal.application-cancel\" />\n        </Button>\n      </ModalFooter>\n    </>\n  );\n};\n\nconst mapStateToProps = ({ authUser, applicationData }) => {\n  const { accessToken } = authUser;\n  const { faqs, loading, error } = applicationData;\n  return { accessToken, faqs, loading, error };\n};\n\nexport default connect(mapStateToProps, {\n  getFAQAction: getFAQ,\n})(AddFaqModal);\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Card, CardBody } from 'reactstrap';\nimport AppError from '../../helpers/AppError';\nimport IntlMessages from '../../helpers/IntlMessages';\nimport { getFAQ } from '../../redux/actions';\n\nimport FaqCard from '../cards/FaqCard';\n\nconst FaqList = ({ id, getFAQAction, accessToken, faqs, loading, error }) => {\n  const [showingIndex, setShowIndex] = useState(0);\n\n  useEffect(() => {\n    getFAQAction(accessToken, id);\n  }, []);\n\n  if (error) throw new AppError(error);\n\n  return (\n    <>\n      <Card className=\"mb-4\">\n        <CardBody>\n          <h3 className=\"h3\">\n            <IntlMessages id=\"challenges.added-faqs\" />\n          </h3>\n        </CardBody>\n      </Card>\n\n      {/* <pre>{JSON.stringify(faqs, null, 2)}</pre> */}\n\n      {loading ? (\n        <div className=\"d-flex justify-content-center m-4\">\n          <div className=\"loading\" role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n          </div>\n        </div>\n      ) : (\n        <>\n          {faqs.map((item, index) => (\n            <FaqCard\n              // eslint-disable-next-line react/no-array-index-key\n              key={`faqItem_${index}`}\n              item={item}\n              index={index}\n              showingIndex={showingIndex}\n              setShowIndex={setShowIndex}\n            />\n          ))}\n        </>\n      )}\n    </>\n  );\n};\n\nconst mapStateToProps = ({ authUser, applicationData }) => {\n  const { accessToken } = authUser;\n  const { faqs, loading, error } = applicationData;\n  return { accessToken, faqs, loading, error };\n};\n\nexport default connect(mapStateToProps, {\n  getFAQAction: getFAQ,\n})(FaqList);\n","/* eslint-disable prefer-promise-reject-errors */\nimport React, { useState } from 'react';\nimport {\n  Button,\n  Card,\n  CardBody,\n  // CustomInput,\n  FormGroup,\n  Modal,\n  Row,\n  Label,\n  Input,\n} from 'reactstrap';\nimport { useHistory } from 'react-router-dom';\n\nimport AddFaqModal from '../../../components/application/AddFaqModal';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport { adminRoot } from '../../../constants/defaultValues';\n\nimport Breadcrumb from '../../../containers/navs/Breadcrumb';\nimport AppError from '../../../helpers/AppError';\nimport IntlMessages from '../../../helpers/IntlMessages';\n\nimport FaqList from '../../../components/application/FaqList';\nimport StateButton from '../../../components/StateButton';\nimport instance from '../../../helpers/axiosInstance';\n\nconst Faq = ({ match }) => {\n  const { id } = match.params;\n\n  if (!id) throw new AppError('Please provide a Hackathon ID');\n\n  const history = useHistory();\n\n  const [openAddModal, setOpenAddModal] = useState(false);\n\n  const [tnc, setTnc] = useState(false);\n\n  const handleTncClick = () => {\n    setTnc(!tnc);\n  }\n\n  const handleSubmitHackathon = () => {\n    return new Promise((success, failed) => {\n      const updateProfile = async () => {\n        try {\n          const response = await instance({\n            method: 'POST',\n            url: '/updateHackathon',\n            data: { id, submit_status: 1 },\n          });\n\n          const { data } = response;\n          if (data.success && tnc) {\n            success('Hackathon submitted successfully!');\n            history.push(`${adminRoot}/dashboard`)\n          } else {\n            failed('Failed to update hackathon!');\n          }\n        } catch {\n          failed('Failed to update hackathon!');\n        }\n      };\n\n      const otnc = document.getElementById(\"otnc\").value;\n      console.log(otnc);\n\n      const updateOtnc = async () => {\n        try {\n          const response = await instance({\n            method: 'POST',\n            url: '/updateHackathon',\n            data: { id, tnc: otnc },\n          });\n\n          const { data } = response;\n          if (data.success && tnc) {\n            success('Hackathon submitted successfully!');\n            history.push(`${adminRoot}/dashboard`)\n          } else {\n            failed('Failed to update hackathon!');\n          }\n        } catch {\n          failed('Failed to update hackathon!');\n        }\n      };\n\n      updateProfile();\n      updateOtnc();\n    });\n  };\n\n  const customStyle = {\n    overflow: 'auto',\n    maxHeight: '8rem'\n  }\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n          <Breadcrumb heading=\"menu.faq\" match={match} />\n          <Separator className=\"mb-5\" />\n        </Colxx>\n      </Row>\n\n      <Row className=\"justify-content-center\">\n        <Colxx xxs=\"12\" md=\"6\">\n          <FaqList id={id} />\n        </Colxx>\n\n        <Colxx xxs=\"12\" md=\"6\">\n          <Card>\n            <CardBody>\n              <Row className=\"justify-content-center m-1\">\n                <Button onClick={() => setOpenAddModal(true)}>\n                  <IntlMessages id=\"challenges.add-faq-button\" />\n                </Button>\n              </Row>\n{/* \n              <Row className=\"justify-content-center m-2\">\n                <CustomInput\n                  type=\"checkbox\"\n                  label={<IntlMessages id=\"challenges.add-faq-checkbox\" />}\n                />\n              </Row> */}\n\n              <Modal\n                isOpen={openAddModal}\n                toggle={() => setOpenAddModal(!openAddModal)}\n              >\n                <AddFaqModal setOpenAddModal={setOpenAddModal} id={id} />\n              </Modal>\n            </CardBody>\n          </Card>\n        </Colxx>\n      </Row>\n\n      <Row className=\"mt-2\">\n        <Colxx>\n        <Card>\n          <CardBody>\n          <FormGroup>\n                <Label>\n                  <h2>Organiser&apos;s Terms & Conditions</h2>\n                </Label>\n                <Input\n                  type=\"textarea\"\n                  id=\"otnc\"\n                  className=\"form-control\"\n                  name=\"about\"\n                  rows=\"6\"\n                />\n              </FormGroup>\n          </CardBody>\n        </Card>\n        </Colxx>\n      </Row>\n\n      <Row className=\"mt-2\">\n            <Colxx>\n              <Card>\n                <CardBody style={{paddingBottom: '1rem'}}>\n                  <div style={customStyle}>\n                    <b>Terms And Conditions</b><br />\n                    General Terms :\n\n                    Read all ours terms below moreover we can change our terms at any time without any prior notice. And management decision will be final in any legal issue.\n\n                    Terms Of Service :\n\n                    Binary theme  provide bootstrap themes, asp .net themes , html themes, photos,  tutorials, etc. that can be downloaded for free.\n                    You can use our services for free to download content.\n                    You must not use our themes and contents that we provide to download for illegal or unethical purpose.\n                    We do not claim all content which we provide is fully ours, we can use other authors free/open source content and provide you to download. The original authors hold right of their work and you have to check their licenses for usage.\n                    Privacy Policy :\n\n                    Your Privacy is important to us. We assure you that we do not sell your information to any third party in any circumstances unless any law / legal body requires to do so.\n\n                    Disclaimer  &  Important Info:\n\n                    We try to use free / opensource resources / plugins for our templates, still please check respective plugin/resource licenses for Personal /commercial use. Whereas our specific code/work is free to use for personal and professional/commercial use.\n                    If you/user/any person  found any content on this website that violates any law or have any legal issues please contact us. We will remove that content after review.\n                    All images/photos we used if belongs to other authors, then that photos/images are the property of other authors and if any one use it , then the person( using that image) should ask for proper license from the original author or buy that image from original author.\n                    We kept original authors links in there respective file/works or give credits on our pages. If any author want to remove there work from our website please contact us (via contact page) or mail us at info@binarytheme.com\n                    We use and thank to other authors whose plugins or resources we used to power our templates/themes . And we give credits to authors. Please write us if you found your code used inappropriately. We remove or change code to make it proper. Thanks for using our website. Thanks to all authors whose codes we use and love.\n                    We use images that  are free to use , if you or anyone found any image improperly used then please write us , we will remove that image if found illegally used.\n                    All Posts/templates are posted/uploaded by independent authors,  if you find any legal issues  then please contact us via contact us page or mail us at info@binarytheme.com we will remove that post and ban that author after review.\n\n                    License & Credits\n\n                    License\n\n                    -Our Work is opensource and can be used for commercial and personal use . but please give us credits. That will help us to stay in this world . So please stay Fair. Thanks\n\n                    -Although we use opensource codes/ resources but still please check all plugins and other authors license if you are using for commercial purpose.\n\n                    -If any of you want to write about us then please links to our posts. This would be a help also which will let us stay in this world.\n\n                  </div>\n                  <div className=\"text-center mt-3 d-flex\">\n                    <input type='checkbox' onClick={handleTncClick} checked={tnc} label={<IntlMessages id=\"challenges.add-faq-tnc-checkbox\" />} />\n                    <span className='ml-2'>\n                     <b> <IntlMessages id=\"challenges.add-faq-tnc-checkbox\" /></b>\n                    </span>\n                  </div>\n                </CardBody>\n              </Card>\n            </Colxx>\n          </Row>\n\n      <Row>\n        <Colxx>\n          {/* <FormGroup className=\"text-center\">\n            <Button\n              color=\"primary\"\n              className=\"m-3\"\n              onClick={() =>\n                history.push(`${adminRoot}/challenges/Application/${id}`)\n              }\n            >\n              <IntlMessages id=\"forms.previous\" />\n            </Button>\n          </FormGroup> */}\n\n\n          <FormGroup className=\"text-center\">\n            <StateButton\n              id=\"submit-hackathons\"\n              onClick={handleSubmitHackathon}\n              color=\"primary\"\n              className=\"m-3\"\n            >\n              <IntlMessages id=\"forms.submit-hackathon\" />\n            </StateButton>\n          </FormGroup>\n        </Colxx>\n      </Row>\n    </>\n  );\n};\n\nexport default Faq;\n"],"sourceRoot":""}