{"version":3,"sources":["containers/navs/Breadcrumb.js","components/StateButton.js","views/app/Challenges/brands-view.js"],"names":["getMenuTitle","sub","adminRoot","id","getUrl","path","split","BreadcrumbItems","match","substr","paths","filter","Boolean","length","indexOf","x","className","map","index","active","to","BreadcrumbContainer","heading","StateButton","color","size","children","onClick","next","successNext","useState","status","setStatus","message","setMessage","messageShow","setMessageShow","classnames","then","res","catch","err","finally","setTimeout","disabled","placement","isOpen","target","imgbrowsed1","imgbrowsed2","Brands","uploaded","uploaded2","params","AppError","history","useHistory","data1","setData1","useEffect","fetch","json","data","console","log","getdetails","hackathon","theme","hackathon_logo","hackathon_cover_img","values","setValues","theme_color_code","colorHexCode","setColorHexCode","formData","FormData","append","handleUpload","event","a","delete","instance","url","method","headers","timeout","document","getElementById","innerHTML","window","location","reload","handleUpload2","handleSubmit","Promise","success","failed","response","wait","push","updateProfile","xxs","md","value","width","onChange","hex","key","handleChange","src","alt","height","type","name","accept","files","addonType","outline"],"mappings":"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","file":"static/js/challenges-brands-view.a2747d59.chunk.js","sourcesContent":["/* eslint-disable react/no-array-index-key */\r\nimport React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport IntlMessages from '../../helpers/IntlMessages';\r\nimport { adminRoot } from '../../constants/defaultValues';\r\n\r\nconst getMenuTitle = (sub) => {\r\n  if (`/${sub}` === adminRoot) return <IntlMessages id=\"menu.home\" />;\r\n  return <IntlMessages id={`menu.${sub}`} />;\r\n};\r\n\r\nconst getUrl = (path, sub) => {\r\n  return path.split(sub)[0] + sub;\r\n};\r\n\r\nconst BreadcrumbContainer = ({ heading, match }) => {\r\n  return (\r\n    <>\r\n      {heading && (\r\n        <h1>\r\n          <IntlMessages id={heading} />\r\n        </h1>\r\n      )}\r\n      {match ? <BreadcrumbItems match={match} /> : null}\r\n    </>\r\n  );\r\n};\r\n\r\nconst BreadcrumbItems = ({ match }) => {\r\n  const path = match.path.substr(1);\r\n  let paths = path.split('/').filter(Boolean);\r\n\r\n  if (paths[paths.length - 1].indexOf(':') > -1) {\r\n    paths = paths.filter((x) => x.indexOf(':') === -1);\r\n  }\r\n  return (\r\n    <>\r\n      <Breadcrumb className=\"pt-0 breadcrumb-container d-none d-sm-block d-lg-inline-block\">\r\n        {paths.map((sub, index) => {\r\n          return (\r\n            <BreadcrumbItem key={index} active={paths.length === index + 1}>\r\n              {paths.length !== index + 1 ? (\r\n                <NavLink to={`/${getUrl(path, sub, index)}`}>\r\n                  {getMenuTitle(sub)}\r\n                </NavLink>\r\n              ) : (\r\n                getMenuTitle(sub)\r\n              )}\r\n            </BreadcrumbItem>\r\n          );\r\n        })}\r\n      </Breadcrumb>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BreadcrumbContainer;\r\n","import React, { useState } from 'react';\r\nimport { Button, Popover, PopoverBody } from 'reactstrap';\r\nimport classnames from 'classnames';\r\n\r\nconst StateButton = ({\r\n  id,\r\n  className,\r\n  color,\r\n  size,\r\n  children,\r\n  onClick,\r\n  next,\r\n  successNext,\r\n}) => {\r\n  const [status, setStatus] = useState('default');\r\n  const [message, setMessage] = useState('');\r\n  const [messageShow, setMessageShow] = useState(false);\r\n\r\n  const handleOnClick = () => {\r\n    setStatus('processing');\r\n\r\n    onClick()\r\n      .then((res) => {\r\n        setMessage(res);\r\n        setStatus('success');\r\n        if (successNext) {\r\n          successNext();\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setMessage(err);\r\n        setStatus('fail');\r\n      })\r\n      .finally(() => {\r\n        setMessageShow(true);\r\n        setTimeout(() => {\r\n          setStatus('default');\r\n          setMessageShow(false);\r\n          if (next) {\r\n            next();\r\n          }\r\n        }, 3000);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <span>\r\n      <Button\r\n        id={id}\r\n        className={`btn-multiple-state  ${className}  ${classnames({\r\n          'show-spinner': status === 'processing',\r\n          'show-success': status === 'success',\r\n          'show-fail': status === 'fail',\r\n        })}`}\r\n        size={size}\r\n        color={color}\r\n        onClick={handleOnClick}\r\n        disabled={status !== 'default'}\r\n      >\r\n        <Popover placement=\"top\" isOpen={messageShow} target={id}>\r\n          <PopoverBody>{message}</PopoverBody>\r\n        </Popover>\r\n        <span className=\"spinner d-inline-block\">\r\n          <span className=\"bounce1\" />\r\n          <span className=\"bounce2\" />\r\n          <span className=\"bounce3\" />\r\n        </span>\r\n        <span className=\"icon success\">\r\n          <i className=\"simple-icon-check\" />\r\n        </span>\r\n        <span className=\"icon fail\">\r\n          <i className=\"simple-icon-exclamation\" />\r\n        </span>\r\n        <span className=\"label\">{children}</span>\r\n      </Button>\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default StateButton;\r\n","/* eslint-disable camelcase */\r\n/* eslint-disable prefer-promise-reject-errors */\r\nimport React, { useState,useEffect } from 'react';\r\nimport { CirclePicker } from 'react-color';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n  CustomInput,\r\n  FormGroup,\r\n  Input,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  Row,\r\n} from 'reactstrap';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\r\nimport { adminRoot } from '../../../constants/defaultValues';\r\n// import { NotificationManager } from '../../../components/common/react-notifications';\r\n\r\nimport Breadcrumb from '../../../containers/navs/Breadcrumb';\r\nimport AppError from '../../../helpers/AppError';\r\nimport { wait } from '../../../helpers/Utils';\r\nimport IntlMessages from '../../../helpers/IntlMessages';\r\nimport instance from '../../../helpers/axiosInstance';\r\nimport StateButton from '../../../components/StateButton';\r\n// import companyLogo from '../../../assets/img/video/poster.jpg';\r\n\r\nlet imgbrowsed1 = false;\r\nlet imgbrowsed2 = false;\r\nconst Brands = ({ match }) => {\r\n  let uploaded = false;\r\n  let uploaded2 = false;\r\n  const { id } = match.params;\r\n\r\n  if (!id) throw new AppError('Please provide a Hackathon ID');\r\n  const history = useHistory();\r\n  const [data1, setData1] = useState([]);\r\n  useEffect(() => {\r\n    fetch(`http://api.smart-natives.de/index.php/api/getdetails/${id}`)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n      .then(data => {\r\n        console.log(data.getdetails.hackathon);\r\n        setData1(data.getdetails.hackathon)\r\n      });\r\n    // eslint-disable-next-line\r\n  }, []);\r\nconsole.log(data1)\r\n  const [values, setValues] = useState({\r\n    id,\r\n    theme: null,\r\n    hackathon_logo: null,\r\n    hackathon_cover_img: null,\r\n  });\r\n  const theme_color_code = values.theme;\r\n\r\n  const [colorHexCode, setColorHexCode] = useState('#000000');\r\n  const formData = new FormData();\r\n  formData.append('id', id);\r\n\r\n  const handleChange = (event, key, value = false) => {\r\n    setValues({\r\n      ...values,\r\n      theme: value ? event : event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleFileChange = (event) => {\r\n    setValues({ ...values, [event.target.id]: event.target.files[0] });\r\n    imgbrowsed1 = true;\r\n    console.log(imgbrowsed1);\r\n  };\r\n  const handleFileChange2 = (event) => {\r\n    setValues({ ...values, [event.target.id]: event.target.files[0] });\r\n    imgbrowsed2 = true;\r\n  };\r\n\r\n  const handleUpload = async (event) => {\r\n    formData.delete(event.target.id);\r\n\r\n    formData.append(`${event.target.id}`, values[event.target.id]);\r\n\r\n    await instance({\r\n      url: '/updateHackathon',\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n      data: formData,\r\n      timeout: 100000,\r\n    });\r\n    uploaded = true;\r\n    console.log(uploaded, imgbrowsed1);\r\n    if (imgbrowsed1) {\r\n      document.getElementById(\"check\").innerHTML = \"Image uploaded successfully.\";\r\n    }\r\n    window.location.reload(false);\r\n  };\r\n  const handleUpload2 = async (event) => {\r\n    formData.delete(event.target.id);\r\n\r\n    formData.append(`${event.target.id}`, values[event.target.id]);\r\n    await instance({\r\n      url: '/updateHackathon',\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n      data: formData,\r\n      timeout: 100000\r\n    });\r\n    uploaded2 = true;\r\n    console.log(uploaded2, imgbrowsed2);\r\n    if (imgbrowsed2) {\r\n      document.getElementById(\"check2\").innerHTML = \"Image uploaded successfully.\";\r\n    }\r\n    window.location.reload(false);\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    // if (\r\n    //   values.hackathon_logo === null ||\r\n    //   values.hackathon_cover_img === null\r\n    // ) {\r\n    //   NotificationManager.error(\r\n    //     'Please enter all the information!',\r\n    //     'Hackathon Operation Error',\r\n    //     3000,\r\n    //     null,\r\n    //     null,\r\n    //     ''\r\n    //   );\r\n    // }\r\n      console.log(values);\r\n      return new Promise((success, failed) => {\r\n        const updateProfile = async () => {\r\n          try {\r\n            const response = await instance({\r\n              method: 'POST',\r\n              url: '/updateHackathon',\r\n              headers: {\r\n                'Content-Type': 'multipart/form-data',\r\n              },\r\n              data: formData,\r\n              timeout: 200000,\r\n            });\r\n\r\n            await instance({\r\n              method: 'POST',\r\n              url: '/updateHackathon',\r\n              data: { id, theme_color_code },\r\n              timeout: 200000,\r\n            });\r\n\r\n\r\n            const { data } = response;\r\n            if (data.success) {\r\n              success('Hackathon updated successfully!');\r\n\r\n              wait(1200, () => {\r\n                history.push(`${adminRoot}/challenges/dates/${id}`);\r\n              });\r\n            } else {\r\n              success('Hackathon updated successfully!');\r\n\r\n              wait(1200, () => {\r\n                history.push(`${adminRoot}/challenges/dates/${id}`);\r\n              });\r\n            }\r\n          } catch (error) {\r\n            failed('Failed to update hackathon!');\r\n          }\r\n        };\r\n        updateProfile();\r\n      });\r\n\r\n    // return null;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Colxx xxs=\"12\">\r\n          <Breadcrumb heading=\"menu.brands\" match={match} />\r\n          <Separator className=\"mb-5\" />\r\n        </Colxx>\r\n      </Row>\r\n      <Row className=\"justify-content-center\">\r\n        <Colxx xxs=\"12\" md=\"10\" className=\"mb-4\">\r\n          <Card className=\"mb-4\">\r\n            <CardBody>\r\n              <CardTitle>\r\n                <div className=\"lead h4\">\r\n                  <IntlMessages id=\"challenges.theme-title\" />\r\n                </div>\r\n              </CardTitle>\r\n\r\n              <FormGroup className=\"mb-6\">\r\n                <Input value={colorHexCode} disabled />\r\n              </FormGroup>\r\n\r\n              <FormGroup className=\"mb-6 p-2\">\r\n                <CirclePicker\r\n                  width=\"100%\"\r\n                  color={colorHexCode}\r\n                  onChange={(event) => {\r\n                    setColorHexCode(event.hex);\r\n                    handleChange(event.hex, 'theme_color_code', true);\r\n                  }}\r\n                />\r\n              </FormGroup>\r\n            </CardBody>\r\n          </Card>\r\n\r\n          <Card className=\"mb-4\">\r\n            <CardBody>\r\n              <CardTitle>\r\n                <div className=\"lead h4\">\r\n                  <IntlMessages id=\"challenges.hackthon-logo-title\" />\r\n                </div>\r\n              </CardTitle>\r\n\r\n              <div className=\"form-group mb-6\">\r\n              <img className=\"mb-2\" id=\"checkImg\" src={(uploaded)?values.hackathon_logo:data1.hackathon_logo} alt=\"BigCo Inc. logo\" width=\"70\" height=\"60\"/>\r\n                <InputGroup>\r\n                  <CustomInput\r\n                    type=\"file\"\r\n                    id=\"hackathon_logo\"\r\n                    name=\"customFile\"\r\n                    accept=\"image/jpeg, image/jpg, image/png\"\r\n                    onChange={handleFileChange}\r\n                  />\r\n                  <InputGroupAddon addonType=\"append\">\r\n                    <Button\r\n                      outline\r\n                      color=\"secondary\"\r\n                      onClick={handleUpload}\r\n                      id=\"hackathon_logo\"\r\n                    >\r\n                      <IntlMessages id=\"challenges.upload-button\" />\r\n                    </Button>\r\n                  </InputGroupAddon>\r\n                </InputGroup>\r\n                <p id=\"check\"> </p>\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n\r\n          <Card className=\"mb-4\">\r\n            <CardBody>\r\n              <CardTitle>\r\n                <div className=\"lead h4\">\r\n                  <IntlMessages id=\"challenges.hackthon-cover-image-title\" />\r\n                </div>\r\n              </CardTitle>\r\n             \r\n          \r\n              <div className=\"form-group mb-6\">\r\n              <div><img className=\"mb-2\" id=\"check2Img\" src={(uploaded2)?values.hackathon_cover_img:data1.hackathon_cover_img} alt=\"BigCo Inc. logo\" width=\"70\" height=\"60\"/></div>\r\n                <InputGroup>\r\n                  <CustomInput\r\n                    type=\"file\"\r\n                    id=\"hackathon_cover_img\"\r\n                    name=\"customFile\"\r\n                    accept=\"image/jpeg, image/jpg, image/png\"\r\n                    onChange={handleFileChange2}\r\n                  />\r\n                  <InputGroupAddon addonType=\"append\">\r\n                    <Button\r\n                      outline\r\n                      color=\"secondary\"\r\n                      id=\"hackathon_cover_img\"\r\n                      onClick={handleUpload2}\r\n                    >\r\n                      <IntlMessages id=\"challenges.upload-button\" />\r\n                    </Button>\r\n                  </InputGroupAddon>\r\n                </InputGroup>\r\n                <p id=\"check2\"> </p>\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n\r\n          <FormGroup className=\"text-center mb-4\">\r\n            <StateButton\r\n              id=\"submitLinks\"\r\n              color=\"primary\"\r\n              type=\"submit\"\r\n              onClick={() => handleSubmit(values)}\r\n            >\r\n              <IntlMessages id=\"forms.update\" />\r\n            </StateButton>\r\n          </FormGroup>\r\n        </Colxx>\r\n      </Row>\r\n\r\n      {/* <Row>\r\n        <Colxx>\r\n          <FormGroup className=\"text-center\">\r\n            <Button\r\n              color=\"primary\"\r\n              className=\"m-3\"\r\n              onClick={() =>\r\n                history.push(`${adminRoot}/challenges/links/${id}`)\r\n              }\r\n            >\r\n              <IntlMessages id=\"forms.previous\" />\r\n            </Button>\r\n          </FormGroup>\r\n        </Colxx>\r\n      </Row> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Brands;\r\n"],"sourceRoot":""}