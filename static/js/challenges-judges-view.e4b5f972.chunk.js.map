{"version":3,"sources":["containers/navs/Breadcrumb.js","components/StateButton.js","components/application/AddJudgeModal.js","components/cards/JudgeCard.js","components/application/JudgesList.js","views/app/Challenges/judges-view.js"],"names":["getMenuTitle","sub","adminRoot","id","getUrl","path","split","BreadcrumbItems","match","substr","paths","filter","Boolean","length","indexOf","x","className","map","index","active","to","BreadcrumbContainer","heading","StateButton","color","size","children","onClick","next","successNext","useState","status","setStatus","message","setMessage","messageShow","setMessageShow","classnames","then","res","catch","err","finally","setTimeout","disabled","placement","isOpen","target","connect","accessToken","authUser","getJudgeAction","getJudge","setOpenAddModal","console","log","hackathon_id","name","job_title","company","profile_url","about","values","setValues","formData","FormData","handleChange","event","key","value","handleSubmit","newData","a","append","Promise","success","failed","instance","method","url","headers","Authorization","data","timeout","response","addJudge","ModalHeader","IntlMessages","ModalBody","FormGroup","Label","Input","type","onChange","rows","InputGroup","CustomInput","accept","files","delete","ModalFooter","window","location","reload","Button","JudgeCard","isImg","Card","src","alt","width","CardBody","CardSubtitle","CardText","applicationData","judges","loading","error","useEffect","AppError","role","item","Judges","params","history","useHistory","openAddModal","Row","xxs","Breadcrumb","md","label","Modal","toggle","push"],"mappings":"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","file":"static/js/challenges-judges-view.e4b5f972.chunk.js","sourcesContent":["/* eslint-disable react/no-array-index-key */\r\nimport React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport IntlMessages from '../../helpers/IntlMessages';\r\nimport { adminRoot } from '../../constants/defaultValues';\r\n\r\nconst getMenuTitle = (sub) => {\r\n  if (`/${sub}` === adminRoot) return <IntlMessages id=\"menu.home\" />;\r\n  return <IntlMessages id={`menu.${sub}`} />;\r\n};\r\n\r\nconst getUrl = (path, sub) => {\r\n  return path.split(sub)[0] + sub;\r\n};\r\n\r\nconst BreadcrumbContainer = ({ heading, match }) => {\r\n  return (\r\n    <>\r\n      {heading && (\r\n        <h1>\r\n          <IntlMessages id={heading} />\r\n        </h1>\r\n      )}\r\n      {match ? <BreadcrumbItems match={match} /> : null}\r\n    </>\r\n  );\r\n};\r\n\r\nconst BreadcrumbItems = ({ match }) => {\r\n  const path = match.path.substr(1);\r\n  let paths = path.split('/').filter(Boolean);\r\n\r\n  if (paths[paths.length - 1].indexOf(':') > -1) {\r\n    paths = paths.filter((x) => x.indexOf(':') === -1);\r\n  }\r\n  return (\r\n    <>\r\n      <Breadcrumb className=\"pt-0 breadcrumb-container d-none d-sm-block d-lg-inline-block\">\r\n        {paths.map((sub, index) => {\r\n          return (\r\n            <BreadcrumbItem key={index} active={paths.length === index + 1}>\r\n              {paths.length !== index + 1 ? (\r\n                <NavLink to={`/${getUrl(path, sub, index)}`}>\r\n                  {getMenuTitle(sub)}\r\n                </NavLink>\r\n              ) : (\r\n                getMenuTitle(sub)\r\n              )}\r\n            </BreadcrumbItem>\r\n          );\r\n        })}\r\n      </Breadcrumb>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BreadcrumbContainer;\r\n","import React, { useState } from 'react';\r\nimport { Button, Popover, PopoverBody } from 'reactstrap';\r\nimport classnames from 'classnames';\r\n\r\nconst StateButton = ({\r\n  id,\r\n  className,\r\n  color,\r\n  size,\r\n  children,\r\n  onClick,\r\n  next,\r\n  successNext,\r\n}) => {\r\n  const [status, setStatus] = useState('default');\r\n  const [message, setMessage] = useState('');\r\n  const [messageShow, setMessageShow] = useState(false);\r\n\r\n  const handleOnClick = () => {\r\n    setStatus('processing');\r\n\r\n    onClick()\r\n      .then((res) => {\r\n        setMessage(res);\r\n        setStatus('success');\r\n        if (successNext) {\r\n          successNext();\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setMessage(err);\r\n        setStatus('fail');\r\n      })\r\n      .finally(() => {\r\n        setMessageShow(true);\r\n        setTimeout(() => {\r\n          setStatus('default');\r\n          setMessageShow(false);\r\n          if (next) {\r\n            next();\r\n          }\r\n        }, 3000);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <span>\r\n      <Button\r\n        id={id}\r\n        className={`btn-multiple-state  ${className}  ${classnames({\r\n          'show-spinner': status === 'processing',\r\n          'show-success': status === 'success',\r\n          'show-fail': status === 'fail',\r\n        })}`}\r\n        size={size}\r\n        color={color}\r\n        onClick={handleOnClick}\r\n        disabled={status !== 'default'}\r\n      >\r\n        <Popover placement=\"top\" isOpen={messageShow} target={id}>\r\n          <PopoverBody>{message}</PopoverBody>\r\n        </Popover>\r\n        <span className=\"spinner d-inline-block\">\r\n          <span className=\"bounce1\" />\r\n          <span className=\"bounce2\" />\r\n          <span className=\"bounce3\" />\r\n        </span>\r\n        <span className=\"icon success\">\r\n          <i className=\"simple-icon-check\" />\r\n        </span>\r\n        <span className=\"icon fail\">\r\n          <i className=\"simple-icon-exclamation\" />\r\n        </span>\r\n        <span className=\"label\">{children}</span>\r\n      </Button>\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default StateButton;\r\n","/* eslint-disable camelcase */\r\n/* eslint-disable prefer-promise-reject-errors */\r\nimport React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  Button,\r\n  CustomInput,\r\n  FormGroup,\r\n  Input,\r\n  InputGroup,\r\n  Label,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader,\r\n} from 'reactstrap';\r\nimport instance from '../../helpers/axiosInstance';\r\nimport IntlMessages from '../../helpers/IntlMessages';\r\nimport { getJudge } from '../../redux/actions';\r\nimport StateButton from '../StateButton';\r\n\r\nconst AddJudgeModal = ({ setOpenAddModal, id, accessToken }) => {\r\n  console.log(id);\r\n  const [values, setValues] = useState({\r\n    hackathon_id: id,\r\n    name: '',\r\n    job_title: '',\r\n    company: '',\r\n    profile_url: null,\r\n    about: '',\r\n  });\r\n  const formData = new FormData();\r\n  const handleFileChange = (event) => {\r\n    setValues({ ...values, [event.target.id]: event.target.files[0] });\r\n    formData.delete(event.target.id);\r\n    formData.append(`${event.target.id}`, values[event.target.id]);\r\n  };\r\n\r\n\r\n  const handleChange = (event, key, value = false) => {\r\n    setValues({\r\n      ...values,\r\n      [key]: value ? event : event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (newData) => {\r\n    formData.append('hackathon_id', id);\r\n    formData.append('name', values.name);\r\n    formData.append('job_title', values.job_title);\r\n    formData.append('company', values.company);\r\n    formData.append('about', values.about);\r\n    formData.append('profile_url', values.profile_url);\r\n    return new Promise((success, failed) => {\r\n      const addJudge = async () => {\r\n        try {\r\n          console.log(newData);\r\n          if (\r\n            newData.name === '' ||\r\n            newData.job_title === '' ||\r\n            newData.company === '' ||\r\n            newData.about === ''\r\n          ) {\r\n            failed('Please enter valid details!');\r\n          } else {\r\n             const response = await instance({\r\n              method: 'POST',\r\n              url: '/addJudges',\r\n              headers: {\r\n                Authorization: `Bearer ${accessToken}`,\r\n                'Content-Type': 'multipart/form-data',\r\n              },\r\n              data: formData,\r\n              timeout: 100000,\r\n            });\r\n\r\n            const { data } = response;\r\n            if (data.success) {\r\n              setValues({ ...values, ...newData });\r\n              success('Judge added successfully!');\r\n            } else {\r\n              failed('Failed to add judge!');\r\n            }\r\n          }\r\n        } catch (error) {\r\n          console.log(error);\r\n          failed('Failed to add judge!');\r\n        }\r\n      };\r\n\r\n      addJudge();\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ModalHeader>\r\n        <h2 className=\"lead\">\r\n          <IntlMessages id=\"challenges.modal.application-add-judge-title\" />\r\n        </h2>\r\n      </ModalHeader>\r\n\r\n      <ModalBody>\r\n        <FormGroup>\r\n          <Label>\r\n            <IntlMessages id=\"challenges.modal.judge\" />\r\n          </Label>\r\n          <Input\r\n            type=\"text\"\r\n            value={values.name}\r\n            onChange={(event) => handleChange(event, 'name')}\r\n          />\r\n        </FormGroup>\r\n\r\n        <FormGroup>\r\n          <Label>\r\n            <IntlMessages id=\"challenges.modal.judge-title\" />\r\n          </Label>\r\n          <Input\r\n            type=\"text\"\r\n            value={values.job_title}\r\n            onChange={(event) => handleChange(event, 'job_title')}\r\n          />\r\n        </FormGroup>\r\n\r\n        <FormGroup>\r\n          <Label>\r\n            <IntlMessages id=\"challenges.modal.judge-company\" />\r\n          </Label>\r\n          <Input\r\n            type=\"text\"\r\n            value={values.company}\r\n            onChange={(event) => handleChange(event, 'company')}\r\n          />\r\n        </FormGroup>\r\n\r\n        <FormGroup>\r\n          <Label>\r\n            <IntlMessages id=\"challenges.modal.judge-description\" />\r\n          </Label>\r\n          <Input\r\n            type=\"textarea\"\r\n            rows=\"4\"\r\n            value={values.about}\r\n            onChange={(event) => handleChange(event, 'about')}\r\n          />\r\n        </FormGroup>\r\n\r\n        <FormGroup>\r\n          <Label>\r\n            <IntlMessages id=\"challenges.modal.judge-upload-image\" />\r\n          </Label>\r\n          <InputGroup>\r\n            <CustomInput type=\"file\"\r\n              id=\"profile_url\" \r\n              name=\"customFile\"\r\n              accept=\"image/jpeg, image/jpg, image/png\"\r\n              onChange={handleFileChange}\r\n            />\r\n          </InputGroup>\r\n        </FormGroup>\r\n      </ModalBody>\r\n\r\n      <ModalFooter>\r\n        <StateButton\r\n          id=\"add-judge-button\"\r\n          color=\"secondary\"\r\n          onClick={() => handleSubmit(values)}\r\n          successNext={() => window.location.reload()}\r\n        >\r\n          <IntlMessages id=\"challenges.modal.application-add\" />\r\n        </StateButton>\r\n\r\n        <Button color=\"danger\" onClick={() => setOpenAddModal(false)}>\r\n          <IntlMessages id=\"challenges.modal.application-cancel\" />\r\n        </Button>\r\n      </ModalFooter>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ authUser }) => {\r\n  const { accessToken } = authUser;\r\n  return { accessToken };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  getJudgeAction: getJudge,\r\n})(AddJudgeModal);\r\n","import React from 'react';\r\nimport { /* Button, */ Card, CardBody, CardSubtitle, CardText } from 'reactstrap';\r\n\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst JudgeCard = ({ data }) => {\r\n  let isImg = false;\r\n  const img = \"/assets/img/profiles/l-2.jpg\"\r\n  if(data.profile_url.match(/\\.(jpeg|jpg|gif|png)$/) !== null)\r\n  {\r\n    isImg = true;\r\n  }\r\n  return (\r\n    <Card className=\"d-flex flex-row mb-4\">\r\n      <NavLink to={data.profile_url} className=\"d-flex\">\r\n        <img src={isImg?data.profile_url:img} alt=\"Not Found\" width=\"100px\" className=\"m-4\" />\r\n      </NavLink>\r\n      <div className=\" d-flex flex-grow-1 min-width-zero\">\r\n        <CardBody className=\" pl-0 align-self-center d-flex flex-column flex-lg-row justify-content-between min-width-zero\">\r\n          <div className=\"min-width-zero\">\r\n            <NavLink to={data.profile_url}>\r\n              <CardSubtitle className=\"truncate mb-1\">{data.name}</CardSubtitle>\r\n            </NavLink>\r\n            <CardText className=\"text-muted text-small mb-2\">\r\n              {data.job_title}\r\n            </CardText>\r\n            {/* <Button outline size=\"xs\" color=\"danger\">\r\n              Remove\r\n            </Button> */}\r\n          </div>\r\n        </CardBody>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default JudgeCard;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable camelcase */\r\nimport React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Card, CardBody } from 'reactstrap';\r\n\r\nimport AppError from '../../helpers/AppError';\r\nimport IntlMessages from '../../helpers/IntlMessages';\r\nimport { getJudge } from '../../redux/actions';\r\nimport JudgeCard from '../cards/JudgeCard';\r\n\r\nconst JudgesList = ({\r\n  id,\r\n  getJudgeAction,\r\n  accessToken,\r\n  judges,\r\n  loading,\r\n  error,\r\n}) => {\r\n  useEffect(() => {\r\n    getJudgeAction(accessToken, id);\r\n  }, []);\r\n  if (error) throw new AppError(error);\r\n\r\n  return (\r\n    <>\r\n      <Card className=\"mb-4\">\r\n        <CardBody>\r\n          <h3 className=\"h3\">\r\n            <IntlMessages id=\"challenges.added-judges\" />\r\n          </h3>\r\n        </CardBody>\r\n      </Card>\r\n\r\n      {loading ? (\r\n        <div className=\"d-flex justify-content-center m-4\">\r\n          <div className=\"loading\" role=\"status\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          {judges.map((item) => (\r\n            <JudgeCard key={item.id} data={item} />\r\n          ))}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ authUser, applicationData }) => {\r\n  const { accessToken } = authUser;\r\n  const { judges, loading, error } = applicationData;\r\n  return { accessToken, judges, loading, error };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  getJudgeAction: getJudge,\r\n})(JudgesList);\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CustomInput,\r\n  FormGroup,\r\n  Modal,\r\n  Row,\r\n} from 'reactstrap';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport AddJudgeModal from '../../../components/application/AddJudgeModal';\r\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\r\nimport { adminRoot } from '../../../constants/defaultValues';\r\n\r\nimport Breadcrumb from '../../../containers/navs/Breadcrumb';\r\nimport AppError from '../../../helpers/AppError';\r\nimport IntlMessages from '../../../helpers/IntlMessages';\r\n\r\nimport JudgesList from '../../../components/application/JudgesList';\r\n\r\nconst Judges = ({ match }) => {\r\n  const { id } = match.params;\r\n\r\n  if (!id) throw new AppError('Please provide a Hackathon ID');\r\n\r\n  const history = useHistory();\r\n\r\n  const [openAddModal, setOpenAddModal] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Colxx xxs=\"12\">\r\n          <Breadcrumb heading=\"menu.judges\" match={match} />\r\n          <Separator className=\"mb-5\" />\r\n        </Colxx>\r\n      </Row>\r\n\r\n      <Row className=\"justify-content-center\">\r\n        <Colxx xxs=\"12\" md=\"6\">\r\n          <JudgesList id={id} />\r\n        </Colxx>\r\n\r\n        <Colxx xxs=\"12\" md=\"6\">\r\n          <Card>\r\n            <CardBody>\r\n              <Row className=\"justify-content-center m-2\">\r\n                <Button onClick={() => setOpenAddModal(true)}>\r\n                  <IntlMessages id=\"challenges.add-judge-button\" />\r\n                </Button>\r\n              </Row>\r\n\r\n              <Row className=\"justify-content-center m-2\">\r\n                <CustomInput\r\n                  type=\"checkbox\"\r\n                  label={<IntlMessages id=\"challenges.add-judge-checkbox\" />}\r\n                />\r\n              </Row>\r\n\r\n              <Modal\r\n                isOpen={openAddModal}\r\n                toggle={() => setOpenAddModal(!openAddModal)}\r\n              >\r\n                <AddJudgeModal setOpenAddModal={setOpenAddModal} id={id} />\r\n              </Modal>\r\n            </CardBody>\r\n          </Card>\r\n        </Colxx>\r\n      </Row>\r\n\r\n      <Row>\r\n        <Colxx>\r\n          <FormGroup className=\"text-center\">\r\n            <Button\r\n              color=\"primary\"\r\n              className=\"m-3\"\r\n              onClick={() =>\r\n                history.push(`${adminRoot}/challenges/prizes/${id}`)\r\n              }\r\n            >\r\n              <IntlMessages id=\"forms.previous\" />\r\n            </Button>\r\n            <Button\r\n              color=\"primary\"\r\n              className=\"m-3\"\r\n              onClick={() =>\r\n                history.push(`${adminRoot}/challenges/sponsors/${id}`)\r\n              }\r\n            >\r\n              <IntlMessages id=\"forms.next\" />\r\n            </Button>\r\n          </FormGroup>\r\n        </Colxx>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Judges;\r\n"],"sourceRoot":""}