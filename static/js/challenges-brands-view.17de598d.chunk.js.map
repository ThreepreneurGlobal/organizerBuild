{"version":3,"sources":["containers/navs/Breadcrumb.js","components/StateButton.js","hooks/use-localstorage.js","components/application/DropzoneExample.js","views/app/challenges/brands-view.js"],"names":["getMenuTitle","sub","adminRoot","id","getUrl","path","split","BreadcrumbItems","match","substr","paths","filter","Boolean","length","indexOf","x","className","map","index","active","to","BreadcrumbContainer","heading","StateButton","color","size","children","onClick","next","useState","status","setStatus","message","setMessage","messageShow","setMessageShow","classnames","then","res","catch","err","finally","setTimeout","disabled","placement","isOpen","target","useLocalStorage","key","initialValue","item","window","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","handleStorage","useCallback","event","newValue","setValue","value","valueToStore","Function","setItem","stringify","useEffect","addEventListener","removeEventListener","removeItem","ReactDOMServer","require","dropzoneComponentConfig","postUrl","dropzoneConfig","thumbnailHeight","maxFilesize","previewTemplate","renderToStaticMarkup","data-dz-thumbnail","data-dz-name","data-dz-size","data-dz-uploadprogress","data-dz-errormessage","href","data-dz-remove","headers","DropzoneExample","this","myDropzone","removeAllFiles","config","djsConfig","eventHandlers","init","dropzone","Component","Brands","params","AppError","info","getHackathonInfo","hackathonDataStorageKey","hackathonData","setHackathonData","theme_color_code","formValues","setFormValues","colorHexCode","setColorHexCode","handleSubmit","newData","a","Promise","success","failed","instance","method","url","data","response","updateProfile","Row","xxs","Breadcrumb","md","Card","CardBody","CardTitle","IntlMessages","FormGroup","Input","width","onChange","hex","handleChange","type","Button"],"mappings":"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","file":"static/js/challenges-brands-view.17de598d.chunk.js","sourcesContent":["/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport IntlMessages from '../../helpers/IntlMessages';\nimport { adminRoot } from '../../constants/defaultValues';\n\nconst getMenuTitle = (sub) => {\n  if (`/${sub}` === adminRoot) return <IntlMessages id=\"menu.home\" />;\n  return <IntlMessages id={`menu.${sub}`} />;\n};\n\nconst getUrl = (path, sub) => {\n  return path.split(sub)[0] + sub;\n};\n\nconst BreadcrumbContainer = ({ heading, match }) => {\n  return (\n    <>\n      {heading && (\n        <h1>\n          <IntlMessages id={heading} />\n        </h1>\n      )}\n      <BreadcrumbItems match={match} />\n    </>\n  );\n};\n\nconst BreadcrumbItems = ({ match }) => {\n  const path = match.path.substr(1);\n  let paths = path.split('/').filter(Boolean);\n\n  if (paths[paths.length - 1].indexOf(':') > -1) {\n    paths = paths.filter((x) => x.indexOf(':') === -1);\n  }\n  return (\n    <>\n      <Breadcrumb className=\"pt-0 breadcrumb-container d-none d-sm-block d-lg-inline-block\">\n        {paths.map((sub, index) => {\n          return (\n            <BreadcrumbItem key={index} active={paths.length === index + 1}>\n              {paths.length !== index + 1 ? (\n                <NavLink to={`/${getUrl(path, sub, index)}`}>\n                  {getMenuTitle(sub)}\n                </NavLink>\n              ) : (\n                getMenuTitle(sub)\n              )}\n            </BreadcrumbItem>\n          );\n        })}\n      </Breadcrumb>\n    </>\n  );\n};\n\nexport default BreadcrumbContainer;\n","import React, { useState } from 'react';\nimport { Button, Popover, PopoverBody } from 'reactstrap';\nimport classnames from 'classnames';\n\nconst StateButton = ({\n  id,\n  className,\n  color,\n  size,\n  children,\n  onClick,\n  next,\n}) => {\n  const [status, setStatus] = useState('default');\n  const [message, setMessage] = useState('');\n  const [messageShow, setMessageShow] = useState(false);\n\n  const handleOnClick = () => {\n    setStatus('processing');\n\n    onClick()\n      .then((res) => {\n        setMessage(res);\n        setStatus('success');\n      })\n      .catch((err) => {\n        setMessage(err);\n        setStatus('fail');\n      })\n      .finally(() => {\n        setMessageShow(true);\n        setTimeout(() => {\n          setStatus('default');\n          setMessageShow(false);\n          if (next) {\n            next();\n          }\n        }, 3000);\n      });\n  };\n\n  return (\n    <span>\n      <Button\n        id={id}\n        className={`btn-multiple-state  ${className}  ${classnames({\n          'show-spinner': status === 'processing',\n          'show-success': status === 'success',\n          'show-fail': status === 'fail',\n        })}`}\n        size={size}\n        color={color}\n        onClick={handleOnClick}\n        disabled={status !== 'default'}\n      >\n        <Popover placement=\"top\" isOpen={messageShow} target={id}>\n          <PopoverBody>{message}</PopoverBody>\n        </Popover>\n        <span className=\"spinner d-inline-block\">\n          <span className=\"bounce1\" />\n          <span className=\"bounce2\" />\n          <span className=\"bounce3\" />\n        </span>\n        <span className=\"icon success\">\n          <i className=\"simple-icon-check\" />\n        </span>\n        <span className=\"icon fail\">\n          <i className=\"simple-icon-exclamation\" />\n        </span>\n        <span className=\"label\">{children}</span>\n      </Button>\n    </span>\n  );\n};\n\nexport default StateButton;\n","/* eslint-disable no-console */\n/* eslint-disable no-use-before-define */\n/* eslint-disable react-hooks/exhaustive-deps */\nimport { useCallback, useEffect, useState } from 'react';\n\nconst useLocalStorage = (key, initialValue) => {\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      // Get from local storage by key\n      const item = window.localStorage.getItem(key);\n      // Parse stored json or if none return initialValue\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n      console.log(error);\n      return initialValue;\n    }\n  });\n\n  const handleStorage = useCallback(\n    (event) => {\n      if (event.key === key && event.newValue !== storedValue) {\n        setValue(event.newValue || initialValue);\n      }\n    },\n\n    [storedValue]\n  );\n\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n  const setValue = (value) => {\n    try {\n      // Allow value to be a function so we have same API as useState\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n      // Save state\n      setStoredValue(valueToStore);\n      // Save to local storage\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    const newValue = window.localStorage.getItem(key);\n    if (JSON.stringify(storedValue) !== newValue) {\n      setValue(JSON.parse(newValue) || initialValue);\n    }\n  });\n\n  useEffect(() => {\n    window.addEventListener('storage', handleStorage);\n    return () => window.removeEventListener('storage', handleStorage);\n  }, [handleStorage]);\n\n  const remove = () => {\n    window.localStorage.removeItem(key);\n  };\n\n  return [storedValue, setValue, remove];\n};\n\nexport default useLocalStorage;\n","/* eslint-disable import/no-extraneous-dependencies */\nimport React, { Component } from 'react';\nimport DropzoneComponent from 'react-dropzone-component';\nimport 'dropzone/dist/min/dropzone.min.css';\n\nconst ReactDOMServer = require('react-dom/server');\n\nconst dropzoneComponentConfig = {\n  postUrl: 'https://httpbin.org/post',\n};\n\nconst dropzoneConfig = {\n  thumbnailHeight: 160,\n  maxFilesize: 2,\n  previewTemplate: ReactDOMServer.renderToStaticMarkup(\n    <div className=\"dz-preview dz-file-preview mb-3\">\n      <div className=\"d-flex flex-row \">\n        <div className=\"p-0 w-30 position-relative\">\n          <div className=\"dz-error-mark\">\n            <span>\n              <i />{' '}\n            </span>\n          </div>\n          <div className=\"dz-success-mark\">\n            <span>\n              <i />\n            </span>\n          </div>\n          <div className=\"preview-container\">\n            {/*  eslint-disable-next-line jsx-a11y/alt-text */}\n            <img data-dz-thumbnail className=\"img-thumbnail border-0\" />\n            <i className=\"simple-icon-doc preview-icon\" />\n          </div>\n        </div>\n        <div className=\"pl-3 pt-2 pr-2 pb-1 w-70 dz-details position-relative\">\n          <div>\n            {' '}\n            <span data-dz-name />{' '}\n          </div>\n          <div className=\"text-primary text-extra-small\" data-dz-size />\n          <div className=\"dz-progress\">\n            <span className=\"dz-upload\" data-dz-uploadprogress />\n          </div>\n          <div className=\"dz-error-message\">\n            <span data-dz-errormessage />\n          </div>\n        </div>\n      </div>\n      <a href=\"#/\" className=\"remove\" data-dz-remove>\n        {' '}\n        <i className=\"glyph-icon simple-icon-trash\" />{' '}\n      </a>\n    </div>\n  ),\n  headers: { 'My-Awesome-Header': 'header value' },\n};\n\nexport default class DropzoneExample extends Component {\n  clear() {\n    this.myDropzone.removeAllFiles(true);\n  }\n\n  render() {\n    return (\n      <DropzoneComponent\n        config={dropzoneComponentConfig}\n        djsConfig={dropzoneConfig}\n        eventHandlers={{\n          init: (dropzone) => {\n            this.myDropzone = dropzone;\n          },\n        }}\n      />\n    );\n  }\n}\n","/* eslint-disable camelcase */\n/* eslint-disable prefer-promise-reject-errors */\nimport React, { useState } from 'react';\nimport { CirclePicker } from 'react-color';\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardTitle,\n  FormGroup,\n  Input,\n  Row,\n} from 'reactstrap';\nimport DropzoneExample from '../../../components/application/DropzoneExample';\n\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport {\n  adminRoot,\n  hackathonDataStorageKey,\n} from '../../../constants/defaultValues';\n\nimport Breadcrumb from '../../../containers/navs/Breadcrumb';\nimport AppError from '../../../helpers/AppError';\nimport useLocalStorage from '../../../hooks/use-localstorage';\n\nimport IntlMessages from '../../../helpers/IntlMessages';\nimport { getHackathonInfo } from '../../../helpers/Utils';\nimport instance from '../../../helpers/axiosInstance';\nimport StateButton from '../../../components/StateButton';\n\nconst Brands = ({ match }) => {\n  const { id } = match.params;\n\n  if (!id) throw new AppError('Please provide a Hackathon ID');\n\n  const info = getHackathonInfo(id);\n\n  const [hackathonData, setHackathonData] = useLocalStorage(\n    `${hackathonDataStorageKey}_${id}`,\n    info\n  );\n\n  const { theme_color_code } = hackathonData;\n\n  const [formValues, setFormValues] = useState({\n    id,\n    theme_color_code,\n  });\n  const [colorHexCode, setColorHexCode] = useState('#000000');\n\n  const handleChange = (event, key, value = false) => {\n    setFormValues({\n      ...formValues,\n      theme_color_code: value ? event : event.target.value,\n    });\n  };\n\n  const handleSubmit = async (newData) => {\n    return new Promise((success, failed) => {\n      const updateProfile = async () => {\n        try {\n          const response = await instance({\n            method: 'POST',\n            url: '/updateHackathon',\n            data: { id, ...newData },\n          });\n\n          const { data } = response;\n          if (data.success) {\n            setHackathonData({ ...hackathonData, ...newData });\n            success('Hackathon updated successfully!');\n          } else {\n            failed('Failed to update hackathon!');\n          }\n        } catch (error) {\n          failed('Failed to update hackathon!');\n        }\n      };\n      updateProfile();\n    });\n  };\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n          <Breadcrumb heading=\"menu.brands\" match={match} />\n          <Separator className=\"mb-5\" />\n        </Colxx>\n      </Row>\n      <Row className=\"justify-content-center\">\n        <Colxx xxs=\"12\" md=\"10\" className=\"mb-4\">\n          <Card className=\"mb-4\">\n            <CardBody>\n              <CardTitle>\n                <div className=\"lead h4\">\n                  <IntlMessages id=\"challenges.theme-title\" />\n                </div>\n              </CardTitle>\n\n              <FormGroup className=\"mb-6\">\n                <Input value={colorHexCode} disabled />\n              </FormGroup>\n\n              <FormGroup className=\"mb-6 p-2\">\n                <CirclePicker\n                  width=\"100%\"\n                  color={colorHexCode}\n                  onChange={(event) => {\n                    setColorHexCode(event.hex);\n                    handleChange(event.hex, 'theme_color_code', true);\n                  }}\n                />\n              </FormGroup>\n            </CardBody>\n          </Card>\n\n          <Card className=\"mb-4\">\n            <CardBody>\n              <CardTitle>\n                <div className=\"lead h4\">\n                  <IntlMessages id=\"challenges.hackthon-logo-title\" />\n                </div>\n              </CardTitle>\n\n              <div className=\"form-group mb-6\">\n                <DropzoneExample />\n              </div>\n            </CardBody>\n          </Card>\n\n          <Card className=\"mb-4\">\n            <CardBody>\n              <CardTitle>\n                <div className=\"lead h4\">\n                  <IntlMessages id=\"challenges.hackthon-cover-image-title\" />\n                </div>\n              </CardTitle>\n\n              <div className=\"form-group mb-6\">\n                <DropzoneExample />\n              </div>\n            </CardBody>\n          </Card>\n\n          <FormGroup className=\"text-center mb-4\">\n            <StateButton\n              id=\"submitLinks\"\n              color=\"primary\"\n              type=\"submit\"\n              onClick={() => handleSubmit(formValues)}\n            >\n              <IntlMessages id=\"forms.submit\" />\n            </StateButton>\n          </FormGroup>\n        </Colxx>\n      </Row>\n\n      <Row>\n        <Colxx>\n          <FormGroup className=\"text-center\">\n            <Button\n              color=\"primary\"\n              className=\"m-3\"\n              href={`${adminRoot}/challenges/links/${id}`}\n            >\n              <IntlMessages id=\"forms.previous\" />\n            </Button>\n            <Button\n              color=\"primary\"\n              className=\"m-3\"\n              href={`${adminRoot}/challenges/dates/${id}`}\n            >\n              <IntlMessages id=\"forms.next\" />\n            </Button>\n          </FormGroup>\n        </Colxx>\n      </Row>\n    </>\n  );\n};\n\nexport default Brands;\n"],"sourceRoot":""}