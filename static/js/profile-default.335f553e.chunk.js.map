{"version":3,"sources":["containers/navs/Breadcrumb.js","containers/application/HackathonCard.js","hooks/use-fetch.js","views/app/feedback/feedback-view/index.js","views/app/profile/default/EditProfileActions.js","components/pages/SingleLightbox.js","views/app/profile/default/UserCard.js","views/app/profile/default/index.js"],"names":["getMenuTitle","sub","adminRoot","id","getUrl","path","split","BreadcrumbItems","match","substr","paths","filter","Boolean","length","indexOf","x","className","map","index","active","to","BreadcrumbContainer","heading","getStatusText","status","getTypeText","HackCard","data","showEdit","name","tagline","submit_status","hackathon_start","application_end","hackathon_website","hackathon_type_id","otherArray","console","log","history","useHistory","href","target","rel","sdg_goals","item","src","alt","style","height","$mega_trends","color","pill","outline","onClick","push","useFetch","url","useState","loading","setLoading","error","setError","setData","remove","useEffect","a","instance","method","response","success","message","fetchData","propTypes","PropTypes","string","isRequired","key","refresh","bool","FeedBackView","xxs","EditProfileActions","Button","IntlMessages","SingleLightbox","thumb","large","isOpen","setIsOpen","isImg","location","img","width","mainSrc","onCloseRequest","UserCard","profileData","getProfileData","user_id","id2","organization_logo","values","setValues","openUpload","setOpenUpload","ins","formData","FormData","handleUpload","event","append","delete","headers","timeout","getProfileDataAsync","Card","CardBody","bio","country","pathname","linkedin","instagram","Modal","toggle","ModalHeader","ModalBody","InputGroup","CustomInput","type","accept","onChange","files","InputGroupAddon","addonType","connect","authUser","currentUser","getCurrentUser","AppError","Row","organization_name","Breadcrumb","lg","undefined","sm","md"],"mappings":"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","file":"static/js/profile-default.335f553e.chunk.js","sourcesContent":["/* eslint-disable react/no-array-index-key */\r\nimport React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport IntlMessages from '../../helpers/IntlMessages';\r\nimport { adminRoot } from '../../constants/defaultValues';\r\n\r\nconst getMenuTitle = (sub) => {\r\n  if (`/${sub}` === adminRoot) return <IntlMessages id=\"menu.home\" />;\r\n  return <IntlMessages id={`menu.${sub}`} />;\r\n};\r\n\r\nconst getUrl = (path, sub) => {\r\n  return path.split(sub)[0] + sub;\r\n};\r\n\r\nconst BreadcrumbContainer = ({ heading, match }) => {\r\n  return (\r\n    <>\r\n      {heading && (\r\n        <h1>\r\n          <IntlMessages id={heading} />\r\n        </h1>\r\n      )}\r\n      {match ? <BreadcrumbItems match={match} /> : null}\r\n    </>\r\n  );\r\n};\r\n\r\nconst BreadcrumbItems = ({ match }) => {\r\n  const path = match.path.substr(1);\r\n  let paths = path.split('/').filter(Boolean);\r\n\r\n  if (paths[paths.length - 1].indexOf(':') > -1) {\r\n    paths = paths.filter((x) => x.indexOf(':') === -1);\r\n  }\r\n  return (\r\n    <>\r\n      <Breadcrumb className=\"pt-0 breadcrumb-container d-none d-sm-block d-lg-inline-block\">\r\n        {paths.map((sub, index) => {\r\n          return (\r\n            <BreadcrumbItem key={index} active={paths.length === index + 1}>\r\n              {paths.length !== index + 1 ? (\r\n                <NavLink to={`/${getUrl(path, sub, index)}`}>\r\n                  {getMenuTitle(sub)}\r\n                </NavLink>\r\n              ) : (\r\n                getMenuTitle(sub)\r\n              )}\r\n            </BreadcrumbItem>\r\n          );\r\n        })}\r\n      </Breadcrumb>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BreadcrumbContainer;\r\n","/* eslint-disable camelcase */\r\nimport React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {\r\n  Badge,\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardSubtitle,\r\n  CardText,\r\n  CardTitle,\r\n  NavLink,\r\n  Row,\r\n} from 'reactstrap';\r\nimport { Separator } from '../../components/common/CustomBootstrap';\r\nimport { adminRoot } from '../../constants/defaultValues';\r\nimport IntlMessages from '../../helpers/IntlMessages';\r\n\r\nconst getStatusColor = (status) => {\r\n  if (status === 0) return 'outline-success';\r\n  if (status === 1) return 'outline-warning';\r\n  if (status === 'COMPLETED') return 'outline-danger';\r\n  return '';\r\n};\r\n\r\nconst getStatusText = (status) => {\r\n  if (status === 0) return 'Draft';\r\n  if (status === 1) return 'Under Review';\r\n  if (status === 2) return 'Approved';\r\n  return '';\r\n};\r\n\r\nconst getTypeText = (status) => {\r\n  if (status === 0) return 'Online';\r\n  if (status === 1) return 'Blender';\r\n  if (status === 2) return 'Offiline';\r\n  return '';\r\n};\r\n\r\nconst HackCard = ({ data, showEdit = true }) => {\r\n  const {\r\n    id,\r\n    name,\r\n    tagline,\r\n    submit_status,\r\n    hackathon_start,\r\n    application_end,\r\n    hackathon_website,\r\n    hackathon_type_id,\r\n    otherArray,\r\n    \r\n  } = data;\r\n  console.log(data);\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <Card>\r\n      <CardBody>\r\n        <CardTitle>\r\n          <p className=\"h2 lead\">\r\n            <a\r\n              href={hackathon_website}\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n              className=\"new-tab\"\r\n            >\r\n              {name}\r\n            </a>\r\n          </p>\r\n          <CardSubtitle className=\"text-small\">{tagline}</CardSubtitle>\r\n        </CardTitle>\r\n\r\n        <Row className=\"justify-content-center\">\r\n          {otherArray.sdg_goals.map((item) => (\r\n            <img\r\n              key={item.id}\r\n              src={`/assets/img/sdg/${item.id}.png`}\r\n              alt={item.name}\r\n              className=\"list-thumbnail align-self-center m-1 small hackcard-icon\"\r\n            />\r\n          ))}\r\n\r\n          <div className=\"vertical\" style={{ height: '45px' }} />\r\n\r\n          {otherArray.$mega_trends.map((item) => (\r\n            <img\r\n              key={item.id}\r\n              src={`/assets/img/mega-trends/${item.id}.png`}\r\n              alt={item.name}\r\n              className=\"list-thumbnail align-self-center m-1 small hackcard-icon\"\r\n            />\r\n          ))}\r\n        </Row>\r\n\r\n        <Separator className=\"my-4\" />\r\n\r\n        <CardTitle>\r\n          <IntlMessages id=\"hackcard.application\" />\r\n          <CardText>{application_end}</CardText>\r\n        </CardTitle>\r\n\r\n        <CardTitle>\r\n          <IntlMessages id=\"hackcard.hackthon\" />\r\n          <CardText>{hackathon_start}</CardText>\r\n        </CardTitle>\r\n\r\n        <Separator className=\"mb-4\" />\r\n\r\n        <Badge\r\n          color={getStatusColor(submit_status)}\r\n          pill\r\n          outline\r\n          className=\"mb-3 mr-3\"\r\n        >\r\n          {getStatusText(submit_status)}\r\n        </Badge>\r\n\r\n        <Badge color=\"outline-primary\" pill className=\"mb-3\">\r\n          {getTypeText(hackathon_type_id)}\r\n        </Badge>\r\n\r\n        <CardSubtitle className=\"text-small\">\r\n          <NavLink href={hackathon_website} target=\"_blank\" rel=\"noreferrer\">\r\n            <IntlMessages id=\"hackcard.view-more\" />\r\n          </NavLink>\r\n        </CardSubtitle>\r\n\r\n        <Row className=\"justify-content-center\">\r\n          {showEdit && (\r\n            <Button\r\n              className=\"m-1\"\r\n              outline\r\n              onClick={() => {\r\n                history.push(`${adminRoot}/challenges/basics/${id}`);\r\n              }}\r\n            >\r\n              <IntlMessages id=\"hackcard.edit-button\" />\r\n            </Button>\r\n          )}\r\n          <Button\r\n            className=\"m-1\"\r\n            color=\"primary\"\r\n            onClick={() => {\r\n              history.push(`${adminRoot}/challenges/details/${id}`);\r\n            }}\r\n          >\r\n            <IntlMessages id=\"hackcard.view-details-button\" />\r\n          </Button>\r\n        </Row>\r\n\r\n        {/* <pre>{JSON.stringify(data, null, 2)}</pre> */}\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default HackCard;\r\n","import { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport instance from '../helpers/axiosInstance';\r\n\r\nconst useFetch = (url, name = 'data') => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const [data, setData, remove] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!url) {\r\n      setError('Please Provide a Uri!');\r\n      return;\r\n    }\r\n\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await instance({\r\n          method: 'GET',\r\n          url,\r\n        });\r\n\r\n        if (response.data.success) {\r\n          setData(response.data[name]);\r\n        } else {\r\n          setError(response.data.message);\r\n        }\r\n        setLoading(false);\r\n      } catch (err) {\r\n        setError(err.message);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return { loading, data, error, remove };\r\n};\r\n\r\nexport default useFetch;\r\n\r\nuseFetch.propTypes = {\r\n  url: PropTypes.string.isRequired,\r\n  key: PropTypes.string.isRequired,\r\n  refresh: PropTypes.bool,\r\n};\r\n","import React from 'react';\r\nimport { Row } from 'reactstrap';\r\nimport {\r\n  Colxx,\r\n  Separator,\r\n} from '../../../../components/common/CustomBootstrap';\r\nimport Breadcrumb from '../../../../containers/navs/Breadcrumb';\r\nimport IntlMessages from '../../../../helpers/IntlMessages';\r\n\r\nconst FeedBackView = ({ match }) => {\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Colxx xxs=\"12\">\r\n          <Breadcrumb heading=\"menu.feedback\" match={match} />\r\n          <Separator className=\"mb-5\" />\r\n        </Colxx>\r\n      </Row>\r\n      <Row>\r\n        <Colxx xxs=\"12\" className=\"mb-4\">\r\n          <p>\r\n            <IntlMessages id=\"menu.feedback\" />\r\n          </p>\r\n        </Colxx>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FeedBackView;\r\n","import React from 'react';\r\nimport { Button } from 'reactstrap';\r\nimport { adminRoot } from '../../../../constants/defaultValues';\r\nimport IntlMessages from '../../../../helpers/IntlMessages';\r\n\r\nconst EditProfileActions = () => {\r\n  return (\r\n    <div className=\"top-right-button-container\">\r\n      <Button color=\"primary\" href={`${adminRoot}/profile/about`}>\r\n        <span className=\"pr-3\">\r\n          <IntlMessages id=\"user.edit-profile\" />\r\n        </span>\r\n        <span className=\"icon-button\">\r\n          <i className=\"simple-icon-pencil\" />\r\n        </span>\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditProfileActions;\r\n","import React, { useState } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Lightbox from 'react-image-lightbox';\r\nimport img from \"../../assets/img/profiles/profile.png\";\r\n\r\nconst SingleLightbox = ({ thumb, className, large }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  let isImg = false;\r\n  if(thumb.match(/\\.(jpeg|jpg|gif|png)$/) !== null)\r\n  {\r\n    isImg = true;\r\n  }\r\n  console.log(thumb);\r\n  return (\r\n    <>\r\n      <NavLink to=\"#\" location={{}} onClick={() => setIsOpen(true)}>\r\n        <img \r\n          alt=\"Not Found\"\r\n          src={isImg?thumb:img}\r\n          className={className} \r\n          width=\"500\" \r\n        />\r\n      </NavLink>\r\n      {isOpen && (\r\n        <Lightbox mainSrc={large} onCloseRequest={() => setIsOpen(false)} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default SingleLightbox;\r\n","import React, { useState } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport {\r\n  Card,\r\n  Button,\r\n  CardBody,\r\n  InputGroupAddon,\r\n  CustomInput,\r\n  ModalBody,\r\n  InputGroup,\r\n  ModalHeader,\r\n  Modal,\r\n} from 'reactstrap';\r\nimport SingleLightbox from '../../../../components/pages/SingleLightbox';\r\nimport instance from '../../../../helpers/axiosInstance';\r\nimport IntlMessages from '../../../../helpers/IntlMessages';\r\nimport { getProfileData, getProfileDataAsync } from '../../../../helpers/Utils';\r\n\r\nconst UserCard = () => {\r\n  const profileData = getProfileData();\r\n  const id = profileData?.user_id;\r\n  const id2 = profileData?.id;\r\n  const [values, setValues] = useState({\r\n    id,\r\n    id2,\r\n    organization_logo: null\r\n  });\r\n\r\n\r\n  const [openUpload, setOpenUpload] = useState(false);\r\n  const ins = \"https://\";\r\n  const formData = new FormData();\r\n  console.log(profileData);\r\n  const handleFileChange = (event) => {\r\n    setValues({ ...values, [event.target.id]: event.target.files[0] });\r\n  };\r\n  \r\n  const handleUpload = async (event) => {\r\n    formData.append('user_id', profileData.user_id);\r\n    formData.append('id', profileData.id);\r\n    formData.delete(event.target.id);\r\n\r\n    formData.append(`${event.target.id}`, values[event.target.id]);\r\n    console.log(formData);\r\n    await instance({\r\n      url: '/updateProfile',\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n      data: formData,\r\n      timeout: 100000,\r\n    });\r\n\r\n    await getProfileDataAsync(profileData.user_id);\r\n    setOpenUpload(false);\r\n  };\r\n\r\n return (\r\n    <Card className=\"mb-4\">\r\n      <div className=\"position-absolute card-top-buttons\">\r\n        <Button\r\n          outline\r\n          color=\"primary\"\r\n          className=\"icon-button\"\r\n          onClick={() => setOpenUpload(true)}\r\n        >\r\n          <i className=\"simple-icon-pencil\" />\r\n        </Button>\r\n      </div>\r\n      {profileData?.organization_logo && (\r\n        \r\n        <SingleLightbox\r\n          thumb={profileData?.organization_logo}\r\n          large={profileData?.organization_logo}\r\n          className=\"card-img-special\"\r\n        />\r\n      )}\r\n\r\n      <CardBody>\r\n        <p className=\"text-muted text-small\">\r\n          <IntlMessages id=\"menu.about\" />\r\n        </p>\r\n\r\n        <p className=\"mb-3\">\r\n          {\r\n            profileData?.bio\r\n          }\r\n        </p>\r\n\r\n        <p className=\"text-muted text-small mb-2\">\r\n          <IntlMessages id=\"pages.location\" />\r\n        </p>\r\n\r\n        <p className=\"mb-3\">{profileData?.country}</p>\r\n\r\n\r\n        <p className=\"text-muted text-small mb-2\">\r\n          <IntlMessages id=\"menu.contact\" />\r\n        </p>\r\n\r\n        <div className=\"social-icons\">\r\n          <ul className=\"list-unstyled list-inline\">\r\n            <li className=\"list-inline-item\">\r\n              <NavLink to={{ pathname: ins + profileData?.linkedin }} target=\"_blank\" location={{}}>\r\n              \r\n                <i className=\"simple-icon-social-linkedin\" />\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"list-inline-item\">\r\n              <NavLink to=\"#\" location={{}}>\r\n                <i className=\"simple-icon-social-website-url\" />\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"list-inline-item\">\r\n              <NavLink to={{ pathname: ins + profileData?.instagram }}  target=\"_blank\" location={{}}>\r\n                <i className=\"simple-icon-social-instagram\" />\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </CardBody>\r\n      <Modal isOpen={openUpload} toggle={() => setOpenUpload(!openUpload)}>\r\n        <ModalHeader>\r\n          <IntlMessages id=\"upload organization logo\" />\r\n        </ModalHeader>\r\n\r\n        <ModalBody>\r\n          <InputGroup>\r\n            <CustomInput\r\n              type=\"file\"\r\n              id=\"organization_logo\"\r\n              name=\"customFile\"\r\n              accept=\"image/jpeg, image/jpg, image/png\"\r\n              onChange={handleFileChange}\r\n            />\r\n            <InputGroupAddon addonType=\"append\">\r\n              <Button\r\n                outline\r\n                color=\"secondary\"\r\n                id=\"organization_logo\"\r\n                onClick={handleUpload}\r\n              >\r\n                <IntlMessages id=\"challenges.upload-button\" />\r\n              </Button>\r\n            </InputGroupAddon>\r\n          </InputGroup>\r\n        </ModalBody>\r\n      </Modal>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default UserCard;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Row } from 'reactstrap';\r\nimport Breadcrumb from '../../../../containers/navs/Breadcrumb';\r\nimport { Colxx } from '../../../../components/common/CustomBootstrap';\r\nimport EditProfileActions from './EditProfileActions';\r\nimport UserCard from './UserCard';\r\nimport useFetch from '../../../../hooks/use-fetch';\r\nimport { getCurrentUser, getProfileData } from '../../../../helpers/Utils';\r\nimport AppError from '../../../../helpers/AppError';\r\nimport HackCard from '../../../../containers/application/HackathonCard';\r\n\r\nconst ProfileView = ({ match, currentUser}) => {\r\n  const { id } = getCurrentUser();\r\n  const profileData = getProfileData();\r\n  const { loading, data, error } = useFetch(`/getHackathonList/${id}`);\r\n\r\n\r\n  if (loading) return <div className=\"loading\" />;\r\n\r\n  if (error) throw new AppError(error);\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Colxx xxs=\"12\">\r\n          <Row>\r\n            <Colxx className=\"mb-0\">\r\n              <h1>{profileData ? profileData.organization_name : \"NO\"}</h1>\r\n              <EditProfileActions />\r\n            </Colxx>\r\n          </Row>\r\n\r\n          <Breadcrumb match={match} />\r\n\r\n          <Row>\r\n            <Colxx xxs=\"12\" lg=\"12\" className=\"mb-4 col-left\">\r\n              <UserCard currentUser={currentUser} />\r\n            </Colxx>\r\n            <Colxx xxs=\"12\" lg=\"7\" className=\"mb-4 col-right\">\r\n              <Row>\r\n              {data.map((item) => {\r\n                if(item.name !== undefined){\r\n                return <Colxx xxs=\"12\" sm=\"6\" md=\"6\" key={item.id} >\r\n                  <HackCard data={item} showEdit={item.submit_status === 0} />\r\n                </Colxx>\r\n                }\r\n                return null;\r\n              })}\r\n                \r\n              </Row>\r\n            </Colxx>\r\n          </Row>\r\n        </Colxx>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ authUser }) => {\r\n  const { currentUser, profileData } = authUser;\r\n  return { currentUser, profileData };\r\n};\r\n\r\nconst mapActionsToProps = {};\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(ProfileView);\r\n"],"sourceRoot":""}