{"version":3,"sources":["containers/navs/Breadcrumb.js","components/Popups/Popups.js","components/Timeline/Pages/Dragdrop..js","helpers/ThemeColors.js","data/charts.js","components/charts/util.js","components/charts/config.js","components/charts/Bar.js","components/carousel/GlideComponent.js","views/app/Dashboard.js"],"names":["getMenuTitle","sub","adminRoot","id","getUrl","path","split","BreadcrumbItems","match","substr","paths","filter","Boolean","length","indexOf","x","className","map","index","active","to","BreadcrumbContainer","heading","Popups","props","actionSet","useHistory","useState","useEffect","modal","setModal","hackName","setHackName","hackType","setHackType","toggle","console","log","color","onClick","isOpen","for","type","name","placeholder","onChange","text","e","target","value","onChangeHandler","style","width","height","userId","JSON","parse","window","localStorage","getItem","data","organizer_id","hackathon_type_id","axios","post","apiUri","then","response","baseStyle","display","flexDirection","alignItems","padding","borderWidth","borderRadius","borderColor","borderStyle","backgroundColor","transition","activeStyle","acceptStyle","rejectStyle","DropzoneComponent","files","setFiles","onDrop","useCallback","acceptedFiles","file","Object","assign","preview","URL","createObjectURL","useDropzone","accept","size","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","useMemo","thumbs","src","alt","forEach","revokeObjectURL","ThemeColors","rootStyle","getComputedStyle","document","body","themeColor1","getPropertyValue","trim","themeColor2","themeColor3","themeColor4","themeColor5","themeColor6","themeColor1_10","themeColor2_10","themeColor3_10","themeColor4_10","themeColor5_10","themeColor6_10","primaryColor","foregroundColor","separatorColor","colors","BarChartData","labels","datasets","label","chartTooltip","titleFontColor","bodyFontColor","bodySpacing","xPadding","yPadding","cornerRadius","barChartOptions","legend","position","usePointStyle","fontSize","responsive","maintainAspectRatio","scales","yAxes","gridLines","lineWidth","drawBorder","ticks","beginAtZero","stepSize","min","max","xAxes","tooltips","ChartData","Bar","shadow","chartContainer","useRef","setChartInstance","current","defaults","global","barWithShadow","bar","controllers","extend","draw","ease","prototype","call","this","ctx","chart","save","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","apply","arguments","restore","newChartInstance","getContext","options","ref","resizeTimeOut","mountTimeOut","GlideComponent","carousel","glideCarousel","onResize","clearTimeout","setTimeout","update","Glide","settings","direction","getDirection","mount","on","event","createEvent","initEvent","dispatchEvent","destroy","node","data-glide-el","children","hideNav","data-glide-dir","total","React","Children","count","dots","i","push","renderDots","defaultProps","Dashboard","Row","xxs","Breadcrumb","xl"],"mappings":"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","file":"static/js/viwes-blank-page.f38c7060.chunk.js","sourcesContent":["/* eslint-disable react/no-array-index-key */\r\nimport React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport IntlMessages from '../../helpers/IntlMessages';\r\nimport { adminRoot } from '../../constants/defaultValues';\r\n\r\nconst getMenuTitle = (sub) => {\r\n  if (`/${sub}` === adminRoot) return <IntlMessages id=\"menu.home\" />;\r\n  return <IntlMessages id={`menu.${sub}`} />;\r\n};\r\n\r\nconst getUrl = (path, sub) => {\r\n  return path.split(sub)[0] + sub;\r\n};\r\n\r\nconst BreadcrumbContainer = ({ heading, match }) => {\r\n  return (\r\n    <>\r\n      {heading && (\r\n        <h1>\r\n          <IntlMessages id={heading} />\r\n        </h1>\r\n      )}\r\n      <BreadcrumbItems match={match} />\r\n    </>\r\n  );\r\n};\r\n\r\nconst BreadcrumbItems = ({ match }) => {\r\n  const path = match.path.substr(1);\r\n  let paths = path.split('/').filter(Boolean);\r\n\r\n  if (paths[paths.length - 1].indexOf(':') > -1) {\r\n    paths = paths.filter((x) => x.indexOf(':') === -1);\r\n  }\r\n  return (\r\n    <>\r\n      <Breadcrumb className=\"pt-0 breadcrumb-container d-none d-sm-block d-lg-inline-block\">\r\n        {paths.map((sub, index) => {\r\n          return (\r\n            <BreadcrumbItem key={index} active={paths.length === index + 1}>\r\n              {paths.length !== index + 1 ? (\r\n                <NavLink to={`/${getUrl(path, sub, index)}`}>\r\n                  {getMenuTitle(sub)}\r\n                </NavLink>\r\n              ) : (\r\n                getMenuTitle(sub)\r\n              )}\r\n            </BreadcrumbItem>\r\n          );\r\n        })}\r\n      </Breadcrumb>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BreadcrumbContainer;\r\n","import React, { useState, useEffect} from 'react';\r\nimport {BrowserRouter as Router, useHistory} from 'react-router-dom';\r\nimport {Button, Modal, ModalHeader, ModalBody, ModalFooter,Form, FormGroup, Label, Input} from 'reactstrap';\r\nimport axios from 'axios';\r\nimport { apiUri } from '../../constants/defaultValues';\r\n\r\nconst Popups = (props) => {\r\n  const {\r\n    className, actionSet\r\n  } = props;\r\n   \r\n  const history=useHistory();\r\n  const handleHistory=()=>{\r\n      history.push(\"/Multiple1\");\r\n  }\r\n  \r\n  const [hackData, SetChallengeList] = useState([])\r\n  useEffect(() => {\r\n  }, []);\r\n\r\n  const [modal, setModal] = useState(false);\r\n  const [hackName, setHackName] = useState(null);\r\n  const [hackType, setHackType] = useState(null);\r\n\r\n  const addHackathon = () => {\r\n    const userId = JSON.parse(window.localStorage.getItem('sn_user'));\r\n    console.log('user Id', userId)\r\n    const data = {\r\n      name: hackName,\r\n      organizer_id: userId.id,\r\n      hackathon_type_id: hackType\r\n    }\r\n    \r\n    axios.post(apiUri+'/createHackathon', data).then((response) => {\r\n      const dataItem = response.data;\r\n      setModal(false)\r\n      props.actionSet()\r\n    });\r\n  }\r\n  const toggle = () => setModal(!modal);\r\n  const hackTypeChange =(e) => {\r\n    setHackType(e.target.value);\r\n  }\r\n  const onChangeHandler = (e) => {\r\n    var filter = e.target.value;\r\n    setHackName(filter)\r\n  };\r\n  console.log(hackType, hackName)\r\n  return (\r\n    <div>\r\n           \r\n      <Button color=\"primary\" onClick={toggle}>Organize Hackathon</Button>\r\n      <Modal isOpen={modal} toggle={toggle} className={className}>\r\n        <ModalHeader toggle={toggle}>\r\n            <h6>Great Decision</h6>\r\n            <h1>Lets get you started</h1>\r\n        </ModalHeader>\r\n        <ModalBody>\r\n        <Form>\r\n      <FormGroup>\r\n        <Label for=\"OrganizerName\">Name</Label>\r\n        <Input type=\"text\" name=\"Name\" id=\"organizerName\" placeholder=\"Enter Your Name\" onChange={(text) => onChangeHandler(text)} />\r\n      </FormGroup>\r\n\r\n      <FormGroup>\r\n        <Label for=\"Hackathon\">Hackathon</Label>\r\n        {/* <Input type=\"select\" name=\"Hackathon\" id=\"Hackathon\">\r\n          <option>Online</option>\r\n          <option>Offline</option>\r\n         \r\n        </Input> */}\r\n        <select \r\n            value={hackType} \r\n            onChange={hackTypeChange} \r\n          style={{width: '100%', height: '30%'}}>\r\n          <option value=\"0\">Select Hackathon Type</option>\r\n          <option value=\"1\">Online</option>\r\n            <option value=\"2\">Blenders</option>\r\n            <option value=\"3\">Offline</option>\r\n          </select>\r\n          \r\n      </FormGroup>\r\n      </Form>\r\n          </ModalBody>\r\n        <ModalFooter>\r\n            <Router>\r\n          <Button  color=\"primary\" onClick={addHackathon}>Begin</Button></Router>\r\n          <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n     \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Popups;","import React, { useCallback, useEffect, useMemo, useState } from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\n\r\nconst baseStyle = {\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  alignItems: 'center',\r\n  padding: '20px',\r\n  borderWidth: 2,\r\n  borderRadius: 2,\r\n  borderColor: '#eeeeee',\r\n  borderStyle: 'dashed',\r\n  backgroundColor: '#fafafa',\r\n  color: '#bdbdbd',\r\n  transition: 'border .3s ease-in-out'\r\n};\r\n\r\nconst activeStyle = {\r\n  borderColor: '#2196f3'\r\n};\r\n\r\nconst acceptStyle = {\r\n  borderColor: '#00e676'\r\n};\r\n\r\nconst rejectStyle = {\r\n  borderColor: '#ff1744'\r\n};\r\n\r\nfunction DropzoneComponent() {\r\n  const [files, setFiles] = useState([]);\r\n\r\n  const onDrop = useCallback(acceptedFiles => {\r\n    setFiles(acceptedFiles.map(file => Object.assign(file, {\r\n      preview: URL.createObjectURL(file)\r\n    })));\r\n  }, []);\r\n\r\n  const {\r\n    getRootProps,\r\n    getInputProps,\r\n    isDragActive,\r\n    isDragAccept,\r\n    isDragReject\r\n  } = useDropzone({\r\n    onDrop,\r\n    accept: 'image/jpeg, image/png',\r\n    size:'300px*200px'\r\n  });\r\n\r\n  const style = useMemo(() => ({\r\n    ...baseStyle,\r\n    ...(isDragActive ? activeStyle : {}),\r\n    ...(isDragAccept ? acceptStyle : {}),\r\n    ...(isDragReject ? rejectStyle : {})\r\n  }), [\r\n    isDragActive,\r\n    isDragReject,\r\n    isDragAccept\r\n  ]);\r\n\r\n  const thumbs = files.map(file => (\r\n    <div key={file.name}>\r\n      <img\r\n        src={file.preview}\r\n        alt={file.name}\r\n      />\r\n    </div>\r\n  ));\r\n\r\n  // clean up\r\n  useEffect(() => () => {\r\n    files.forEach(file => URL.revokeObjectURL(file.preview));\r\n  }, [files]);\r\n\r\n  return (\r\n    <section>\r\n      <div {...getRootProps({style})}>\r\n        <input {...getInputProps()} />\r\n        <div>Drag and drop or click to choose</div>\r\n      </div>\r\n      <aside>\r\n        {thumbs}\r\n      </aside>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default DropzoneComponent;","/* eslint-disable import/prefer-default-export */\r\nexport const ThemeColors = () => {\r\n    const rootStyle = getComputedStyle(document.body);\r\n    return {\r\n      themeColor1: rootStyle.getPropertyValue('--theme-color-1').trim(),\r\n      themeColor2: rootStyle.getPropertyValue('--theme-color-2').trim(),\r\n      themeColor3: rootStyle.getPropertyValue('--theme-color-3').trim(),\r\n      themeColor4: rootStyle.getPropertyValue('--theme-color-4').trim(),\r\n      themeColor5: rootStyle.getPropertyValue('--theme-color-5').trim(),\r\n      themeColor6: rootStyle.getPropertyValue('--theme-color-6').trim(),\r\n      themeColor1_10: rootStyle.getPropertyValue('--theme-color-1-10').trim(),\r\n      themeColor2_10: rootStyle.getPropertyValue('--theme-color-2-10').trim(),\r\n      themeColor3_10: rootStyle.getPropertyValue('--theme-color-3-10').trim(),\r\n      themeColor4_10: rootStyle.getPropertyValue('--theme-color-3-10').trim(),\r\n      themeColor5_10: rootStyle.getPropertyValue('--theme-color-3-10').trim(),\r\n      themeColor6_10: rootStyle.getPropertyValue('--theme-color-3-10').trim(),\r\n      primaryColor: rootStyle.getPropertyValue('--primary-color').trim(),\r\n      foregroundColor: rootStyle.getPropertyValue('--foreground-color').trim(),\r\n      separatorColor: rootStyle.getPropertyValue('--separator-color').trim(),\r\n    };\r\n  };\r\n  ","import { ThemeColors } from '../helpers/ThemeColors';\r\n\r\nconst colors = ThemeColors();\r\n\r\nexport const lineChartData = {\r\n  labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\r\n  datasets: [\r\n    {\r\n      label: '',\r\n      data: [54, 63, 60, 65, 60, 68, 60],\r\n      borderColor: colors.themeColor1,\r\n      pointBackgroundColor: colors.foregroundColor,\r\n      pointBorderColor: colors.themeColor1,\r\n      pointHoverBackgroundColor: colors.themeColor1,\r\n      pointHoverBorderColor: colors.foregroundColor,\r\n      pointRadius: 6,\r\n      pointBorderWidth: 2,\r\n      pointHoverRadius: 8,\r\n      fill: false,\r\n    },\r\n  ],\r\n};\r\n\r\nexport const polarAreaChartData = {\r\n  labels: ['Sales', 'Orders', 'Stock'],\r\n  datasets: [\r\n    {\r\n      data: [80, 90, 70],\r\n      borderWidth: 2,\r\n      borderColor: [colors.themeColor1, colors.themeColor2, colors.themeColor3],\r\n      backgroundColor: [\r\n        colors.themeColor1_10,\r\n        colors.themeColor2_10,\r\n        colors.themeColor3_10,\r\n      ],\r\n    },\r\n  ],\r\n};\r\n\r\nexport const areaChartData = {\r\n  labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\r\n  datasets: [\r\n    {\r\n      label: '',\r\n      data: [54, 63, 60, 65, 60, 68, 60],\r\n      borderColor: colors.themeColor1,\r\n      pointBackgroundColor: colors.foregroundColor,\r\n      pointBorderColor: colors.themeColor1,\r\n      pointHoverBackgroundColor: colors.themeColor1,\r\n      pointHoverBorderColor: colors.foregroundColor,\r\n      pointRadius: 4,\r\n      pointBorderWidth: 2,\r\n      pointHoverRadius: 5,\r\n      fill: true,\r\n      borderWidth: 2,\r\n      backgroundColor: colors.themeColor1_10,\r\n    },\r\n  ],\r\n};\r\n\r\nexport const scatterChartData = {\r\n  datasets: [\r\n    {\r\n      borderWidth: 2,\r\n      showLine: false,\r\n      label: 'Cakes',\r\n      borderColor: colors.themeColor1,\r\n      backgroundColor: colors.themeColor1_10,\r\n      data: [\r\n        { x: 62, y: -78 },\r\n        { x: -0, y: 74 },\r\n        { x: -67, y: 45 },\r\n        { x: -26, y: -43 },\r\n        { x: -15, y: -30 },\r\n        { x: 65, y: -68 },\r\n        { x: -28, y: -61 },\r\n      ],\r\n    },\r\n    {\r\n      borderWidth: 2,\r\n      showLine: false,\r\n      label: 'Desserts',\r\n      borderColor: colors.themeColor2,\r\n      backgroundColor: colors.themeColor2_10,\r\n      data: [\r\n        { x: 79, y: 62 },\r\n        { x: 62, y: 0 },\r\n        { x: -76, y: -81 },\r\n        { x: -51, y: 41 },\r\n        { x: -9, y: 9 },\r\n        { x: 72, y: -37 },\r\n        { x: 62, y: -26 },\r\n      ],\r\n    },\r\n  ],\r\n};\r\n\r\nexport const BarChartData = {\r\n  labels: ['January', 'February', 'March', 'April', 'May', 'June'],\r\n  datasets: [\r\n    {\r\n      label: 'Cakes',\r\n      borderColor: colors.themeColor1,\r\n      backgroundColor: colors.themeColor1_10,\r\n      data: [456, 479, 324, 569, 702, 600],\r\n      borderWidth: 2,\r\n    },\r\n    {\r\n      label: 'Desserts',\r\n      borderColor: colors.themeColor2,\r\n      backgroundColor: colors.themeColor2_10,\r\n      data: [364, 504, 605, 400, 345, 320],\r\n      borderWidth: 2,\r\n    },\r\n  ],\r\n};\r\n\r\nexport const radarChartData = {\r\n  datasets: [\r\n    {\r\n      label: 'Stock',\r\n      borderWidth: 2,\r\n      pointBackgroundColor: colors.themeColor1,\r\n      borderColor: colors.themeColor1,\r\n      backgroundColor: colors.themeColor1_10,\r\n      data: [80, 90, 70],\r\n    },\r\n    {\r\n      label: 'Order',\r\n      borderWidth: 2,\r\n      pointBackgroundColor: colors.themeColor2,\r\n      borderColor: colors.themeColor2,\r\n      backgroundColor: colors.themeColor2_10,\r\n      data: [68, 80, 95],\r\n    },\r\n  ],\r\n  labels: ['Cakes', 'Desserts', 'Cupcakes'],\r\n};\r\n\r\nexport const pieChartData = {\r\n  labels: ['Cakes', 'Cupcakes', 'Desserts'],\r\n  datasets: [\r\n    {\r\n      label: '',\r\n      borderColor: [colors.themeColor1, colors.themeColor2, colors.themeColor3],\r\n      backgroundColor: [\r\n        colors.themeColor1_10,\r\n        colors.themeColor2_10,\r\n        colors.themeColor3_10,\r\n      ],\r\n      borderWidth: 2,\r\n      data: [15, 25, 20],\r\n    },\r\n  ],\r\n};\r\n\r\nexport const doughnutChartData = {\r\n  labels: ['Cakes', 'Cupcakes', 'Desserts'],\r\n  datasets: [\r\n    {\r\n      label: '',\r\n      borderColor: [colors.themeColor3, colors.themeColor2, colors.themeColor1],\r\n      backgroundColor: [\r\n        colors.themeColor3_10,\r\n        colors.themeColor2_10,\r\n        colors.themeColor1_10,\r\n      ],\r\n      borderWidth: 2,\r\n      data: [15, 25, 20],\r\n    },\r\n  ],\r\n};\r\n\r\nexport const smallChartData1 = {\r\n  labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\r\n  datasets: [\r\n    {\r\n      label: 'Total Orders',\r\n      borderColor: colors.themeColor1,\r\n      pointBorderColor: colors.themeColor1,\r\n      pointHoverBackgroundColor: colors.themeColor1,\r\n      pointHoverBorderColor: colors.themeColor1,\r\n      pointRadius: 2,\r\n      pointBorderWidth: 3,\r\n      pointHoverRadius: 2,\r\n      fill: false,\r\n      borderWidth: 2,\r\n      data: [1250, 1300, 1550, 921, 1810, 1106, 1610],\r\n      datalabels: {\r\n        align: 'end',\r\n        anchor: 'end',\r\n      },\r\n    },\r\n  ],\r\n};\r\n\r\nexport const smallChartData2 = {\r\n  labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\r\n  datasets: [\r\n    {\r\n      label: 'Pending Orders',\r\n      borderColor: colors.themeColor1,\r\n      pointBorderColor: colors.themeColor1,\r\n      pointHoverBackgroundColor: colors.themeColor1,\r\n      pointHoverBorderColor: colors.themeColor1,\r\n      pointRadius: 2,\r\n      pointBorderWidth: 3,\r\n      pointHoverRadius: 2,\r\n      fill: false,\r\n      borderWidth: 2,\r\n      data: [115, 120, 300, 222, 105, 85, 36],\r\n      datalabels: {\r\n        align: 'end',\r\n        anchor: 'end',\r\n      },\r\n    },\r\n  ],\r\n};\r\n\r\nexport const smallChartData3 = {\r\n  labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\r\n  datasets: [\r\n    {\r\n      label: 'Total Orders',\r\n      borderColor: colors.themeColor1,\r\n      pointBorderColor: colors.themeColor1,\r\n      pointHoverBackgroundColor: colors.themeColor1,\r\n      pointHoverBorderColor: colors.themeColor1,\r\n      pointRadius: 2,\r\n      pointBorderWidth: 3,\r\n      pointHoverRadius: 2,\r\n      fill: false,\r\n      borderWidth: 2,\r\n      data: [350, 452, 762, 952, 630, 85, 158],\r\n      datalabels: {\r\n        align: 'end',\r\n        anchor: 'end',\r\n      },\r\n    },\r\n  ],\r\n};\r\n\r\nexport const smallChartData4 = {\r\n  labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\r\n  datasets: [\r\n    {\r\n      label: 'Total Orders',\r\n      borderColor: colors.themeColor1,\r\n      pointBorderColor: colors.themeColor1,\r\n      pointHoverBackgroundColor: colors.themeColor1,\r\n      pointHoverBorderColor: colors.themeColor1,\r\n      pointRadius: 2,\r\n      pointBorderWidth: 3,\r\n      pointHoverRadius: 2,\r\n      fill: false,\r\n      borderWidth: 2,\r\n      data: [200, 452, 250, 630, 125, 85, 20],\r\n      datalabels: {\r\n        align: 'end',\r\n        anchor: 'end',\r\n      },\r\n    },\r\n  ],\r\n};\r\n\r\nexport const conversionChartData = {\r\n  labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\r\n  datasets: [\r\n    {\r\n      label: '',\r\n      data: [65, 60, 68, 60, 58, 63, 60],\r\n      borderColor: colors.themeColor2,\r\n      pointBackgroundColor: colors.foregroundColor,\r\n      pointBorderColor: colors.themeColor2,\r\n      pointHoverBackgroundColor: colors.themeColor2,\r\n      pointHoverBorderColor: colors.foregroundColor,\r\n      pointRadius: 4,\r\n      pointBorderWidth: 2,\r\n      pointHoverRadius: 5,\r\n      fill: true,\r\n      borderWidth: 2,\r\n      backgroundColor: colors.themeColor2_10,\r\n    },\r\n  ],\r\n};\r\n","import { ThemeColors } from '../../helpers/ThemeColors';\r\n\r\nexport const chartTooltip = {\r\n  backgroundColor: ThemeColors().foregroundColor,\r\n  titleFontColor: ThemeColors().primaryColor,\r\n  borderColor: ThemeColors().separatorColor,\r\n  borderWidth: 0.5,\r\n  bodyFontColor: ThemeColors().primaryColor,\r\n  bodySpacing: 10,\r\n  xPadding: 15,\r\n  yPadding: 15,\r\n  cornerRadius: 0.15,\r\n};\r\n\r\nexport const centerTextPlugin = {\r\n  afterDatasetsUpdate() {},\r\n  beforeDraw(chart) {\r\n    const width = chart.chartArea.right;\r\n    const height = chart.chartArea.bottom;\r\n    const { ctx } = chart.chart;\r\n    ctx.restore();\r\n\r\n    let activeLabel = chart.data.labels[0];\r\n    let activeValue = chart.data.datasets[0].data[0];\r\n    let dataset = chart.data.datasets[0];\r\n    // eslint-disable-next-line no-underscore-dangle\r\n    let meta = dataset._meta[Object.keys(dataset._meta)[0]];\r\n    let { total } = meta;\r\n\r\n    let activePercentage = parseFloat(((activeValue / total) * 100).toFixed(1));\r\n    activePercentage = chart.legend.legendItems[0].hidden\r\n      ? 0\r\n      : activePercentage;\r\n\r\n    if (chart.pointAvailable) {\r\n      activeLabel = chart.data.labels[chart.pointIndex];\r\n      activeValue =\r\n        chart.data.datasets[chart.pointDataIndex].data[chart.pointIndex];\r\n\r\n      dataset = chart.data.datasets[chart.pointDataIndex];\r\n      // eslint-disable-next-line no-underscore-dangle\r\n      meta = dataset._meta[Object.keys(dataset._meta)[0]];\r\n      total = meta.total;\r\n      activePercentage = parseFloat(((activeValue / total) * 100).toFixed(1));\r\n      activePercentage = chart.legend.legendItems[chart.pointIndex].hidden\r\n        ? 0\r\n        : activePercentage;\r\n    }\r\n\r\n    ctx.font = '36px Nunito, sans-serif';\r\n    ctx.fillStyle = ThemeColors().primaryColor;\r\n    ctx.textBaseline = 'middle';\r\n\r\n    const text = `${activePercentage}%`;\r\n    const textX = Math.round((width - ctx.measureText(text).width) / 2);\r\n    const textY = height / 2;\r\n    ctx.fillText(text, textX, textY);\r\n\r\n    ctx.font = '14px Nunito, sans-serif';\r\n    ctx.textBaseline = 'middle';\r\n\r\n    const text2 = activeLabel;\r\n    const textX2 = Math.round((width - ctx.measureText(text2).width) / 2);\r\n    const textY2 = height / 2 - 30;\r\n    ctx.fillText(text2, textX2, textY2);\r\n\r\n    ctx.save();\r\n  },\r\n  // eslint-disable-next-line no-unused-vars\r\n  beforeEvent(chart, event, options) {\r\n    const firstPoint = chart.getElementAtEvent(event)[0];\r\n\r\n    if (firstPoint) {\r\n      // eslint-disable-next-line no-underscore-dangle,no-param-reassign\r\n      chart.pointIndex = firstPoint._index;\r\n      // eslint-disable-next-line no-underscore-dangle,no-param-reassign\r\n      chart.pointDataIndex = firstPoint._datasetIndex;\r\n      // eslint-disable-next-line no-param-reassign\r\n      chart.pointAvailable = true;\r\n    }\r\n  },\r\n};\r\n","import { chartTooltip } from './util';\r\n\r\nexport const lineChartOptions = {\r\n  legend: {\r\n    display: false,\r\n  },\r\n  responsive: true,\r\n  maintainAspectRatio: false,\r\n  tooltips: chartTooltip,\r\n  plugins: {\r\n    datalabels: {\r\n      display: false,\r\n    },\r\n  },\r\n  scales: {\r\n    yAxes: [\r\n      {\r\n        gridLines: {\r\n          display: true,\r\n          lineWidth: 1,\r\n          color: 'rgba(0,0,0,0.1)',\r\n          drawBorder: false,\r\n        },\r\n        ticks: {\r\n          beginAtZero: true,\r\n          stepSize: 5,\r\n          min: 50,\r\n          max: 70,\r\n          padding: 20,\r\n        },\r\n      },\r\n    ],\r\n    xAxes: [\r\n      {\r\n        gridLines: {\r\n          display: false,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n};\r\nexport const polarAreaChartOptions = {\r\n  legend: {\r\n    position: 'bottom',\r\n    labels: {\r\n      padding: 30,\r\n      usePointStyle: true,\r\n      fontSize: 12,\r\n    },\r\n  },\r\n  responsive: true,\r\n  maintainAspectRatio: false,\r\n  scale: {\r\n    ticks: {\r\n      display: false,\r\n    },\r\n  },\r\n  plugins: {\r\n    datalabels: {\r\n      display: false,\r\n    },\r\n  },\r\n  tooltips: chartTooltip,\r\n};\r\n\r\nexport const areaChartOptions = {\r\n  legend: {\r\n    display: false,\r\n  },\r\n  responsive: true,\r\n  maintainAspectRatio: false,\r\n  tooltips: chartTooltip,\r\n  scales: {\r\n    yAxes: [\r\n      {\r\n        gridLines: {\r\n          display: true,\r\n          lineWidth: 1,\r\n          color: 'rgba(0,0,0,0.1)',\r\n          drawBorder: false,\r\n        },\r\n        ticks: {\r\n          beginAtZero: true,\r\n          stepSize: 5,\r\n          min: 50,\r\n          max: 70,\r\n          padding: 20,\r\n        },\r\n      },\r\n    ],\r\n    xAxes: [\r\n      {\r\n        gridLines: {\r\n          display: false,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nexport const scatterChartOptions = {\r\n  legend: {\r\n    position: 'bottom',\r\n    labels: {\r\n      padding: 30,\r\n      usePointStyle: true,\r\n      fontSize: 12,\r\n    },\r\n  },\r\n  responsive: true,\r\n  maintainAspectRatio: false,\r\n  scales: {\r\n    yAxes: [\r\n      {\r\n        gridLines: {\r\n          display: true,\r\n          lineWidth: 1,\r\n          color: 'rgba(0,0,0,0.1)',\r\n          drawBorder: false,\r\n        },\r\n        ticks: {\r\n          beginAtZero: true,\r\n          stepSize: 20,\r\n          min: -80,\r\n          max: 80,\r\n          padding: 20,\r\n        },\r\n      },\r\n    ],\r\n    xAxes: [\r\n      {\r\n        gridLines: {\r\n          display: true,\r\n          lineWidth: 1,\r\n          color: 'rgba(0,0,0,0.1)',\r\n        },\r\n      },\r\n    ],\r\n  },\r\n  tooltips: chartTooltip,\r\n\r\n  // legend: {\r\n  //   position: 'bottom',\r\n  //   labels: {\r\n  //     padding: 30,\r\n  //     usePointStyle: true,\r\n  //     fontSize: 12,\r\n  //   },\r\n  // },\r\n  // responsive: true,\r\n  // maintainAspectRatio: false,\r\n  // scales: {\r\n  //   yAxes: [\r\n  //     {\r\n  //       gridLines: {\r\n  //         display: true,\r\n  //         lineWidth: 1,\r\n  //         color: 'rgba(0,0,0,0.1)',\r\n  //         drawBorder: false,\r\n  //       },\r\n  //       ticks: {\r\n  //         beginAtZero: true,\r\n  //         stepSize: 20,\r\n  //         min: -80,\r\n  //         max: 80,\r\n  //         padding: 20,\r\n  //       },\r\n  //     },\r\n  //   ],\r\n  //   xAxes: [\r\n  //     {\r\n  //       gridLines: {\r\n  //         display: true,\r\n  //         lineWidth: 1,\r\n  //         color: 'rgba(0,0,0,0.1)',\r\n  //       },\r\n  //     },\r\n  //   ],\r\n  // },\r\n};\r\n\r\nexport const barChartOptions = {\r\n  legend: {\r\n    position: 'bottom',\r\n    labels: {\r\n      padding: 30,\r\n      usePointStyle: true,\r\n      fontSize: 12,\r\n    },\r\n  },\r\n  responsive: true,\r\n  maintainAspectRatio: false,\r\n  scales: {\r\n    yAxes: [\r\n      {\r\n        gridLines: {\r\n          display: true,\r\n          lineWidth: 1,\r\n          color: 'rgba(0,0,0,0.1)',\r\n          drawBorder: false,\r\n        },\r\n        ticks: {\r\n          beginAtZero: true,\r\n          stepSize: 100,\r\n          min: 300,\r\n          max: 800,\r\n          padding: 20,\r\n        },\r\n      },\r\n    ],\r\n    xAxes: [\r\n      {\r\n        gridLines: {\r\n          display: false,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n  tooltips: chartTooltip,\r\n};\r\n\r\nexport const radarChartOptions = {\r\n  legend: {\r\n    position: 'bottom',\r\n    labels: {\r\n      padding: 30,\r\n      usePointStyle: true,\r\n      fontSize: 12,\r\n    },\r\n  },\r\n  responsive: true,\r\n  maintainAspectRatio: false,\r\n  scale: {\r\n    ticks: {\r\n      display: false,\r\n    },\r\n  },\r\n  tooltips: chartTooltip,\r\n};\r\n\r\nexport const pieChartOptions = {\r\n  legend: {\r\n    position: 'bottom',\r\n    labels: {\r\n      padding: 30,\r\n      usePointStyle: true,\r\n      fontSize: 12,\r\n    },\r\n  },\r\n  responsive: true,\r\n  maintainAspectRatio: false,\r\n  title: {\r\n    display: false,\r\n  },\r\n  layout: {\r\n    padding: {\r\n      bottom: 20,\r\n    },\r\n  },\r\n  tooltips: chartTooltip,\r\n};\r\n\r\nexport const doughnutChartOptions = {\r\n  legend: {\r\n    position: 'bottom',\r\n    labels: {\r\n      padding: 30,\r\n      usePointStyle: true,\r\n      fontSize: 12,\r\n    },\r\n  },\r\n  responsive: true,\r\n  maintainAspectRatio: false,\r\n  title: {\r\n    display: false,\r\n  },\r\n  cutoutPercentage: 80,\r\n  layout: {\r\n    padding: {\r\n      bottom: 20,\r\n    },\r\n  },\r\n  tooltips: chartTooltip,\r\n};\r\n\r\nexport const smallLineChartOptions = {\r\n  layout: {\r\n    padding: {\r\n      left: 5,\r\n      right: 5,\r\n      top: 10,\r\n      bottom: 10,\r\n    },\r\n  },\r\n  responsive: true,\r\n  maintainAspectRatio: false,\r\n  legend: {\r\n    display: false,\r\n  },\r\n  scales: {\r\n    yAxes: [\r\n      {\r\n        ticks: {\r\n          beginAtZero: true,\r\n        },\r\n        display: false,\r\n      },\r\n    ],\r\n    xAxes: [\r\n      {\r\n        display: false,\r\n      },\r\n    ],\r\n  },\r\n};\r\n","/* eslint-disable prefer-rest-params */\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport {BarChartData} from '../../data/charts';\r\n\r\nimport { barChartOptions } from './config';\r\n\r\nfunction ChartData(){\r\n\r\n}\r\n\r\nconst Bar = ({ data, shadow = false }) => {\r\n  const chartContainer = useRef(null);\r\n  const [, setChartInstance] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (chartContainer && chartContainer.current) {\r\n      if (shadow) {\r\n        BarChartData.defaults.global.datasets.barWithShadow =\r\n        BarChartData.defaults.global.datasets.bar;\r\n        BarChartData.defaults.barWithShadow = BarChartData.defaults.bar;\r\n        BarChartData.controllers.barWithShadow = BarChartData.controllers.bar.extend({\r\n          draw(ease) {\r\n            BarChartData.controllers.bar.prototype.draw.call(this, ease);\r\n            const {\r\n              chart: { ctx },\r\n            } = this;\r\n            ctx.save();\r\n            ctx.shadowColor = 'rgba(0,0,0,0.2)';\r\n            ctx.shadowBlur = 7;\r\n            ctx.shadowOffsetX = 5;\r\n            ctx.shadowOffsetY = 7;\r\n            ctx.responsive = true;\r\n            BarChartData.controllers.bar.prototype.draw.apply(this, arguments);\r\n            ctx.restore();\r\n          },\r\n        });\r\n      }\r\n     \r\n      const context = chartContainer.current.getContext('2d');\r\n      const newChartInstance = new ChartData(context, {\r\n        type: shadow ? 'barWithShadow' : 'bar',\r\n        options: barChartOptions,\r\n        data,\r\n      });\r\n      setChartInstance(newChartInstance);\r\n    }\r\n  }, [chartContainer, data, shadow]);\r\n\r\n  return <canvas ref={chartContainer} />;\r\n};\r\n\r\nexport default Bar;\r\n","// eslint-disable react/forbid-prop-types\r\nimport React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Glide from '@glidejs/glide';\r\nimport { getDirection } from '../../helpers/Utils';\r\nimport '@glidejs/glide/dist/css/glide.core.min.css';\r\n\r\nlet resizeTimeOut = -1;\r\nlet mountTimeOut = -1;\r\n\r\nfunction GlideComponent(props) {\r\n  let carousel;\r\n  let glideCarousel;\r\n\r\n  const onResize = () => {\r\n    clearTimeout(resizeTimeOut);\r\n    resizeTimeOut = setTimeout(() => {\r\n      glideCarousel.update();\r\n      resizeTimeOut = -1;\r\n    }, 500);\r\n  };\r\n\r\n  const initGlide = () => {\r\n    glideCarousel = new Glide(carousel, {\r\n      ...props.settings,\r\n      direction: getDirection().direction,\r\n    });\r\n    glideCarousel.mount();\r\n    glideCarousel.on('resize', onResize);\r\n    mountTimeOut = setTimeout(() => {\r\n      const event = document.createEvent('HTMLEvents');\r\n      event.initEvent('resize', false, false);\r\n      window.dispatchEvent(event);\r\n    }, 500);\r\n  };\r\n\r\n  const destroyGlide = () => {\r\n    clearTimeout(resizeTimeOut);\r\n    clearTimeout(mountTimeOut);\r\n    if (glideCarousel) {\r\n      glideCarousel.destroy();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    initGlide();\r\n    return () => {\r\n      destroyGlide();\r\n    };\r\n    /* eslint-disable-next-line react-hooks/exhaustive-deps */\r\n  }, []);\r\n\r\n  const renderDots = () => {\r\n    const total = React.Children.count(props.children);\r\n    const dots = [];\r\n    // eslint-disable-next-line no-plusplus\r\n    for (let i = 0; i < total; i++) {\r\n      dots.push(\r\n        <button\r\n          type=\"button\"\r\n          className=\"glide__bullet slider-dot\"\r\n          key={i}\r\n          data-glide-dir={`=${i}`}\r\n        />\r\n      );\r\n    }\r\n    return dots;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* eslint-disable-next-line no-return-assign */}\r\n      <div className=\"glide\" ref={(node) => (carousel = node)}>\r\n        <div data-glide-el=\"track\" className=\"glide__track\">\r\n          {/* eslint-disable-next-line react/destructuring-assignment */}\r\n          <div className=\"glide__slides\">{props.children}</div>\r\n        </div>\r\n        {/* eslint-disable-next-line react/destructuring-assignment */}\r\n        {!props.settings.hideNav && (\r\n          <div className=\"glide__arrows slider-nav\" data-glide-el=\"controls\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"glide__arrow glide__arrow--left left-arrow btn btn-link\"\r\n              data-glide-dir=\"<\"\r\n            >\r\n              <i className=\"simple-icon-arrow-left\" />\r\n            </button>\r\n\r\n            <div\r\n              className=\"glide__bullets slider-dot-container\"\r\n              data-glide-el=\"controls[nav]\"\r\n            >\r\n              {renderDots()}\r\n            </div>\r\n\r\n            <button\r\n              type=\"button\"\r\n              className=\"glide__arrow glide__arrow--right right-arrow btn btn-link\"\r\n              data-glide-dir=\">\"\r\n            >\r\n              <i className=\"simple-icon-arrow-right\" />\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nGlideComponent.defaultProps = {\r\n  settings: {},\r\n};\r\n\r\nGlideComponent.propTypes = {\r\n  settings: PropTypes.shape({\r\n    type: PropTypes.string,\r\n    startAt: PropTypes.number,\r\n    perView: PropTypes.number,\r\n    focusAt: PropTypes.oneOf([PropTypes.number, PropTypes.string]),\r\n    gap: PropTypes.number,\r\n    autoplay: PropTypes.bool,\r\n    hoverpause: PropTypes.bool,\r\n    keyboard: PropTypes.bool,\r\n    bound: PropTypes.bool,\r\n    swipeThreshold: PropTypes.oneOf([PropTypes.number, PropTypes.bool]),\r\n    dragThreshold: PropTypes.oneOf([PropTypes.number, PropTypes.bool]),\r\n    perTouch: PropTypes.oneOf([PropTypes.number, PropTypes.bool]),\r\n    touchRatio: PropTypes.number,\r\n    touchAngle: PropTypes.number,\r\n    animationDuration: PropTypes.number,\r\n    rewind: PropTypes.bool,\r\n    rewindDuration: PropTypes.number,\r\n    animationTimingFunc: PropTypes.string,\r\n    direction: PropTypes.string,\r\n    // eslint-disable-next-line react/forbid-prop-types\r\n    peek: PropTypes.object,\r\n    // eslint-disable-next-line react/forbid-prop-types\r\n    breakpoints: PropTypes.object,\r\n    // eslint-disable-next-line react/forbid-prop-types\r\n    classes: PropTypes.object,\r\n    throttle: PropTypes.number,\r\n  }),\r\n  // id: PropTypes.string,\r\n  // className: PropTypes.string,\r\n};\r\n\r\nexport default GlideComponent;\r\n","import React from 'react';\r\nimport { Row, Card} from 'reactstrap';\r\n// import IntlMessages from '../../helpers/IntlMessages';\r\nimport { Colxx, Separator } from '../../components/common/CustomBootstrap';\r\nimport Breadcrumb from '../../containers/navs/Breadcrumb';\r\nimport Bar from '../../components/charts/Bar';\r\nimport Popups from '../../components/Popups/Popups';\r\nimport IconCardsCarousel from '../../containers/dashboards/IconCardsCarousel';\r\n\r\n\r\nconst Dashboard = ({ match }) => {\r\n\r\n  \r\n  return (\r\n    <>\r\n      <Row>\r\n        <Colxx xxs=\"9\">\r\n          <Breadcrumb heading=\"menu.dashboard\" match={match} />\r\n          <Separator className=\"mb-5\" />\r\n        </Colxx>\r\n        <Colxx xxs=\"3\">\r\n          {/* <Popups/> */}\r\n        \r\n        </Colxx>\r\n      </Row>\r\n      <Row>\r\n        <Colxx xxs=\"8\"  >\r\n         {/* <IconCardsCarousel/> */}\r\n      \r\n      \r\n        </Colxx>\r\n        <Colxx xxs=\"4\" xl=\"4\" >\r\n        {/* <Card className=\"dashboard-card1\" style={{borderRadius:\"7px\", height:\"250px\"}}>\r\n          <h1 className=\"dashcard\">Application for Review</h1>\r\n        </Card> */}\r\n        </Colxx>\r\n      </Row>\r\n\r\n      <Row>\r\n        <Colxx xxs={8}>\r\n           \r\n           <Bar/>      \r\n      </Colxx>\r\n        {/* <Colxx xxs={4} >\r\n            <Card style={{borderRadius:\"10px\", height:\"250px\", width:\"280px\",marginLeft:\"20%\",marginTop:\"10%\"}}>\r\n              <h3 className=\"cardtext\"><center style={{background:\"blue\"}}>Approved</center></h3>\r\n             \r\n                   \r\n            </Card>\r\n        </Colxx> */}\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"sourceRoot":""}